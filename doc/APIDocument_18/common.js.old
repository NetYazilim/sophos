// common i18n strings should come here
var Language = new Object();
Language.AddTitle = "Login Disclaimer";
Language.AcceptDescriptinon = "If you Agree, Click 'I Accept' to continue the access. ";
Language.DeclineDescriptinon = "If you Click 'I Decline', You will be logged out.";
Language.IAccept = "I Accept";
Language.Decline = "I Decline";
Language.ATPAddPageTitle = "Add Access Time Policy";	
Language.ATPUpdatePageTitle = "Edit Access Time Policy";	
Language.Name = "Name";	
Language.Strategy = "Strategy";	
Language.Allow = "Allow";	
Language.Deny = "Deny";	
Language.Schedule = "Schedule";	
Language.Description = "Description";	
Language.AccessPolicyName = "Access Time Policy Name";	
Language.Manage = "Manage";
Language.InternetUsage="Internet Usage";
Language.PolicyInformation="Policy Information";
Language.UserName="User Name";
Language.Group="Group";
Language.TimeAllocated="Time Allotted To User (HH)";
Language.GroupTimeAllocated="Time Allotted To Group (HH)";
Language.ExpiryDate="Expiry Date";
Language.GroupExpireDate="Surfing Quota Expiry Date For Group";
Language.TimeUsed="Internet Usage Time (HH:MM)";
Language.GroupTimeUsed="Time Used By Group (HH:MM)";
Language.Resource="Resource";
Language.UploadedData="Upload Data Transfer";
Language.DownloadedData="Download Data Transfer";
Language.DataTrasfer="Total Data Transfer";
Language.CycleUploadedData="Cycle Upload Data Transfer";
Language.CycleDownloadedData="Cycle Download Data Transfer";
Language.CycleDataTrasfer="Cycle Total Data Transfer";
Language.Alloted="Allotted";
Language.Used="Used";
Language.Remaining="Remaining";
Language.Unlimited="Unlimited";
Language.UsageInformation="Usage Information";
Language.GetInfo="Get Internet Usage Information For Month:";
Language.MonthInternetUsage="Internet Usage Details For Month";
Language.Year="Year";
Language.Submit="Submit";
Language.NAWithDot="N.A.";
Language.MB="MB";
Language.KB="KB";
Language.Daily="Daily";
Language.Weekly="Weekly";
Language.Monthly="Monthly";
Language.Yearly="Yearly";
Language.Noncyclic="Non-Cyclic";
Language.Current="Current";
Language.Expired="Expired";
Language.TotalTimeExpired="Total Time Expired";
Language.CycleTimeExpired="Cycle Time Expired";
Language.Cycle_Usage_Information="Cycle Usage Information";
Language.ViewUsageFor="View Usage For:";
Language.StartTime="Start Time";
Language.StopTime="Stop Time";
Language.UsedTime="Used Time";
Language.Usage="Usage";
Language.UsageUptoLastSession="Upto Last Session";
Language.CurrentSessionUsage="Current Session";
Language.TotalUsage="Total";
Language.ProfileTitleEdit = "Edit Profile";
Language.ProfileTitleCreate = "Add Profile";
Language.ACLDefinition = "Configuration";
Language.None = "None";
Language.ReadOnly = "Read-Only";
Language.ReadWrite = "Read-Write";
Language.Dashboard="Dashboard";
Language.Authentication="Authentication";
Language.OtherUsersConf="Other User Configuration";
Language.Groups="Groups";
Language.Policy="Policy";
Language.Wizard="Wizard";
Language.ConsoleaccessfromGUI="Console Access From GUI";
Language.SystemConfiguration="System";
Language.Profile="Profile";
Language.Backup="Backup";
Language.Restore="Restore";
Language.SystemGraphs="Diagnostics";
Language.Firmware="Firmware";
Language.Services="Services";
Language.Password="Password";
Language.Othersystemconfiguration="Other System Configuration";
Language.ObjectsConfiguration="Objects";
Language.DownloadCertificates="Download Certificates";
Language.OtherCertificateConfiguration="Other Certificate Configuration";
Language.ExportUsers="Export Users";
Language.NetworkConfigurations="Network";
Language.IdentityConfiguration="Identity";
Language.TestExternalServerConnectivity="Test External Server Connectivity";
Language.LiveUser="Live Users";
Language.Firewall="Firewall";
Language.VPNConfigurations="VPN";
Language.ConnectTunnel="Connect Tunnel";
Language.OtherVPNConfigurations="Other VPN Configurations";
Language.IPSConfigurations="IPS";
Language.IPSTitle = "Intrusion Prevention System"; 
Language.SignatureSearch="Signature Search";
Language.OtherIPSConfigurations="Other IPS Configurations";
Language.WebFilter="Web Filter";
Language.IM="IM";
Language.QoS="QoS";
Language.AntiVirus="Anti Virus";
Language.AntiSpam="Anti Spam";
Language.TrafficDiscovery="Traffic Discovery";
Language.LogsReports="Logs & Reports";
Language.LogViewer="Log Viewer";
Language.ReportsAccess="Reports Access";
Language.FourEyeAuthentication="4-Eye Authentication Settings";
Language.Deanonymization="De-Anonymization";
Language.Licensing="Licensing";
Language.Updates="Updates";
Language.RebootShutdown="Reboot/Shutdown";
Language.DownloadQuarantineMail="Download Quarantine Mail";
Language.OtherAntiVirusConfigurations="Other Anti Virus Configurations";
Language.OtherAntiSpamConfigurations="Other Anti Spam Configurations";
Language.DownloadReleaseQuarantineMail="Download/Release Quarantine Mail";
Language.CentralConsole="Central Management";
Language.ADSServerIP = "Server IP";
Language.ADSServerIPDomain = "Server IP / Domain";
Language.Port = "Port";
Language.NetBIOSDomain = "NetBIOS Domain";
Language.ServerName = "Server Name";
Language.ADSUsername = "ADS Username";
Language.IntegrationType = "Integration Type";
Language.LooseIntegration = "Loose Integration";
Language.TightIntegration = "Tight Integration";
Language.DomainName = "Domain Name";
Language.AddADSConfirmMessage = "Are you sure you want to add AD Server?";
Language.UpdateADSConfirmMessage = "Are you sure you want to update AD Server details?";
Language.AddActiveDirectory = "Add Active Directory";
Language.UpdateActiveDirectory = "Edit Active Directory";
Language.BtnMoveUp = "Move Up";
Language.BtnMoveDown = "Move Down";
Language.SearchQuery = "Search Query";
Language.InvalidSearchQueryMessage = "You must enter a valid search string.";
Language.ADTestConnConfMsg = "Are you sure you want to test the connectivity between the Appliance and AD server?";
Language.OneSearchQueryMessage = "You must enter at least one search query.";
Language.SearchQueries = "Search Queries";
Language.NetBIOSNameStartCharMsg="NetBIOS Domain name cannot start with '.'";
Language.NetBIOSNameEndCharMsg="NetBIOS Domain name cannot end with '.'";
Language.NetBIOSNameilligalCharMsg="NetBIOS Name cannot contain '/', '\\', ':', '*', '?', '\"', '<', '>', '|', ',' ";
Language.LocalLANAddress = "Local LAN Address";
Language.ShowNodes = "Show Nodes";
Language.NATLocalLAN  = "NAT Local LAN";
Language.NATedLAN = "NATed LAN";
Language.AddNetwork = "Add Network Address";
Language.AlreadyExist = "Host could not be added. IP Host with the same IP Address already exists, choose a different IP Address.";
Language.SelectedOneLocal = "You must select atleast one local LAN network.";
Language.SelectedOneNAT = "You must select atleast one NATed LAN.";
Language.SameLocalNATedAddr="Local and NATed LAN Address could not be same.\n Please select again!";
Language.LocalNatedLANPairExistMsg="The pair of Local subnet and NATed LAN already exists.";
Language.LocalNetworkExists="Local subnet already exists.";
Language.NATedLANExists="NATed LAN already exists.";
Language.LocalNetworkExistsInNATedLAN="Local subnet already exist in NATed LAN.";
Language.NATedLANExistsInLocal="NATed LAN already exist in Local subnet";
Language.AdminAuth="Administrator Authentication Methods";
Language.SameAsFirewall="Set Authentication Methods Same As Firewall";
Language.AuthServerSettingsConfMsg="Are you sure you want to update Administrator Authentication Settings?";
Language.AuthSerValidateMsg = "You must select at least one Authentication Server.";
Language.LimitMessage="You can select only 20 Authentication servers.";
Language.AuthenticationServerList="Authentication Server List";
Language.SelectedAuthenticationServer="Selected Authentication Server";
Language.MessageKey = "Message Key";
Language.Message = "Message";
Language.NotNewLine = "You cannot enter messages in a new line.";
Language.NotBlank = "You cannot save a blank message.";
Language.MaxLengthExceed = "Maximum 600 characters are allowed for message.";
Language.SMTP="SMTP";
Language.Administration = "Administration";
Language.SMSCustomization = "SMS Customization";
Language.DisclaimerMessage = "Disclaimer Message";
Language.IMsuspect="Privacy Notification To Suspect (After user has logged in)";
Language.IMnonsuspect="Privacy Notification To Non-Suspect (on the first message sent from either side)";
Language.IMmsgblock="Message Block Notification (to sender)";
Language.IMfiletransfer="File Transfer Block Notification (to sender)";
Language.IMvirusscan="Virus Scan Notification (to sender)";
Language.IMwebcamblock="Webcam Block Notification (to Inviter)";
Language.SMTPMailReject="Mail/Virus Rejection";
Language.SMTPSuspeciousReject="Suspected Infection";
Language.SMTPprotectedReject="Attachment Infection";
Language.SMTPNotifySender="Delivery Notification (to Sender)";
Language.SMTPSpamReject="Spam Rejection";
Language.SMTPProbSpamReject="Probable Spam Rejection";
Language.SMTPVODReject="Virus Outbreak Rejection";
Language.SMTPProbVODReject="Probable Virus Outbreak Rejection";
Language.SMTPSpamMailReject="Spam Mail Rejection";
Language.SMTPDomainReject="Email Domain Rejection";
Language.SMTPIPReject="IP Address Rejection";
Language.SMTPRBLReject="RBL Rejection";
Language.SMTPMailHeaderReject="Mail Header Rejection";
Language.SMTPOversizeMailReject="Oversized Mail Rejection";
Language.SMTPUnderSizeMailReject="Undersized Mail Rejection";
Language.LoggedOnSuccessfulMsg = "Logged On Successful Message";
Language.LoggedOffSuccessfulMsg = "Logged Off Successful Message";
Language.SurfingTimeExpired = "Surfing Time Expired";
Language.NotAuthenticate = "Not Authenticate";
Language.DeactiveUser = "Deactive User";
Language.InvalidMachine = "Invalid Machine";
Language.NotCurrentlyAllowed = "Not Currently Allowed";
Language.LoggedInFromSameIP = "Someone else is logged in from same IP Address";
Language.MaxLoginLimit = "Max Login Limit";
Language.SurfingTimeExhausted = "Surfing Time Exhausted";
Language.SessionTimeOut = "Logged Off Due To Session Time Out";
Language.DeleteUser = "Delete User";
Language.DisconnectUser = "Disconnect User";
Language.ClientLessUserLoginNotAllowed = "Clientless User Login Not Allowed";
Language.SMSFormatForGuestUser = "Default SMS Text";
Language.Settings="Settings";
Language.Port_Settings="Web Admin Settings";
Language.Web_Admin_Console_HTTP_Port="HTTP Port";
Language.Web_Admin_Console_HTTPS_Port="HTTPS Port";
Language.SSH_Port="SSH Port";
Language.Telnet_Port="Telnet Port";
Language.SSL_VPN_Port="SSL VPN Port";
Language.Remote_Login_Security_GUI_CLI="Remote Login Security (GUI/CLI)";
Language.Minutes_of_inactivity="Minutes Of Inactivity";
Language.Block_Admin_Login="Block Admin Login";
Language.After="After";
Language.unsuccesful_attempts_from_same_IP_in="Unsuccessful attempts from same IP in";
Language.Seconds_5_120="Seconds (5 - 120)";
Language.Block_login_access_for="Block login access for";
Language.Minutes_5_60="Minutes (5-60)";
Language.Local_Login_Security_Serial_Console="Local Login Security (Serial Console)";
Language.ApplyAdminConfMsg="Updating Administrator Settings may result in Appliance re-connection. Are you sure you want to update Administrator Settings?";
Language.ResetToDefaultConfirmMessage="Are you sure you want to reset Administrator Settings to default values?";
Language.AllUniquePort = "No two ports can have same value, choose unique port value for each port.";
Language.AllValidSSLVPNPort = "SSL VPN port value must be 443 or must be between 1025-65535.";
Language.validPort = "You must enter valid value between 1-65535 for ";
Language.SSLVPN_Settings="SSL VPN Settings";
Language.Certificate="Certificate";
Language.WebAdminCertificateExpired=" Web Admin Certificate has expired or is not yet valid";
Language.SSLVPNCertificateExpired=" SSL VPN Certificate has expired or is not yet valid";
Language.WebAdminCertMsg="(The above selected certificate will also be used for My Account & Captive Portal)";
Language.PasswodComplexity_Settings = "Administrator Password Complexity Settings";
Language.Enable_Password_Complexity_Check = "Enable Password Complexity Check";
Language.MinPasswordLength = "Minimum Password length can not be of 0 character.";
Language.PasswdLength = "Minimum Password length should be of";
Language.PasswordChar = "characters";
Language.Upper_LowerCaseChar = "Include atleast 1 each Upper and Lower case alphabetic characters";
Language.NumericChar = "Include atleast 1 numeric character";
Language.SpecialChar = "Include atleast 1 special character like '@', '$', '!', etc";
Language.PasswordComplexityMsg = "( Note: Password must not be a User Name ) ";
Language.Login_Disclaimer_Settings = "Login Disclaimer Settings";
Language.Enable_Access_Banner = "Enable Login Disclaimer";
Language.Modify_Disclaimer_Msg = "to modify the Disclaimer Message ( System-> Configuration-> Messages )";
Language.Preview_Disclaimer_Msg = "to Preview the Disclaimer Message";
Language.Click_Here = "Click Here";
Language.PwdLengthMsg = "Minimum Password length";
Language.Chk_Select_Msg = "Select atleast One Password Complexity Check";
Language.LoginSecurityLocalUsers = "Login Security (Local Admins)";
Language.UnsuccessAttemptFromSameIP=" unsuccessful attempts from same IP in ";
Language.Seconds5to120=" Seconds (1-120)";
Language.Minute5to60=" Minutes (1-60)";
Language.LoginSecurityRemoteUsers = "Login Security (Remote Admins)";
Language.MustEnterAttempts="You must enter number of unsuccessful login attempts.";
Language.UnsuccessAttemptsSeconds="You must enter number of seconds for which unsuccessful login attempts are allowed.";
Language.BlockLoginAccessMinutes="You must enter number of minutes for which login should be blocked.";
Language.MustEnterIntegerAttempts="You must enter Integer value of unsuccessful login attempts.";
Language.UnsuccessAttemptsIntegerSeconds="You must enter Integer value of seconds for which unsuccessful login attempts are allowed.";
Language.BlockLoginAccessIntegerMinutes="You must enter Integer value of minutes for which login should be blocked.";
Language.RemoteAttempts="Remote Users Attempt";
Language.Attempts1to5="Unsuccessful attempts must be between 1 to 5.";
Language.AttemptsInSeconds1to120="Unsuccessful attempts from same IP must be between 1 to 120 seconds.";
Language.BlockAccessMinutes1to60="Block login access must be between 1 to 60 minutes.";
Language.SelectServerCC="Select Server Certificate";
Language.LockAdminSession = "Lock Admin Session After";
Language.LogoutAdminSession = "Logout Admin Session After";
Language.Chk_Lock_logout_Min = "Lock Admin Session Minutes Must be less than Logout Admin Session Minutes.";
Language.LockValueMsg = "Lock Admin Session";
Language.LogoutValueMsg = "Logout Admin Session";
Language.InvalidLockMinutes= "You must enter valid Minutes to Lock Admin Session.";
Language.InvalidLogoutMinutes= "You must enter valid Minutes to Logout Admin Session.";
Language.SelectSSLVPNCert="You must select SSL VPN server certificate.";
Language.AliasAddHeader = "Add Alias";
Language.AliasEditHeader = "Edit Alias";
Language.PhysicalInterface = "Physical Interface";
Language.Alias = "Alias";
Language.TypeSingle = " Single";
Language.TypeRange = "Range";
Language.IPAddressRange = "IP Address Range";
Language.Netmask = "Netmask";
Language.AliasAddConfirmMessage = "Are you sure you want to add the Interface Alias?";
Language.AliasUpdateConfirmMessage = "Are you sure you want to update the Interface Alias?";
Language.AFCPageTitle = "Application Filter Category";
Language.CatName="Application";
Language.QoSPolicy = "QoS Policy";
Language.BWUsageType = "Bandwidth Usage Type";
Language.AFPRuleAddPageTitle = "Add Application Filter Policy Rules";
Language.AFPRuleUpdatePageTitle = "Edit Application Filter Policy Rules";
Language.SelectCategories = "Select Categories";
Language.SelectApplication = "Select Application";
Language.LogViewerAction = "Action";
Language.SelectOneRuleMessage = "You must select at least one Application Filter Policy Rule.";
Language.SelectAppCatMessage = "You must select an application category.";
Language.SelectOneAppMessage = "You must select at least one application.";
Language.SelectScheduleMessage = "You must select a schedule.";
Language.AFPPageTitleAdd = "Add Application Filter Policy";
Language.AFPPageTitleEdit = "Edit Application Filter Policy";
Language.Template = "Template";
Language.Category = "Category";
Language.AFPAddConfirmMessage = "Are you sure you want to create an Application Filter Policy?";
Language.AFPUpdateConfirmMessage = "Are you sure you want to update an Application Filter Policy?";
Language.DeleteDetailMultiConfirmMessage = "Are you sure you want to delete all the selected Application Filter Policy Rules?";
Language.DeleteDetailSingleConfirmMessage = "Are you sure you want to delete the selected Application Filter Policy Rule?";
Language.SelectTemplateMessage = "You must select a template.";
Language.DefaultPolicyEditMessage = "Default Policy cannot be updated or deleted.";
Language.AFPPageTitle = "Application Filter Policy";
Language.DefaultAction = "Default Action";
Language.SelectOnePolicyMessage = "You must select atleast one Policy.";
Language.line1 = "Dear ";
Language.ITDeptMsg = "This is a message from IT Department.";
Language.AccessDeniedDueToScheduleMsg = "Based on your current appliance configuration your access is denied at this time.";
Language.AccessDeniedDueToIPMsg = "Based on your current appliance configuration your access is denied from IP Address ";
Language.AccessDeniedMsgfooter = "Please contact your super administrator.";
Language.AppRegHeader="Appliance Registration Form";
Language.SubHeader="Appliance Registration";
Language.ApplianceKey="Appliance Key";
Language.ModelNo="Appliance Model No.";
Language.HelpMessage="If you do not already have a customer account, click here";
Language.Register = "Register";
Language.RegAppConfMsg1="Are you sure you want to register the Appliance?";
Language.PasswordWrong = "You have entered a incorrect Email Address or Password.";
Language.AppAlreadyRegistered = "The Appliance has already been registered. Enter the Email Address and Password that was provided at the time of registration.";
Language.NoRouteToHost1 = "Appliance could not connect to the Central Registration Server. Check your Internet connection settings.";
Language.UnknownHost = "The appliance is unable to connect to the central registration server. Please check the Domain Name Server (DNS) configuration using the Network-->DNS menu";
Language.DefSubscriptionErr = "An internal server error occurred while registering the subscription. Please try again.";
Language.AppRegSuccessful = "Congratulations! Appliance has been registered successfully. You can now subscribe to various subscription modules.";
Language.ARPAddTitle = "Add Static Neighbor";
Language.ARPEditTitle = "Edit Static Neighbor";
Language.Interface="Interface";
Language.AddEntry="Add as a Trusted MAC address to prevent a spoofing attempt.";
Language.ChkInterfaceMsg="You must select an Interface.";
Language.ARPAddConfirmMessage="Are you sure you want to add a Static Neighbor entry?";
Language.ARPUpdateConfirmMessage="Are you sure you want to update the Static Neighbor entry?";
Language.ARPConfig="Neighbor Configuration";
Language.Title="ARP";
Language.TimeoutHelpStart="Neighbor cache entry time out";
Language.TimeoutHelpEnd=" Minutes (1 - 500) ";
Language.ArpPoisoningHelp="Log Possible Neighbor Poisoning Attempts";
Language.StaticARP="Static Neighbor Table";
Language.DelARPConfirmMsg = "Caution: Deleting the static Neighbor entries would also delete respective trusted IP-MAC pairs. You may lose access to the Appliance. Do you want to continue?";
Language.UpdConfMsg="Are you sure you want to update the configuration?";
Language.CheckARPTimeout="You must enter Neighbor Timeout value between 1 and 500.";
Language.Show="Show";
Language.Show1="Show";
Language.ARPCacheDeleteNotSelected="You must select at least one Neighbor Cache entry.";
Language.ARPCacheDeleteMultiConfirm="Are you sure you want to delete all the selected Neighbor Cache entries?";
Language.ARPCacheDeleteSingleConfirm="Are you sure you want to delete the selected Neighbor Cache entry?";
Language.SMTPAuthConn ="Bypass Spam Check For SMTP/S Authenticated Connections";
Language.VerifySenderIP ="Verify Sender's IP Reputation";
Language.MailSize ="SMTP/S Mails Greater Than Size";
Language.MailSizeMsg =" KB should not be scanned.";
Language.MailSizeHelp ="Enter 0 for default size restriction of ";
Language.OverSizeMailAction ="SMTP/S Oversize Mail Action";
Language.Accept ="Accept";
Language.Reject ="Reject";
Language.Drop ="Drop";
Language.POPMailSize ="POP3/IMAP Mails Greater Than Size";
Language.HeaderForPOPIMAP ="Header To Detect Recipient For POP3/IMAP";
Language.ConfUpd ="Are you sure you want to update the Configuration?";
Language.BlankHeaderValueMessage ="Header value cannot be blank.";
Language.InvalidHeaderValueMessage ="You must enter a valid value for header.";
Language.OutOfRangeSMTPMailSizeMessage = "SMTP Mail size must be between 1 and ";
Language.OutOfRangePOPMailSizeMessage = "POP/IMAP Mail size must be between 1 and ";
Language.ExternalServerAddTitle="Add External Server";
Language.ExternalServerEditTitle="Edit External Server";
Language.ServerType="Server Type";
Language.OK="Ok.";
Language.OkCC = "Ok";
Language.NotValidServerName="Server Name cannot contain '/', '\\', '\'', '\"', '|', ',' ";
Language.IP="IP";
Language.Type="Type";
Language.DomainAdmin="Domain/Admin";
Language.AuthenticationServer="Authentication Server";
Language.AuthHeader = "Authorization"; 
Language.FileSizeLabelFront = "Files Greater Than Size";
Language.FTPupdConfMsg = "Are you sure you want to update FTP Configuration?";
Language.FileSizeLabelBack = "KB should not be scanned";
Language.FileSizeInSmall = "file size";
Language.SMTPMailLabelBack = "KB should not be scanned. Enter 0 for default size restriction of ";
Language.SMTPActionLabel = "SMTP Oversize Mail";
Language.SignatureLabel = "Add Signature To All Emails";
Language.GeneralConfMsg = "Are you sure you want to update General Configuration?";
Language.AdminEmailAddress ="Administrator Email Address";
Language.FromEmailAddress ="From Email Address";
Language.SMTPSizeMessage = "SMTP scan size must be between 0 and ";
Language.POPSizeMessage = "POP/IMAP scan size must be between 0 and ";
Language.ModeLabel = "Scan Mode";
Language.RealModeLabel = "Real Time";
Language.BatchModeLabel = "Batch";
Language.FileSizeThreshold = "File Size Threshold";
Language.ScanAudioVideoLabel = "Audio & Video File Scanning";
Language.HTTPConfMsg = "Are you sure you want to update Configuration?";
Language.Enable = "Enable";
Language.Disable = "Disable";
Language.OutOfRangeHttpValue = "File Size Threshold should be between 1 and ";
Language.DenyUnknownProtocol = "Deny Unknown Protocol";
Language.AllowInvalidCertificate = "Allow Invalid Certificate";
Language.HTTPSConfigurations = "HTTPS Configurations";
Language.HTTPConfiguration = "HTTP/HTTPS Configurations";
Language.TimeFrom="Time From";
Language.Sender="Sender";
Language.Receiver="Receiver";
Language.Subject="Subject";
Language.Filter="Filter";
Language.FilterResult="Filter Result";
Language.Recipient="Recipient";
Language.TimeStamp="Time Stamp";
Language.DateValidateMsg="Time From should always be less than or equal to Time To.";
Language.TotalUtilization="Total Utilization ( Anti Virus + Anti Spam ) : ";
Language.SmallUsed=" used";
Language.BackupAndRestore = "Backup & Restore";
Language.BackupRestore = "Backup Restore";
Language.BackupConf = "Backup Configuration";
Language.ImportExport = "Import Export";
Language.ImportNow = "Import Now";
Language.ImportConfig = "Import Configuration";
Language.ExportConfig = "Export Configuration";
Language.ExportNow = "Export Now";
Language.BackupNow = "Backup Now";
Language.DownloadNow = "Download Now";
Language.ResConf = "Restore Configuration";
Language.UploadRes = "Upload and Restore";
Language.Frequency = "Backup Frequency";
Language.Never = "Never";
Language.TakeDaily = "Take Daily backup at";
Language.TakeWeekly = "Take Weekly backup on";
Language.TakeMonthly = "Take Monthly backup on Day";
Language.WeekAt = "of the week at";
Language.BackupMode = "Backup Mode";
Language.FTP = "FTP";
Language.Mail = "Email";
Language.Local = "Local";
Language.FTPServerIP = "FTP Server IP";
Language.Username = "Username";
Language.EmailAddress = "Email Address";
Language.ConfirmChange = "Are you sure you want to apply these changes?";
Language.FileUploadMsg = "You must select a file to upload";
Language.FTPIPReq = "FTP Server IP Address";
Language.ConfirmRestore = "Restoring this backup will override your current configuration and will restart your appliance. This may also result in loss of connection due to restoration of original IP.Are you sure, you want to restore this backup?";
Language.ConfirmScheduleBackup = "Are you sure you want to apply these settings?";
Language.LastBackupTakenLabel = "Last backup taken on ";
Language.RestoreMsg1 = "Restoring this backup will override all your current configuration and will restart the appliance.";
Language.ConfirmRes = "Are you sure you want to restore this backup ?";
Language.AddBookMark = "Add Bookmark";
Language.UpdateBookMark = "Edit Bookmark";
Language.HTTPS = "HTTPS";
Language.HTTP = "HTTP";
Language.RDP = "RDP";
Language.TELNET = "TELNET";
Language.SSH = "SSH";
Language.URL = "URL";
Language.BookmarkNameReq = "Bookmark Name"; 
Language.URLReq = "Bookmark URL";
Language.NotValidURL = "Not a valid URL";
Language.NotValidHTTP = "Not a valid HTTP URL";
Language.NotValidHTTPS = "Not a valid HTTPS URL";
Language.NotValidRDP = "Not a valid RDP URL";
Language.NotValidTELNET = "Not a valid TELNET URL";
Language.NotValidSSHURL = "Not a valid SSH URL";
Language.NotValidFTPURL = "Not a valid FTP URL";
Language.AddBookmarkConf = "Are you sure you want to add a BookMark?";
Language.UpdateConfBookmark = "Are you sure you want to update the BookMark?";
Language.HttpExample = 'Example: mydomain.com OR 192.168.1.1:8080';
Language.HttpsExample = 'Example: mydomain.com OR 192.168.1.1:8080';
Language.RdpExample = 'Example: 192.168.1.1';
Language.TelnetExample = 'Example: 192.168.1.1 or 192.168.1.1:221';
Language.SshExample = 'Example: 192.168.1.1 or 192.168.1.1:221';
Language.FtpExample = 'Example: 192.168.1.1';
Language.HttpPort = '(default port 80)';
Language.HttpsPort = '(default port 443)';
Language.RdpPort = '(default port 3389)';
Language.TelnetPort = '(default port 23)';
Language.SshPort = '(default port 22)';
Language.FtpPort = '(default port 21)';
Language.SftpPort = '(default port 22)';
Language.FtpsPort = '(default port 990)';
Language.SmbPort = '(default port 445)';
Language.VncPort = '(default port 7900)'; 
Language.URLCheck="URL must end with ' / '";
Language.AddBookMarkGrp = "Add Bookmark Group";
Language.UpdateBookMarkGrp = "Edit Bookmark Group";
Language.SelectBookmark = "Select&nbsp;Bookmark";
Language.BookmarkList = "Bookmark List";
Language.SelectedList = "Selected Bookmark List";
Language.BGNameReq = "Bookmark Group Name";
Language.MustOneBookmark = "You must select at least one bookmark.";
Language.Create = "Are you sure you want to create a Bookmark Group?";
Language.IntUpdConfMsg = "Are you sure you want to update the Interface?";
Language.EditInterface = "Edit Interface";
Language.NetworkZone = "Network Zone";
Language.InterfaceSpeed ="Interface Speed";
Language.DNSConfiguration = "DNS Configuration";
Language.PrimaryDNS ="Primary DNS";
Language.SecondaryDNS ="Secondary DNS";
Language.GatewayDetail = "Gateway Detail";
Language.GatewayName = "Gateway Name";
Language.MTU = "MTU";
Language.OverrideMSS = "Override MSS";
Language.MTURange="(576 - 1500)";
Language.MSSRange="(536 - 1460)";
Language.NotValidIP="Not a valid Interface IP Address";
Language.NotValidNetMask="Not a valid Interface Netmask";
Language.NotValidPriDNS="Not a valid Primary DNS IP Address";
Language.NotValidSecDNS="Not a valid Secondary DNS IP Address";
Language.NotValidGateWay="Not a valid Gateway Name";
Language.NotValidGateWayIP="Not a valid Gateway IP Address";
Language.RequiredGatewayIP="You must specify valid gateway IP Address";
Language.SameInterfaceGatewayIP="Interface IP & Gateway IP Address must not be same";
Language.MTUValue="MTU value should be between 576 and 1500";
Language.MSSValue="MSS value should be between 536 and 1460";
Language.MTUMSSValue="MTU value atleast 40 greater than MSS value";
Language.MACRequired = "You must enter value for MAC Address.";
Language.DefaultMAC = "Use Default MAC Address";
Language.OverrideMAC = "Override Default MAC Address";
Language.EnterValidIP="Enter valid IP Address";
Language.EnterValidSubnet="Enter valid Subnet mask";
Language.InvalidGateway="Invalid Gateway Name";
Language.EnterValidGatewayIP="Enter valid Gateway IP Address";
Language.GatewayIPandBridge = "Gateway IP and Bridge Interface IP should not be same.";
Language.InvalidGWIP = "Invalid Gateway IP Address";
Language.EnterValidPrimaryDNS = "Enter valid value for Primary DNS";
Language.EnterValidSecondaryDNS = "Enter valid value for Secondary DNS";
Language.NetworkConfiguration="Network Configuration";
Language.BridgeConfiguration = "Bridge Configuration";
Language.GatewayDetails = "Gateway Details";
Language.SubnetMask = "Subnet Mask";
Language.ISPName = "ISP Name";
Language.Deployment = "Deployment";
Language.Mode = "Mode";
Language.ZoneAndNetwork = "Zone & Network";
Language.Access = "Access";
Language.DateAndTime = "Date & Time";
Language.Summary = "Summary";
Language.GenaralSetting="General Settings";
Language.MemberInterfaces = "Member Interfaces";
Language.EnableRouting = "Enable routing on this bridge-pair";
Language.Interface1 = "Interface1";
Language.Zone1 = "Zone1";
Language.Interface2 = "Interface2";
Language.Zone2 = "Zone2";
Language.GatewayIP = "Gateway IP";
Language.NetMask = "NetMask";
Language.DNSDetails = "DNS Details";
Language.DescriptionRequired = "You must enter value for Description ";
Language.SameMemberInterfaces = "Member Interfaces can not be same.";
Language.BothCanNotBeWAN = "Both zone can not be WAN.";
Language.MSS = "MSS";
Language.HAEnabledMsg = "Bridge Pair could not be added because HA is enabled.";
Language.GatewayNameRequired = "You must enter value for Gateway Name.";
Language.InvalidGatewayName = "Not a valid Gateway Name.";
Language.GatewayIPRequired = "You must enter value for Gateway IP.";
Language.InvalidGatewayIP = "Not a valid Gateway IP.";
Language.InterFaceGateWayNetwokMsg="Interface IP & Gateway IP Address must be in same network";
Language.AddBridgePairConfirmMessage="Adding an Interface to the Bridge-Pair will affect one or more of its dependent configurations, including:<br/>1. Interface-Zone binding<br/>2. DHCP Server or Relay<br/>3. Interface based Firewall Rules<br/>4. ARP - NDP Static and Proxy<br/>5. Virtual Hosts and respective Firewall Rules <br/>6. Interface based Hosts and respective Host Groups <br/>7. Routes - Unicast and Multicast <br/>8. Interface based PPPoE configurations<br/>9. Gateway configurations<br/>10. VPN configurations<br/><br/>Are you sure you want to add an Interface to the Bridge-Pair?";
Language.InterfaceMustBeLAN="WLAN Interface can be member of LAN Zone only.";
Language.BothCanNotbeWLAN="Both the member Interfaces cannot be of WLAN type.";
Language.BridgePairExists = "Bridge Pair with same name already exists.";
Language.MemberInterfaceRequired = "Please select Member Interfaces.";
Language.MemberZoneRequired = "Please select Member Zones.";
Language.InvalidName="Name must contain alphanumeric characters.";
Language.InternalAndExternal="Internal and External Zone could not be same.\n Please select again!";
Language.ZoneConfiguration="Zone Configuration";
Language.BridgeMode = "Bridge Mode";
Language.LANPort = "LAN Port";
Language.WANPort = "WAN Port";
Language.CAPassword = "CA Passphrase";
Language.CertConfMsg = "This will regenerate all your certificates. Are you sure you want to continue?";
Language.NotAllowedSpecChar="Special characters |, `, ', \", <, >, (, ) and \\ are not allowed in passphrase.";
Language.ValidIp ="Please enter valid IP Address/Domain."; 
Language.CCCApplyConfMsg="Are you sure you want to apply these Central Management Settings?";
Language.LblHeartbeat="Heartbeat Protocol";
Language.HeartBeatProtocol="Please select heart beat prorocol.";
Language.AVIPSWebCatSig="AV, IPS & Web Category Signature Updates";
Language.FromServer="From Update Server";
Language.HeartBeatPort = "Heartbeat Port";
Language.IC = "Send system information using ";
Language.Recommended="Recommended";
Language.CAEditPage = "Certificate Authority";
Language.CAFormat = "Certificate File Format";
Language.Download = "Download";
Language.ContryName="Country Name";   	
Language.StateProvinceName="State/Province Name";
Language.Locality="Locality Name";
Language.LocalityHelp="(eg. city name)";
Language.OrgName="Organization Name"; 	
Language.OrgNameHelp="(eg. company name)";
Language.OUName="Organization Unit Name";
Language.OUNameHelp="(eg. department name)";
Language.CommonName="Common Name";
Language.CommonNameHelp="(eg. server's hostname)";
Language.ChangePassword="Change Password";
Language.MustSupplyCAFile="You must provide certificate file.";
Language.MustSupplyProperCAFile="You must provide proper certificate file.";
Language.InvalidFormat3="Invalid Certificate file format. It should be";
Language.InvalidFormatCont="file";
Language.CAPasswordLength="CA Password must be atleast 10 characters long.";
Language.CAConfMsg = "Are you sure you want to upload CA?";
Language.ConfUpdCAMsg = "Are you sure you want to update CA?";
Language.ConfirmGenerateMsg = "Are you sure you want to generate CA?";
Language.ConfirmReGenerateMsg = "This will result into regeneration of all your certificates. Are you sure you want to continue?";
Language.ValidFrom="Valid From";
Language.ValidUpto="Valid Upto";
Language.ConfPassword = "Confirm Password";
Language.PrivateKey = "Private Key";
Language.Validupto = "Valid upto";
Language.KeyLength = "Key length";
Language.CertificateID = "Certificate ID";
Language.Confirm = "Are you sure you want to add a Certificate?";
Language.CertConfUpd = "Are you sure you want to update Self Signed Certificate?";
Language.ValidCertName="Certificate name must contain alphanumeric and underscore only.";
Language.CertNameStartsChar="Certificate name must start with characters only.";
Language.Passwd10="Password must be atleast 10 characters long.";
Language.PwdAndCPwdSame3="Password mismatch. Password typed in Password and Confirm Password fields must be same.";
Language.CertIDValue="You must enter Certificate ID value.";
Language.ValidEmail ="You must specify valid Email Address.";
Language.ValidIP ="You must enter valid IP Address.";
Language.ValidDomain ="You must enter valid ID value.";
Language.ProperCertFile = "You must provide proper Certificate File.";
Language.ValidCertFormat="Invalid Certificate file format. File should be in PEM format.";
Language.ProperKeyFile="You must provide proper Certificate Key File";
Language.ValidKeyFormat="Invalid Private Key file format. File should be in .key format.";
Language.CurruptedCert="Invalid or corrupted Certificate.";
Language.UploadFailed="Certificate could not be uploaded.";
Language.GenerateCSRFailed="Certificate Signing Request could not be generated.";
Language.CannotChangePassword="Certificate Password could not be changed.";
Language.UploadCertificate="Upload Certificate";
Language.GenerateSelfSignedCert="Generate Self Signed Certificate";
Language.GenerateCSR="Generate Certificate Signing Request (CSR)";
Language.CertificateHelp="File should be in {format} format.";
Language.PrivateKeyHelp="File should be in .key format.";
Language.UploadedSuccessFully="Certificate has been uploaded successfully.";
Language.RewriteConfFailed="Certificate has been added successfully. \nYou need to restart VPN Services from CLI console";
Language.ChangePasswordFail="Certificate Password could not be updated";
Language.CertificateAuthority = "Authority";
Language.DownloadNotPosible = "Certificate could not be downloaded. Only Self-Signed Certificate can be downloaded.";													 
Language.RegenerateNotPosible = "Certificate could not be regenerated.";
Language.RevokeNotPosible = "Certificate could not be revoked. Only Self-Signed Certificate can be revoked.";
Language.RevokeConfirm="Are you sure you want to revoke the Certificate?";
Language.ChangePasswd="Default Admin Password Settings";
Language.CurrPassword="Current Password";
Language.NewPasswd="New Password";
Language.ReEnterNewPasswd="Confirm New Password";
Language.PasswdConfMsg="Are you sure you want to change the Password?";
Language.UnmatchedPassword="New Password and Confirm New Password fields must be same.";
Language.ResetConfirmMessage="Are you sure you want to reset the Password?";
Language.InValidPassword="Password cannot be set to 'RESET'.";
Language.CurrPasswdWithDash="Current-Password";
Language.NewPasswdDash="New-Password";
Language.ReEnterPassword="Re-enter New-Password";
Language.PasswdMismatch="Password Mismatch. The password typed in New-Password and Re-enter New-Password fields must be same.";
Language.Email1 = "Email";
Language.SpamDigest = "Quarantine Digest";
Language.AddCLUserHeader="Add Clientless Users";
Language.UserRegConfMsg = "Are you sure you want to register the users?";
Language.UsernameReq = "You must enter Username.";
Language.NotValidUsername = "You must enter Alphanumeric, '_', '@', '.' and whitespace value for Username.";
Language.NameReq = "You must enter Name.";
Language.NotValidName = "You must enter valid Name.";	
Language.IPAddressReq = "You must enter IP Address.";
Language.NotValidIPAddress ="You must enter valid IP Address.";
Language.GroupReq = "You must select Group.";
Language.ChkIPAddrLoopBackMsg="Loopback IP Addresses is not allowed.";
Language.CUserAddPageTitle = "Add Clientless User";
Language.CUserUpdatePageTitle = "Edit Clientless User";
Language.ApplicationFilter = "Application Filter";
Language.UserUpdConfMsg = "Are you sure you want to update the User Details?";
Language.Policies="Policies";
Language.ChkIPAddrMsg1="You must enter valid IP Address";
Language.ChkGroupMessage = "You must select the Group.";
Language.ChkWebFilterPolicyMsg="You must select Web Filter policy.";
Language.ChkAppFilterPolicyMsg="You must select Application Filter policy.";
Language.ChkSSLVPNPolicyMsg="You must select SSL VPN policy.";
Language.NameInSmall = "name";
Language.ResetBtn="Reset User Accounting";
Language.TypeName="Clientless User";
Language.UsedMinutes="Internet Usage Time";
Language.viewUsageBtn="View Usage";
Language.UsedMinutesFmt = "(HH:MM)";
Language.ID="ID";
Language.AddRange = 'Add Range';
Language.ChangeStatusConfirmMsg1="Are you sure you want to change user status?";
Language.RecordExists = "Clientless user could not be registered. A Clientless User with same name already exists, choose a different name.";
Language.RecordExistsWithSameIP = "Clientless user could not be registered. A Clientless User with same IP Address already exists, choose a different IP Address.";
Language.you_must_enter = "You must enter ";
Language.invalid_message1 = "You must enter valid ";
Language.value_for = " value for ";
Language.not_null_msg = "You must enter value for ";
Language.invalid_message = "You must enter valid value for ";
Language.invalid_searchVal = "You must enter valid value for search";
Language.invalid_mac = "You must enter valid value for MAC Address";
Language.invalid_ip = "You must enter valid value for IP Address";
Language.Maximum = "Maximum ";
Language.MaximumBack = " characters are allowed for ";
Language.NoRecordFound = "No Record Found";
Language.Logout = "Logout";
Language.Help = "Help";
Language.About = "About";
Language.CLI = "Console";
Language.Report = "Report";
Language.Reports="Reports";
Language.Add = "Add";
Language.Edit = "Edit";
Language.Delete = "Delete";
Language.Import = "Import";
Language.ChangeStatus = "Change Status";
Language.Save = "Apply";
Language.Cancel = "Cancel";
Language.SearchOrAdd = "Search/Add";
Language.GoWithSpace = "&nbsp;Go&nbsp;";
Language.RecordPerPage = "Records Per Page";
Language.Search = "Search";
Language.Support = "Support";
Language.Seconds = "Seconds";
Language.Minutes = "Minutes";
Language.Hours = "Hours";
Language.Ok = "OK";
Language.Remove = "Remove";
Language.Status = "Status";
Language.Active = "Active";
Language.Connection = "Connection";
Language.Reset = "Reset";
Language.ResetDefault = "Reset To Default";
Language.Clear="Clear";
Language.AccessDenied="You do not have privilege to add/modify configuration.";
Language.LocaleApplySuccessMessage="Locale has been applied successfully.";
Language.LocaleApplyFailMessage="Locale could not be applied.";
Language.ClearAllFilter = "Clear All Filters";
Language._Integer = "Integer";
Language._Float = "Float";
Language._Number = "Number";
Language._PortRange = "Port Range";
Language._Alpha = "Alphabets";
Language._AlphaNumeric = "Alphanumeric";
Language._Email = "Alphanumeric,'_', '.', '@' and '-'";
Language._Name = "Alphanumeric, '_', and space";
Language._UserName = "Alphanumeric, '_', '@', '.' and whitespace";
Language._HostName = "Alphanumeric, '_' and '.'";
Language._PolicyName = "Alphanumeric, '_' and ' '";
Language._BWPolicyName = "Alphanumeric, '_' and whitespace";
Language._FileExtName =  "Alphanumeric, ',' and '_'";
Language._Date = "YYYY-MM-DD";
Language.webfiltercatRegAlert = "Application categories will not be identified as the \"Web and Application Filter\" module is unsubscribed";
Language.aboutCyberoam = "About Product";
Language.customerMyAccount = "Customer My Account";
Language.onlineHelp = "Online Help";
Language.NoRecordsFound = "No Records Found.";
Language.RowsPerPage = "Rows Per Page";
Language.ClickFilter = "Click To Filter";
Language.SortAsc = "Click to sort ascending";
Language.SortDesc = "Click to sort descending";
Language.SelectItems = "Select Items";
Language.SelectColumn="Select Columns";
Language.AntiSpamFilterSucc="Spam mail filter added successfully. List will display mails identified as SPAM as per the filter configuration.";
Language.AntiVirusFilterSucc="Filter for Virus Infected mails added successfully. List will display mails identified as Virus Infected as per the filter configuration.";
Language.QuarantineDownloadFail="Unable to perform Mail Download Operation.";
Language.Any="Any";
Language.AllTheTime="All The Time";
Language.Start="Start";
Language.Next="Next";
Language.Prev="Previous";
Language.Finish="Finish";
Language.PageDenied="You do not have privilege to access the page or perform the operation.";
Language.SelectHere = "Select Here";
Language.NoRecord = "No Record";
Language.OperationPushed="Tasks has been added in a scheduler queue and should be reflected locally within sometime.";
Language.OperationPushedFailed="Task Failed due to Internal Server Error.";
Language.Model="Model";
Language.LicensedUser="Licensed User";
Language.CompanyName="Company Name";
Language.ContactPerson="Contact Person";
Language.RegisteredEmailID="Registered Email Address";
Language.CRNotRegistered="Appliance is not registered. Please register.";
Language.EndCharValidation=" cannot end with special characters '.' and '@'";
Language.InvalidDomainName1="Domain Name can contain only alphanumeric characters, '-' and'.'";
Language.UserNameAndPwdSame = "	- UserName and Password can not be same.";
Language.InvalidPasswordbr = "Password is not as per the configured complexity.<br/>";
Language.InvalidPwdLengthHeader = "	- Password should be of minimum ";
Language.InvalidPwdLengthFooter = " characters.<br/>";
Language.UpperLowerCase = "	- Password should contain at least one character in upper case e.g. B and one lower case e.g. f .<br/>";
Language.NumericCase = "	- Password should contain at least one number from 0 to 9.<br/>";
Language.SpecialCase = "	- Password should contain at least one special character e.g. @, % ^, &";
Language.CurrentChannel = "Current Channel&nbsp;:&nbsp;";
Language.Discovering = "Discovering";
Language.BackupMsg = "This backup will override the backup file stored in the system. You can download backup file to your hard drive and restore it later if needed.";
Language.TakeBackup = "Take Backup";
Language.BackupConfMsg="Are you sure you want to take Backup?";
Language.ConfigureCaptureFilter = "Configure Capture Filter";
Language.Default = "Default";
Language.NumOfBytes = "Number Of Bytes To Capture (per packet)";
Language.WrapCapture = "Wrap Capture Buffer Once Full";
Language.EnterBPF = "Enter BPF String";
Language.ExampleBPF = "e.g. host 192.168.1.2 and port 137";
Language.ConnList = "Connection List";
Language.DisplayFilter = "Display Filter";
Language.RefreshInterval="Refresh Interval :";
Language.Refresh="Refresh";
Language.ConnID="Connection ID";
Language.MasterConnID="Master<br>Connection ID";
Language.ConnStatus = "Connection<br>Status";
Language.InInterface = "In<br>Interface";
Language.OutInterface = " Out<br>Interface";
Language.SourceIP = "Source<br>IP";
Language.DestIP = "Destination<br>IP";
Language.Protocol = "Protocol";
Language.SrcPort = "Source<br>Port";
Language.DescPort = "Destination<br>Port";
Language.RuleID = "Rule<br>ID";
Language.Flags="Flags";
Language.ConnState="Connection State";
Language.GroupID="User Group";
Language.WebFilterID="Web Filter ID";
Language.AppFilterID="Application Filter ID";
Language.IPSPolicyID="IPS Policy ID";
Language.BWPolicyID="QoS Policy ID";
Language.SSLVPNPolicyID="SSL VPN Policy ID";
Language.GatewayID="Gateway ID";
Language.WebCategoryID="Web Category ID";
Language.AppID="Application ID";
Language.AppCategoryID="Application Category ID";
Language.ConnServedBy="Connection<br>Served By";
Language.TranslatedSrc="Translated<br>Source";
Language.TranslatedDest="Translated<br>Destination";
Language.RxBytes="Rx Bytes";
Language.TxBytes="Tx Bytes";
Language.RxPackets="Rx Packets";
Language.TxPackets="Tx Packets";
Language.Expiry="Expiry (Sec)";
Language.ConnectionFilter = "Connection Filter";
Language.LogViewerInInterface = "In Interface ";
Language.LogViewerOutInterface = "Out Interface ";
Language.SourceIPAdd = "Source IP";
Language.SourcePort = "Source Port";
Language.DestIPAdd = "Destination IP";
Language.DestPort = "Destination Port";
Language.CCRuleID = "Rule ID";
Language.User = "User";
Language.InvalidSrcPort = "You must enter valid Source port.";
Language.InvalidDestPort = "You must enter valid Destination port.";
Language.InvalidSrcIP = "You must enter valid Source IP Address.";
Language.InvalidDestIP = "You must enter valid Destination IP Address.";
Language.InvalidRuleID = "You must enter valid Rule ID.";
Language.ConfirmConnection = "Are you sure want to apply Connection Filter?";
Language.ConfirmResetFilter = "Are you sure want to reset Connection Filter?";
Language.ConnectionGroupAdd = "Create Connection Group";
Language.ConnectionGroupUpdate = "Edit Connection Group";
Language.ConnectGroupDetail = "Connection Group Details";
Language.SelectConnect = "Select Connection(s)";
Language.AvailConnect = "Available Connections";						   
Language.MemberConnect = "Member Connections";
Language.MemberConnectMessage = "Order of Connections in Member Connections column indicates Failover preference";
Language.MailNotification = "Mail Notification";
Language.FailoverCondition = "Failover Condition";
Language.IF = "IF...";
Language.NotAble = "Not able to ";
Language.ConnectInSmall = "connect";
Language.And = "And";
Language.Select = "Select";
Language.On = "on";
Language.bRemoteVPNServer = "<b>Remote VPN Server</b>";
Language.ThenWithDot = "Then...";
Language.ShiftToActive = "'SHIFT to next Active Connection'";
Language.AddCGConf = "Are you sure want to create connection group?";
Language.UpdateConfCG = "Are you sure want to update connection group?";
Language.ConnectGroupNameReq = "Connection Group";
Language.NameNotValid="You must enter Alphanumeric, and '_' value for name and it must start with an alphabetic character.";
Language.FailOverGroupNameNotValid="You must enter Alphanumeric, and '_' value for Failover Group Name and it must start with an alphabetic character.";
Language.MustTwo = "Connection Group must have atleast two member connections.";
Language.SameFailoverGroup = "All members of Failover group must be of same connection type.";
Language.PortReq = "You must enter Port value.";
Language.PortPostitive = "Port must contain positive numeric value.";
Language.PortNum = "Enter valid Port value. It must be between 1 and 65535.";
Language.Release="Release";
Language.ReleaseSuccMsg1="Email has been released successfully.";
Language.ReleaseFailMsg="Email could not be released.";
Language.InvalidEmailAddMsg1="Email could not be released, Email Address is not valid.";
Language.AuthRequiredMsg="Email could not be released, Mail server requires authentication.";
Language.FileNotExist="Email cannot be released. It has been purged from the Quarantine area.";
Language.SpamQuarantineDigestSettings="Quarantine Digest Settings";
Language.ChangeBtn="Change User's Quarantine Digest Settings";
Language.EnableOption="Enable Quarantine Digest";
Language.SpamDigestConfMsg="Are you sure you want to configure Spam Quarantine Digest Settings?";
Language.EmailFreq="Email Frequency";
Language.DisplayName="Display Name";
Language.AllowOverride="Allow Override";
Language.AllowOverrideCheckBox="Allow User To Override Digest Settings";
Language.Hour="Hourly";
Language.ReferenceIp="Reference \"My Account\" IP";
Language.SendTestSapmDigest="Send Test Email";
Language.HourlySchMsg1="Send Email Every";
Language.HourlySchMsg2="hour";
Language.DailySchMsg1="Send Email Daily At";
Language.DailySchMsg2="Hour(s)";
Language.DailySchMsg3="Minute(s)";
Language.WeeklySchMsg1="Send Email At ";
Language.WeeklySchMsg3="Minute(s) On Every";
Language.SQDConfMsg="Are you sure you want to update the Spam Quarantine Digest Settings?";
Language.DayMsg="Please Select Atleast One Day.";
Language.ExpiredTitle="(Quarantine Digest Settings will be applicable only after you subscribe for \"Gateway Anti Spam\" module.)";
Language.CRLEditPage = "Certificate Revocation List";
Language.CRLFile = "CRL File";
Language.MustSupplyCRLFile="You must provide CRL File.";
Language.MustSupplyProperCRLFile="You must provide proper Certificate Revocation List (CRL) File.";
Language.InvalidFormat4="Invalid CRL file format. File should be in .crl format.";
Language.CRLConfMsg = "Are you sure you want to upload CRL?";
Language.ConfUpdCRLMsg = "Are you sure you want to update CRL?";
Language.CustomerRegistration = "Customer Registration";
Language.HelpMessage1="If you already have a customer account, click here.";
Language.HelpMessage2="You must enter valid Email Address, as this will be used as a ";
Language.UsernameInSmall="username";
Language.HelpMessage3="to access customer My Account and register this appliance.";
Language.ReTypePassword="Re-Type Password";
Language.Address = "Address";
Language.City = "City";
Language.State = "State";
Language.Country = "Country";
Language.Zip = "Zip";
Language.Phone = "Phone";
Language.Fax = "Fax";
Language.SecretQuestion = "Secret Question";
Language.AnswertoQuestion = "Answer to Question";
Language.HelpMessage4 = "(Will be used if you forget your password)";
Language.HelpMessage5 = "External Proxy Server Information";
Language.ProxyServer = "Proxy Server";
Language.ProxyPort = "Proxy port";
Language.RegAppConfMsg2="Are you sure you want to register Appliance?";
Language.ChkPasswordMsg="Password and Confirm Password fields must have same value.";
Language.CustomerAlreadyRegistered = "Customer Account with this Email Address already exists, choose a different Email Address.";
Language.CustomerRegFailAppNoActive = "Your Appliance has not been activated. Activate the Appliance before proceeding further.";
Language.CustomerRegServerErr = "An internal server error occurred while registering the appliance. Please try again.";
Language.CustomerNOTRegistered = "No Customer Account found with the given Email Address.";
Language.CustomerRegFailAppAlreadyRegistered = "The appliance has been already registered. Please provide the Email Address and Password that was provided during registration.";
Language.NoRouteToHost2 = "Appliance could not connect to the Registration Server; check your Internet connection settings.";
Language.DefaultRegError = "An internal server error occurred while registering the Subscription module with the Registration server. Please try again.";
Language.Winclinetmsg="Please click here to Download Client for Windows, if you haven't installed it already.";
Language.Linuxclinetmsg="Please click here to Download Client for Linux.";
Language.Win7Vistaclinetmsg="Please click here to Download Windows Vista and Window 7 Client.";
Language.MACclinetmsg="Please click here to Download Client for Mac.";
Language.PageLabel = "Consolidated Troubleshooting Report";
Language.RunConfig = "System Snapshot";
Language.LogFiles = "Log Files";
Language.Reason = "Reason";
Language.Generate = "Generate";
Language.FileSize = "Generated File is of ";
Language.DownloadConf = ". Are you sure you want to download it?";
Language.GenerateCTRFailed = "Consolidated Troubleshooting Report could not be generated.";
Language.ReasonRequired = "You must enter reason for generating report";
Language.OptionRequired = "You must select at least one option to generate a report.";
Language.GenCTRFor = "Generate CTR for";
Language.LastCTRFile = "Last CTR file ";
Language.CTRFileGenerated=" was generated on ";
Language.OverRideCTRFile = "CAUTION: The last CTR file will be overwritten. Are you sure you want to generate the CTR file?";
Language.WaitForFileGeneration = "Please wait...CTR file generation is being processed. Click on CTR tab after few minutes to download.";
Language.HideSuccessfull = "The Dashboard Widget is hidden. To restore the widget, reset Dashboard.";
Language.ResetSuccessfull = "Dashboard Widgets are reset to default.";
Language.removeConfirm = "Are you sure you want to hide ";
Language.NoVirus = "No Virus Detected";
Language.Time = "Time";
Language.UPTime = "Up Time";
Language.LiveUsers = "Live Connected Users";
Language.SystemTime = "System Time";
Language.Domain = "Domain";
Language.ApplianceModel = "Appliance Model";
Language.WebCategoryDatabaseVersion = "Web Category Database Version";
Language.Version = "Version";
Language.CyberoamDeploymentmode = "Deployment Mode";
Language.GatewayIPAddress = "Gateway IP Address";
Language.AttackType = "Attack Type";
Language.Source = "Source";
Language.Destination = "Destination";
Language.Applied = "Applied";
Language.TrafficDropped = "Traffic Dropped";
Language.Yes = "Yes";
Language.No = "No";
Language.SrcDst = "Src/Dst";
Language.SignatureName = "Signature Name";
Language.Severity = "Severity";
Language.SignatureID = "Signature ID";
Language.NoIPSAlerts = "No IPS Alerts Detected";
Language.NoSpywareAlerts = "No Malware Alerts Detected";
Language.ApplianceVersion = "Firmware Version";
Language.ApplianceNotRegistered = "Appliance Not Registered";
Language.CyberoamSubscriptions = " Subscriptions";
Language.ExpiresOn = "Expires On ";
Language.PromotionalOffer = "Promotional Offer";
Language.Subscribed = "Subscribed";
Language.SubscriptionExpired = "Subscription Expired";
Language.Unsubscribed = "Unsubscribed";
Language.IPSSignatureVersion="IPS Signature Version";
Language.WebcatSignatureVersion="Webcat Signature Version";
Language.AVVersion = "Anti Virus Version";
Language.HTTPHits = "HTTP Hits";
Language.SearchEngineQueries = "Search Engine Queries";
Language.ConfigMode="Configuration Mode";
Language.PeerAppKey="Peer Appliance Key";
Language.DedicatedHALinkPort="Dedicated HA Link Port";
Language.InterfaceList="Monitored Interface List";
Language.CurrConn="Current Connections ( Own/Peer )";
Language.UserSurfingPattern="User Surfing Pattern";
Language.Legend="Legend";
Language.TodayUsageSummary="Today Usage Summary";
Language.HTTPTrafficAnalysis="HTTP Traffic Analysis";
Language.RecentMailVirusesdetected="Recent Mail Viruses detected";
Language.RecentFTPVirusesdetected="Recent FTP Viruses detected";
Language.RecentWebVirusesdetected="Recent Web Viruses detected";
Language.SystemResource="System Resource";
Language.SystemStatus="System Status";
Language.ApplianceInformation="Appliance Information";
Language.GatewayStatus="Gateway Status";
Language.DoSAttackStatus="DoS Attack Status";
Language.RecentIPSAlerts="Recent IPS Alerts";
Language.HADetails="HA Details";
Language.LicenseInformation="License Information";
Language.RecentSpywareAlerts="Recent Malware Alerts";
Language.CheckForNewVersion="[Check for Upgrades]";
Language.AvailableNewVersion="The New Version is available.";
Language.NoNewVersion="No upgrades available.";
Language.SystemUsage="System Usage";
Language.ResetDashboard="Reset Dashboard";
Language.ShutdownAppliance="Shutdown Appliance";
Language.RebootAppliance="Reboot Appliance";
Language.AlertMessageLabel="Alert Messages";
Language.AdminPasswordNotification="The default password for the user \"admin\" has not been changed. We highly recommend you to change the password.&nbsp;{vrclickherelink}&nbsp;to change password.";
Language.AlertMsgHeader2="Messages";
Language.ReportingNotification="On-Appliance reporting is currently&nbsp;{vrreason}&nbsp;";
Language.WebTrafficAnalysis="Web Traffic Analysis";
Language.DistributionByHits="Distribution by Hits";
Language.DistributionByDataTransfer="Distribution by Data Transfer";
Language.NA="N/A";
Language.Neutral="Neutral";
Language.NonWorking="Non working";
Language.Unhealthy="Unhealthy";
Language.Productive="Productive";
Language.MoreLabel="More >>";
Language.LessLabel="<< Less";
Language.WebAdminPasswdNotification="The default password for the user  \"{vrdefwebadminconsoleuser}\" has not been changed. We highly recommend you to change the password. &nbsp;{vrdefaultuserlink}&nbsp;to manage password.";
Language.HTTPS_SSH_AllowedMsg="{vrhttps_ssh_serviceallowed}&nbsp;based management is allowed from the WAN. This is not a secure configuration. We recommend using a good password.";
Language.HTTP_Telnet_AllowedMsg="{vrhttp_telnet_serviceallowed}&nbsp;based management is allowed from the WAN. This is not a secure configuration. We recommend using a good password.";
Language.applianceregistrationMsg="Your Appliance is not registered.";
Language.modulealreadyexpireMsg="{vrmodulealreadyexpired}&nbsp;module(s) expired.";
Language.moduleexpire5daysMsg="{vrmoduleexpiredin5days}&nbsp;module will expire within 5 days. Be sure to renew your subscription to stay protected.";
Language.moduleexpire10daysMsg="{vrmoduleexpiredin10days}&nbsp;module will expire within 10 days. Be sure to renew your subscription to stay protected.";
Language.moduleexpire20daysMsg="{vrmoduleexpiredin20days}&nbsp;module will expire within 20 days. Be sure to renew your subscription to stay protected.";
Language.WeakPwdNotification="Some of the administrators have weak password that does not follow password complexity check. To change their password,&nbsp;{vrchangepwdclickhere}&nbsp;.";
Language.ScheduledBackupMsg="Scheduled backup to&nbsp;{vrbackupmode}&nbsp;{vrbackupmedium}&nbsp;was failed.";
Language.OnApplianceReportOff="OFF. No reports are being generated. Use CLI command \"set on-appliance-report on\" to start on-appliance reporting.";  
Language.ReportMigrationFailed="turned OFF. Failed to upgrade On-Appliance iView. Please contact support.";
Language.ReportDBFailed="turned OFF. Unable to start On-Appliance iView. Please contact support.";
Language.DataTransferPolicyName = "Data Transfer Policy Name";
Language.Restriction =  "Restriction based on";
Language.MaximumDataTransfer = "Maximum Data Transfer";
Language.IndividualDataTransfer = "Individual Data Transfer (Upload &amp; Download)&nbsp;";
Language.CycleType = "Cycle Type";
Language.Cyclic = "Cyclic";
Language.NonCyclic = "Non-Cyclic";
Language.CyclicTotalDataTransfer = "Cycle Data Transfer";
Language.Per = "per";
Language.MaximumUploadedDataTransfer = "Maximum Upload Data Transfer";
Language.MaximumDownloadedDataTransfer = "Maximum Download Data Transfer";
Language.DTPAddTitle ="Add Data Transfer Policy";
Language.DTPUpdateTitle ="Edit Data Transfer Policy";
Language.CyclePeriod = "Cycle Period";
Language.NonZeroCycleTotalLimitMessage = "Cycle Data Transfer must be greater than zero.";
Language.NonZeroTotalLimitMessage = "Maximum Data Transfer must be greater than zero.";
Language.NonZeroCycleUploadLimitMessage = "Cycle Uploaded Data Transfer must be greater than zero.";
Language.NonZeroCycleDownloadLimitMessage = "Cycle Downloaded Data Transfer must be greater than zero.";
Language.NonZeroUploadLimitMessage = "Maximum Uploaded Data Transfer must be greater than zero.";
Language.NonZeroDownloadLimitMessage = "Maximum Downloaded Data Transfer must be greater than zero.";
Language.NameLimitMessage = "Name cannot have more than 50 characters.";
Language.DescriptionLimitMessage = "Description cannot have more than 255 characters.";
Language.CycleGreaterThanTotal = "Cycle limit cannot be greater than maximum limit.";
Language.CycleUploadGreaterThanTotal = "Cycle upload limit cannot be greater than maximum upload limit.";
Language.CycleDownloadGreaterThanTotal = "Cycle download limit cannot be greater than maximum download limit.";
Language.AbsoluteLimit = "Absolute Limit (MB)";
Language.CycleLimit = "Cycle Limit (MB)";
Language.Up = "Up";
Language.Down = "Down";
Language.AddDialInMember="Add DialIn Member(s)";
Language.CloseBtn="Close";
Language.UserType="User Type";
Language.MemberAddConfMsg="Are you sure you want to add member?";
Language.UserNotSelected1 = "You must select at least one Member.";
Language.DialInMembers="DialIn Members";
Language.DialInConfMsg="Are you sure you want to delete DialIn member(s)?";
Language.DeanonymizeHeader = "De-Anonymize";
Language.AnonymizedStr = "Anonymized String";
Language.AuthorizedUser = "Authorized User";
Language.AuthorizationPwd = "Authorization Password";
Language.Deanonymize = "Deanonymize";
Language.Session = "Session";
Language.Permanent = "Permanent";
Language.ForThisSearch = "For this search";
Language.InvalidAnonymizedStr = "Deanonymization failed because of invalid anonymized string for given type.";
Language.Users = "Users";
Language.UsersList = "User List";
Language.SelectedUsers = "Selected User";
Language.IMContact = "IM Contact";
Language.InvalidIP = "You must enter valid value for IP Address.";
Language.InvalidMAC = "You must enter valid value for MAC Address.";
Language.InvalidEmailMsg = "You must enter valid value for Email Address.";
Language.InvalidIMContact = "You must enter value for IM Contact.";
Language.DuplicateIP = "IP Address already exists.";
Language.DuplicateMAC = "MAC Address already exists.";
Language.DuplicateEmail = "Email Address already exists.";
Language.DuplicateIMContact = "IM Contact already exists.";
Language.AdvancedSettings = "Advanced Settings  (MAC Address, Email, IM Contact)";
Language.ValidPortValueMessage = 'You must enter a valid Port value.';
Language.OnlyNumericValueAllowMessage = 'Only numeric values are allowed for Port value.';
Language.PortRangeViolationMessage = 'Forwarded Port must be in the range of 1-65535.';
Language.ValidNumericPortValueMessage = 'You must enter a valid numeric value for Port value.';
Language.ValidHostNameMessage = 'You must enter a valid host value.';
Language.DGDdgdConfMsg = 'Are you sure you want to save Gateway Failover Rules?';
Language.NotAbleToWithSpace = 'Not able to ';
Language.AnotherGateway = "'SHIFT to another available Gateway'";
Language.NoDGDFailRuleSelectedMessage = 'You must select at least one Gateway Failover Rule.';
Language.DGDDelConfMsg = 'Are you sure you want to delete the selected Gateway Failover Rule?';
Language.AndCL = 'AND';
Language.Or = 'OR';
Language.NotAbleTo = 'Not able to';
Language.LeasedIP = "Leased IP";
Language.LeasedStart = "Leased Start Time";
Language.LeasedEnd = "Leased End Time";
Language.PhysicalAddress = "Client Physical Address";
Language.ClientHostName = "Client Host-Name";
Language.DHCP_Server_IP="DHCP Server IP";
Language.Interface_Not_Selected = "You must select Interface";
Language.DHCPAddConfirmMessage = "Are you sure you want to add the DHCP Relay Configuration?";
Language.DHPCEditConfirmMessage = "Are you sure you want to update the DHCP Relay Configuration?";
Language.DHCPAddTitle = "Add DHCP Relay Configuration";
Language.DHCPEditTitle = "Edit DHCP Relay Configuration";
Language.RelayThroughIPSec="Relay through IPSec";
Language.DHCPServerAlreadyConfigured = "You cannot configure both DHCP Relay and Server for IPv4. To configure IPv4 DHCP Relay, remove all the IPv4 DHCP servers.";
Language.Lease_Type="Lease Type";
Language.Dynamic="Dynamic";
Language.Static="Static";
Language.IP_Mac_Mapping_List="Static IP MAC Mapping";
Language.Lease_IP_Range="Dynamic IP Lease";
Language.From_Lease_IP="Lease IP Range From";
Language.To_Lease_IP="Lease IP Range To";
Language.Default_Lease_Time="Default Lease Time";
Language.Max_Lease_Time="Max Lease Time";
Language.Use_Interface_IP_as_Gateway="Use Interface IP as Gateway";
Language.Lease_Time_Help="1 - 43200 Minutes (30 days)";
Language.Conflict_Detection="Conflict Detection";
Language.DNS_Server="DNS Server"; 
Language.Use_Cyberoam_DNS_Settings="Use Appliance's DNS Settings"; 
Language.WINS_Server="WINS Server";
Language.Primary_WINS_Server="Primary WINS Server";
Language.Secondary_WINS_Server="Secondary WINS Server";
Language.Lease_Time_Message="Lease Time must be between 1 to 43200 Minutes (30 days)";
Language.Invalid_Lease_Time_Message="You must enter valid Lease Time i.e. 1 to 43200 Minutes (30 days)";
Language.Invalid_Host_Name = "You must enter valid value for Host Name.";
Language.Invalid_Lease_IP_Range = "You must enter valid Lease IP Range.";
Language.DHCPServerAddTitle = "Add DHCP Server Configuration";
Language.DHCPServerEditTitle = "Edit DHCP Server Configuration";
Language.MultipleMACAddress = "You must enter unique MAC Address in Mapping List.";
Language.MultipleIPAddress = "You must enter unique IP Address in Mapping List.";
Language.MultipleHostNameAddress = "You must Enter unique Host Name in Mapping List";
Language.HostName="Host Name";
Language.DefaultLeaseTimeGreaterThanMax = "Default lease time cannot be greater than max lease time.";
Language.LeaseRange = "Lease Detail";
Language.DHCPRelayAlreadyConfigured = "You cannot configure both DHCP Relay and Server. To configure DHCP Server, remove all the DHCP Relays.";
Language.ViewIPMACList = "View IP - MAC Mapping List";
Language.IPMACList = "IP - MAC Mapping List";
Language.Ping = "Ping";
Language.TraceRoute = "Trace Route";
Language.NameLookup = "Name Lookup";
Language.RouteLookup = "Route Lookup";
Language.IPFQDN = "IP Address/Host Name";
Language.Size = "Size";
Language.DNSServerIP = "DNS Server IP";
Language.IPFQDNNotNULL="You must enter value for IP Address/Host Name.";
Language.IPFQDNNotValid="You must enter valid value for IP Address/Host Name.";
Language.DNSNotNULL="You must enter value for DNS Server IP.";
Language.DNSNotValid="You must enter valid IP Address for DNS Server IP.";
Language.AnalyticalData = "Analytical Data";
Language.SizeNotValid="Size must be between 1 and 65507";
Language.SizeMustBeInteger="Size must be Integer";
Language.sizehelp = "(1-65507)";
Language.IPNotNULL="You must enter value for IP Address.";
Language.SpecifyOther="Specify Other";
Language.SelectInterface="Select Interface";
Language.InterfaceName = "Interface Name";
Language.OtherSettings = "Other Settings";
Language.ClientIP1 = "Dial-In Client";
Language.Encryption = "Encryption";
Language.Flow = "Flow Control";
Language.Baud = "Baud Rate";
Language.DialInHeader = "Dial-in Settings";
Language.ClientIP = "IP Address for Dial-In Client";
Language.ServerIP = "IP Address for Dial-In Server";
Language.SavedSettingConfDialIn = "Are you sure you want to Apply Dial In settings?";
Language.AddMembers = "Add Member(s)";
Language.ShowMembers = "Show Members";
Language.NAinCL = "NA";
Language.Ready = "Ready ";
Language.NotConfig = "Not configured ";
Language.Connected = "Connected";
Language.Disconnect = "Disconnect";
Language.ModemError = "Modem Not Found ";
Language.LIPAddress = "Local IP Address";
Language.RIPAddress = "Remote IP Address";
Language.BytesUploaded = "Bytes Uploaded";
Language.BytesDownloaded = "Bytes Downloaded";
Language.Bytes = " Bytes";
Language.TimeDuration = "Time Duration";
Language.ConfDisconnect = "Are you sure you want to disconnect?";
Language.DisconnectNotSelected = "You must select at least one user";
Language.DeviceName = "Device Name";
Language.EtherType = "Ether Type";
Language.IPType = "Packet Type";
Language.Allowed = "Allowed";
Language.Violation = "Violation";
Language.Consumed = "Consumed";
Language.Generated = "Generated";
Language.Incoming = "Incoming";
Language.Fowarded = "Fowarded";
Language.Local_ACL = "Local_ACL";
Language.DOS_ATTACK = "DOS_ATTACK";
Language.INVALID_TRAFFIC = "INVALID_TRAFFIC";
Language.INVALID_FRAGMENTED_TRAFFIC = "INVALID_FRAGMENTED_TRAFFIC";
Language.ICMP_REDIRECT = "ICMP_REDIRECT";
Language.SOURCE_ROUTED_PACKET = "SOURCE_ROUTED_PACKET";
Language.FRAGMENTED_TRAFFIC = "FRAGMENTED_TRAFFIC";
Language.APPLICATION_FILTER = "APPLICATION_FILTER";
Language.USER_IDENTITY = "USER_IDENTITY";
Language.FOREIGN_HOST = "FOREIGN_HOST";
Language.IPMAC_FILTER = "IPMAC_FILTER";
Language.IP_SPOOF = "IP_SPOOF";
Language.ARP_POISIONING = "ARP_POISIONING";
Language.SSLVPN_ACL_VIOLATION = "SSLVPN_ACL_VIOLATION";
Language.InvalidRuleId = "You must enter valid Rule Id.";
Language.InvalidConnectionId = "You must enter valid Connection Id.";
Language.ConfirmDisplay = "Are you sure want to apply Display Filter?";
Language.ConfirmResetData = "Are you sure want to reset Display Filter?";
Language.DNS="DNS";
Language.DNS_List="DNS List";
Language.Add_DNS_Server="Add DNS Server";
Language.Obtain_DNS_from_DHCP="Obtain DNS from DHCP";
Language.Obtain_DNS_from_PPPoE="Obtain DNS from PPPoE";
Language.Obtain_DNS_Static="Static DNS";
Language.List_Order_Preferences="List order indicates preference";
Language.DNSConfMsg="Are you sure you want to apply the DNS Configuration?";
Language.IP_Already_Added_Message="DNS Server has been already added.";
Language.OneDNSRequired="At least one DNS server is required.";
Language.Maximum3DNSallowed="Maximum three DNS are allowed.";
Language.Information="Information";
Language.TCP="TCP";
Language.UDP = "UDP";
Language.ICMP = "ICMP";
Language.All_Protocol = "All Protocols";
Language.ProtocolNotSelectedMessage = "You must select at least one Protocol.";
Language.DOSAddTitle = "Add DoS Bypass Rule";
Language.DOSEditTitle = "Edit DoS Bypass Rule";
Language.DosRuleInUse = "You cannot delete the DoS Bypass Rule. Firewall Rule exists For NAT Policy.";
Language.PacketRatePer="Packet rate per";
Language.BurstRatePer="Burst rate per";
Language.PacketPerMin="(Packet/min)";
Language.PacketPerSec="(Packet/sec)";
Language.PacketRate="Packets Rate";
Language.PacketBurst="Packets Burst";
Language.Flag="Flag";
Language.Traffic="Traffic";
Language.Dropped="Dropped";
Language.SynFlood="SYN Flood";
Language.UDPFlood="UDP Flood";
Language.TCPFlood="TCP Flood";
Language.ICMPFlood="ICMP Flood ";
Language.SynFlooder="SYN Flooders";
Language.UDPFlooder="UDP Flooders";
Language.TCPFlooder="TCP Flooders";
Language.ICMPFlooder="ICMP Flooders";
Language.DroppedSourceRoutedPackets="Dropped Source Routed Packets";
Language.DisableICMPRedirectPacket="Disable ICMP/ICMPv6 Redirect Packet";
Language.DisableARPFlooding="Disable ARP Flooding";
Language.DosConfMsg="Are you sure you want to apply the DoS Settings?";
Language.InvalidPacketRateMessage="You must enter value between 1 and 600000 packets/minute for Packets Rate";
Language.InvalidPacketBurstMessage="You must enter value between 1 and 10000 packets/second for Packets Burst";
Language.DownloadClient="Download Client";
Language.ClientType="Client Type";
Language.Windows="Windows";
Language.CaptivePortal="Captive Portal";
Language.Linux="Linux";
Language.SingleSignOn="Single Sign On";
Language.CSTAS="CTAS (Clientless Single Sign On)";
Language.CTASENG="English";
Language.CTASNONENG="Non-English";
Language.ThinClient="Thin Client for Active Directory Authentication";
Language.CorporateClient="Corporate Client";
Language.Open="Open";
Language.AddDDNSAccount = "Add Dynamic DNS Account";
Language.AccountDetails = "Host Details ";
Language.UsePortIP = "Use Port IP";
Language.NatedRealIP = "NATed Public IP";
Language.IPUpdateCheckingInterval = "IP Edit Checking Interval";
Language.Minutes_4_60 = "4 - 60 Minutes";
Language.ServiceProviderDetail = "Service Provider's Details";
Language.ServiceProvider = "Service Provider";
Language.SelectServiceProvider = "Select Service Provider";
Language.LoginName = "Login Name";
Language.RefressIntervalRangeCheckMsg="You must enter valid interval (Minimum: 4 min and Maximum: 60 min).";
Language.MustSelectInterface="You must select interface";
Language.MustSelectServiceProvider="You must select Service Provider.";
Language.DDNSConfMsg = "Are you sure you want to create the DDNS?";
Language.ConfUpdDDNSMsg = "Are you sure you want to update the DDNS?";
Language.DDNSCreateSuccess="DDNS account '{hostName}' has been created successfully.";
Language.DDNSUpdSuccess="DDNS account '{hostName}' has been updated successfully.";
Language.InvalidDomainName2="You must enter valid domain for ";
Language.LastIP = "Last Updated IP";
Language.LastStatus = "Last Updated Status";
Language.LastTime = "Last Updated Time";
Language.FailureReason = "Failure Reason";
Language.EmailArchiverAddPageTitle = "Create Email Archiver";
Language.EmailArchiverUpdatePageTitle = "Edit Email Archiver";
Language.copyto = "Send Copy Of Email To";
Language.SMTPOnly = "(Applicable To SMTP Only)";
Language.EmailArchiverAddConfirmMessage = "Are you sure you want to create Email Archiver?";	
Language.EmailArchiverUpdateConfirmMessage = "Are you sure you want to update Email Archiver?";
Language.SelRecepientMsg = "Please select recipient.";
Language.CopyTo = "Send Copy To";
Language.EmailHeader = "Import Email Address/Domain";
Language.EmailListSizeExceed = "Can't add Email Address/Domain beyond max limit";
Language.InvalidEmail = "Invalid Email Address/Domain";
Language.DuplicateEmailInGrp = "Email Address/Domain already exists in this address group";
Language.ErrorMsg1 = "Some Email Addresses/Domains could not be imported successfully. Below is the summary";
Language.LimitedSummary1 = "Some Email Addresses/Domains couldn't be imported successfully. Below is the summary of 50 invalid Email Addresses/Domains. <br/> &nbsp;&nbsp;This can happen because of invalid Email Addresses/Domains,duplicate Email Addresses/Domains or Email Addresses/Domains beyond max limit.";
Language.UserHeader = "Import User Name";
Language.InvalidUser = "Invalid Name/User Name";
Language.InvalidPasswordEnc = "Invalid Encrypted Password";
Language.DuplicateUser = "User Name already exists";
Language.ErrorMsg2 = "Some users could not be imported successfully. Below is the summary";
Language.LimitedSummary2 = "Some Users could not be imported successfully. This can happen because of invalid/duplicate/excess number of &nbsp;&nbsp;Users, Below is the summary of 50 invalid Users. <br/>";
Language.UnameLengthExceed = "Username should not exceed 50 characters.";
Language.NameLengthExceed = "Name should not exceed 50 characters.";
Language.PasswdLenExceed = "Password should not exceed 50 characters.";
Language.GroupNameLengthExceed = "Groupname should not exceed 50 characters.";
Language.EmailIdLengthExceed = "Email Address should not exceed 50 characters.";
Language.LogViewerTitle = "Log Viewer for different modules";
Language.EventModule = "View logs for";
Language.LogComp = "Log Comp";
Language.FirewallRule = "Firewall Rule";
Language.BytesRT = "Bytes Rx/Tx";
Language.BytesTransfer = "Bytes Transfer";
Language.TotalEvent = "Total Logs";
Language.MessageID = "Message ID";
Language.EmailSent = "Email Sender";
Language.EmailRecpt = "Email Reciever";
Language.EmailSubject = "Email Subject";
Language.Virus = "Virus";
Language.AdminLog = "Admin";
Language.ProtectedContact = "Protected Contact";
Language.PeerContact = "Peer Contact";
Language.IMAction = "IM Action";
Language.RuleAction = "Rule Action";
Language.ClearFilter = "Clear Filter";
Language.DeleteLogs = "Delete Logs";
Language.ExportLogs = "Export Logs";
Language.SetRefreshInterval = "Set Refresh Interval";
Language.ConnectionName = "Connection Name";
Language.BytesSent = "Bytes Sent";
Language.AuthClient = "Auth Client";
Language.AuthMech = "Auth Mechanism";
Language.ApplicationCategoryAppCategory = "Application Category";
Language.SourceRouteAddPageTitle = "Add Explicit Source Route";
Language.gateway = "Gateway";
Language.NetId = "Network Id";
Language.SourceRouteAddConfirmMessage = "Are you sure you want to add explicit Source Route?";
Language.InvalidNetworkId = "Network Id is invalid. \\nEnter Valid Network Id for this subnet.";
Language.GatewayNotSelected = "You must select Gateway.";
Language.ExplicitSourceRoute = "Explicit Source Route";
Language.FTCEditTitle = "Edit File Type Category";
Language.FTCAddTitle = "Add File Type Category";
Language.FileTypeName="File Type Category Name.";
Language.Extension="File Extension";
Language.MIMEHeader="MIME Header";
Language.FileExtensions="File Extension(s)/MIME Header(s)  ";
Language.FileExtensionHelp = "Use comma as a separator to enter multiple extensions or MIME headers \n e.g. extensions like jpg,gif,bmp and MIME headers like audio/x,application/smil.";
Language.ExtensionNotNull = "Extension required between two commas.";
Language.CommaNotAllowed=" cannot contain comma, single quotes and double quotes characters.";
Language.MaxExtensionLimit="Only 255 extensions can be added for a File Category.";
Language.MaxHeaderLimit="Only 255 MIME Headers can be added for a File Category.";
Language.Extensions="File Extensions";
Language.MIMEHeaders="MIME Headers";
Language.FTCTitle="File Type Category ";
Language.UnifiedThreatManagement = "Unified Threat Management";
Language.Configuring = "Configuring";
Language.PleaseWait = "Please wait...";
Language.ClickToAccess = "- Click to access web admin console";
Language.ExceptionFinishingWizard = "Exception occured while finishing wizard:";
Language.ExceptionCreatingXMLHttp = "Exception occured while creating XMLHttpRequest instance:";
Language.GatewayMode = "Gateway Mode";
Language.AuthenticationMethods="Authentication Methods";
Language.ListOrderPriority="List order indicates priority";
Language.AppSettingsConfMsg = "Are you sure you want to update Authentication Settings?";
Language.MaximumSessionTimeout = "Maximum Session Timeout";
Language.MaximumRange = "Minutes (Between 3-1440)";
Language.NTLMMaximumRange = "Minutes (Between 6-1440)";
Language.HTTPs_Redirection="HTTPS Redirection";
Language.KeepAliveForHTTPClient = "Keep Alive Request For Captive Portal";
Language.DataTransferThreshold = "Data Transfer Threshold";
Language.UserInactivityTimeout = "User Inactivity Timeout";
Language.DefGroup="Default Group";
Language.UserSessionTitle="Global Settings";
Language.CapPortalTitle="Captive Portal Settings";
Language.UserSessionConfirmMessage="Are you sure you want to update Global Settings?";
Language.CapPortalConfirmMessage="Are you sure you want to update Captive Portal Settings?";
Language.CP="Unauthenticated users settings";
Language.CustomMsg="Custom Message";
Language.WinLink="Windows Corporate Client Download Link";
Language.LinuxLink="Linux Corporate Client Download Link";
Language.MACLink="Mac Corporate Client Download Link";
Language.HeaderImg="Page Header Image";
Language.FooterImg="Page Footer Image";
Language.BlinkMsg="Blink Custom Message";
Language.PreviewLbl1="Preview >>";
Language.Sizelbl="(Size: 700 X 80 Pixels)";
Language.ValidFormat="Invalid file format. File should be in .jpg, .bmp, .gif or .png format";
Language.Custom="Custom";
Language.MaxLimit="Maximum Limit for Authentication Server is 20.";
Language.MaxSessionTimeoutOutOfRange = "Maximum Session Timeout must be between 3 and 1440.";
Language.UserInactivityTimeoutOutOfRange = "User Inactivity Timeout must be between 3 and 1440.";
Language.SimulLogin="Simultaneous Logins";
Language.MaxSimulLoginLimit="(1 - 99)";
Language.MaxSimulLoginOutOfRange="Simultaneous Logins must be between 1 and 99.";
Language.DataTransferThresholdRange1 = "Data Transfer Threshold  must be between 1 and 4294967295.";
Language.LocalAuthForGuestUser = "Note: Guest user will be authenticated locally.";
Language.AddFirewallRule = "Add Firewall Rule";
Language.Advance_Setting_MSG = "(Security Policies, QoS, Routing Policy, Log Traffic)";
Language.Zone = "Zone";
Language.Select_Source_Zone = "Select Source Zone";
Language.LAN = "LAN";
Language.WAN = "WAN";
Language.DMZ = "DMZ";
Language.Select_Destination_Zone = "Select Destination Zone";
Language.LOCAL = "LOCAL";
Language.Attach_Identity = "Attach Identity";
Language.Host = "Host";
Language.Apply_NAT = "Apply NAT";
Language.Select_NAT_Policy = "Select NAT Policy";
Language.MSQD = "MSQD";
Language.Advance_Settings = "Advanced Settings";
Language.Security_Policies = "Security Policies";
Language.Apply_Web_Category_based_QoS_Policy = "Apply Web Category based QoS Policy";
Language.AV = "AV";
Language.AS_Scanning = "AS Scanning";
Language.IM_Scanning = "IM Scanning";
Language.POP3 = "POP3";
Language.IMAP = "IMAP";
Language.Routing_Policy = "Routing Policy";
Language.QoS_AND_Routing_Policy = "QoS & Routing Policy";
Language.Route_Through_Gateway = "Route Through Gateway";
Language.Load_Balance = "Load Balance";
Language.Default_Gateway = "Default Gateway";
Language.Alternate_Gateway = "Alternate Gateway";
Language.Backup_Gateway = "Backup Gateway";
Language.Select_Gateway = "Select Gateway";
Language.Log_Traffic = "Log Traffic";
Language.Log_TrafficLabel = "Log Firewall Traffic";
Language.ConfirmOKMessage = "Are you sure you want to create the Firewall Rule?";
Language.EditConfirmOKMessage = "Are you sure you want to update the Firewall Rule?";
Language.Source_Zone_Not_Selected = "You must select Source Zone";
Language.Destination_Zone_Not_Selected = "You must select Destination Zone";
Language.Identity_Not_Selected = "You must select Identity";
Language.Source_Not_Selected = "You must select Source Network/Host";
Language.Destination_Not_Selected = "You must select Destination Network/Host";
Language.Service_Not_Selected = "You must select Services";
Language.gatewayNotSame = "You cannot use same IP Address for Route Through Gateway and Backup Gateway.";
Language.SNAT_Not_Selected = "You must select SNAT Policy.";
Language.Apply_App_based_QoS_Policy = "Apply Application based QoS Policy";
Language.Advance_Setting_MSG_Bridge = "(Security Policies, QoS Policy, Log Traffic)";
Language.GatewayHelpText="(Applicable only in case of Multiple Gateways)";
Language.RuleNameHeader="Rule Name";
Language.BasicSettings="Basic Settings";
Language.DSCPMarking = "DSCP Marking";
Language.SourceHost = "Source Host";
Language.DestinationHost = "Destination Host";
Language.SourceName = "Source Host Name";
Language.DestinationName = "Destination Host Name";
Language.RoutingGateway = "Routing Through Gateway";
Language.Logging = "Logging";
Language.Scan = "Scan";
Language.Service = "Service";
Language.NoFirewallRule = "No Firewall Rule";
Language.NoSystemRuleFirewallRule = "You cannot insert new Firewall Rule between two System Rules.";
Language.NoLocalACLRuleFirewallRule = "You cannot insert new Firewall Rule between two Local ACL System Rules.";
Language.enableConfirm = "Are you sure you want to enable the Firewall Rule?";
Language.disableConfirm = "Are you sure you want to disable the Firewall Rule?";
Language.disableSuccessMessage = "Firewall Rule has been disabled successfully.";
Language.disableFailedMessage = "Firewall Rule could not be disabled.";
Language.canNotDisableSystemRule = "System Rules cannot be disabled.";
Language.canNotDisableLocalACLRule = "Local ACL Rules cannot be disabled.";
Language.selectedZone = "Firewall rule displaying only selected zone";
Language.EnableSchDeactive = "Enable - Schedule Deactive";
Language.Enabled = "Enabled";
Language.Disabled = "Disabled";
Language.Move = "Move";
Language.Insert = "Insert";
Language.AntiSpamUnsubscribed = "Spam detection using RPD(TM) technology and virus scanning are disabled as \"Gateway Anti Spam\" and \"Gateway Anti Virus\" modules are not subscribed";
Language.GWAntiSpamUnsubscribed = "Spam detection using RPD(TM) technology is disabled as \"Gateway Anti Spam\" module is not subscribed";
Language.DefRuleMoveMsg="Default Firewall rules cannot be re-ordered.";
Language.UploadData = "Upload Data";
Language.DownloadData = "Download Data";
Language.MoveFirewallRule = "Move Firewall Rule";
Language.Image = "Firmware Image";
Language.LastUpgradeDate = "Last Upgrade Date";
Language.UploadandBootSuccess = "Firmware applied successfully. Appliance will now reboot with the firmware ";
Language.NoFirmwareImage = "No new firmware image. Please upload new firmware image here.";
Language.ConfirmReBoot = "System will reboot immediately and this firmware will be replaced as an active firmware.Are you sure want to apply Firmware version '{number}'?";
Language.CancelUploadSuccess = "Firmware Upload canceled.";
Language.CancelUploadFailed = "Firmware Upload Cancel procedure failed.";
Language.NotCompatible = "(Not compatible)";
Language.NotCompatibleMessage= "The firmware you have chosen is not compatible. System cannot be booted with this firmware. Please upload a compatible firmware and try again.";
Language.BootFirmware="Boot firmware image";
Language.BootDefaultSetting="Boot with factory default configuration";
Language.UploadFirmware="Upload firmware";
Language.UnabledToUpgradeMsg="Firmware cannot be upgraded when HA cluster is in \"Standalone-Fault\" mode or from Auxiliary appliance.";
Language.UnabledToBootMsg="Booting Appliance with this firmware is not allowed from Auxiliary appliance or when HA cluster is in \"Standalone-Fault\" mode.";
Language.UnabledToFactoryResetMsg="Booting Appliance with factory default configuration is not allowed from Auxiliary appliance or when HA cluster is in \"Standalone-Fault\" mode.";
Language.UpDown = "Firmware Upgrade/Downgrade";
Language.UploadFile = "Upload File";
Language.ConfirmUpload = "This firmware will replace the non-active firmware image on your appliance.Are you sure you want to Upload?";
Language.Upload = "Upload";
Language.UploadAndBoot = "Upload & Boot";
Language.ConfirmUploadBoot = "This firmware will replace the non-active firmware image on your appliance.Are you sure you want to Upload & Boot?";
Language.FileMessage = "You must select a file for Firmware Upgrade/Downgrade.";
Language.FWUploading = "New Firmware is being transferred and verified....please wait ";
Language.LastSeen = "Last Seen";
Language.NoFlooderFound = "No Flooder Found";
Language.Victims = "Victims";
Language.NoVictimFound = "No Victim Found";
Language.EnableAuthentication = "Enable 4-Eye Authentication";
Language.Authorizer = "Select Authorizer";
Language.AdministratorList = "Administrator List";
Language.SelectedAuthorizer = "Selected Authorizer";
Language.ConfirmSettingChange = "Are you sure you want to change the settings?";
Language.AuthorizerRequired = "You must select at least one authorizer.";
Language.FQDNAddTitle = "Add FQDN Host";
Language.FQDNUpdateTitle = "Edit FQDN Host";
Language.FQDN = "FQDN";
Language.FQDNHostGroup = "FQDN Host Group";
Language.InvalidDomainName3="You must enter valid value for FQDN.";
Language.ResolvedIPList="Resolved IPs";
Language.FQDNHGAddTitle = "Add FQDN Host Group";
Language.FQDNHGUpdateTitle = "Edit FQDN Host Group";
Language.SelectHost = "Select Host";
Language.fqdnHost="FQDN Host";
Language.FQDNHostList="FQDN Host List";
Language.SelectedHost="Selected Host";
Language.EmptyFQDNHostListLabel="No FQDN Host(s) available";
Language.VirtualHostExistsMessage = "FQDN Host could not be deleted. Virtual Host exists for FQDN Host.";
Language.NATPolicyExistsMessage = "FQDN Host could not be deleted. NAT Policy exists for FQDN Host.";
Language.Weight = "Weight";
Language.BackupDetailTitle = "Backup Gateway Details";
Language.ActivateLabel = "Activate this Gateway";
Language.ActivateFailLabel = "Active gateway fails";
Language.ActivateFailAny = "ANY";
Language.ActivateFailAll = "ALL";
Language.ActivateManuallyLabel = "Manually";
Language.ActionLabel = "Action on Activation";
Language.ActionNetworkTitle = "Networks explicitly routed through this gateway";
Language.ActionInheritLabel = "Inherit weight of the failed active gateway";
Language.ActionPreConfigeLabel = "Use pre-configured weight";
Language.GWUpdConfMsg = "Are you sure you want to update the Gateway?";
Language.GWUpdateSuccess = "Gateway '{gatewayname}' has been updated successfully.";
Language.FailoverRules = "Failover Rules";
Language.ChkWeight = "&nbsp;Weight must be between 1 - 100";
Language.HoldDownTime1 = "Hold Down Time";
Language.HoldDownTimeRange = "(1-60 Seconds)";
Language.HoldDownTimeOutOfRange = "Hold down time should be between 1-60 seconds.";
Language.AllGWBackupMsg = "With this operation, all gateways in the system will be BACKUP gateways.This operation might result in termination of outbound traffic to WAN.<br/>Do you still want to continue?";
Language.GWIPDifferentInterfaceIP="Gateway IP Address must be different from Interface IP Address";
Language.GWInterfaceNetworkMsg="Gateway IP & Interface IP Address must be in same network";
Language.OnFailure = "Activate on Failure of";
Language.FailoverTimeout="Gateway Failover Timeout";
Language.FailoverTimeoutConf="Gateway Failover Timeout Configuration";
Language.TimeoutSecond="seconds (1-65535)";
Language.GroupName = "Group Name";
Language.AddGroupTitle = "Add Group";
Language.EditPageTitle = "Edit Group";
Language.GroupType = "Group Type";
Language.SurfingQuota = "Surfing Quota";
Language.Accesstime = "Access Time";
Language.DataTransfer = "Data Transfer";
Language.MACBinding = "MAC Binding";
Language.L2TP = "L2TP";
Language.L2TPIP = "IP Address";
Language.L2TPIPDesc="This IP Address will be leased to user for L2TP access. ";
Language.PPTP = "PPTP";
Language.PPTPIPDesc="This IP Address will be leased to user for PPTP access. ";
Language.L2TP_PPTPRadious = "Allow leasing IP address from Radius server for L2TP,PPTP and CISCO VPN Client";
Language.LoginRestriction = "Login Restriction";
Language.AnyNode = "Any Node";
Language.SelectedNode = "Selected Nodes";
Language.Range = "Node Range";
Language.FromIP = "From IP";
Language.ToIP = "To IP";
Language.ShowGroupMember = "Show Group Members";
Language.groupAddConfirmMessage = "Are you sure you want to create a group?";
Language.groupUpdateConfirmMessage = "Are you sure you want to update group details?";
Language.ChkSurfingQuotaPolicyMsg="You must select Surfing Quota policy.";
Language.ChkAccessTimePolicyMsg="You must select Access Time policy.";
Language.ChkIPAddrMsg2="Please enter valid IP Address";
Language.IPNotSameClass1 = "Range From and To field should be of same class.";
Language.IPRangeLimitCC = "Maximum 20 IP Address are allowed in an IP Range.";
Language.NotApplicable = "Not Applicable";
Language.ChkIPAddressLoopBackMsg="Loopback IP Addresses is not allowed in Login Restriction.";
Language.OneIPAddressRequiredMsg="At least one IP Address is required.";
Language.GrpID="Group ID";
Language.MoveFailedMessage ="Group order could not be updated.";
Language.AddGroupMember="Add Group Member";
Language.CurrentGroup="Current Group";
Language.GroupConfMsg="Are you sure you want to add member in Current Group?";
Language.GroupMembers="Group Members";
Language.Overview="Overview";
Language.Step1="Step 1. Provide Base DN for";
Language.Step2="Step 2. Select AD groups to";
Language.Step3="Step 3. Select common policies";
Language.ForGroups="for Groups";
Language.Step4="Step 4. Select Specific policies";
Language.ForGroupsIf="for Groups(If required)";
Language.Step5="Step 5. Review Selection";
Language.Step6="Step 6. View Results";
Language.SelectSpecificPolicies="Step 4: Select specific Policies for Groups";
Language.YouHaveDecided="You have decided to attach specific policies for groups. This page helps you achieve that.";
Language.PoliciesForEachGroup="Select specific policies for each group listed. If you do not want to attach a policy to the group then select do not attach.";
Language.SQP="Surfing Quota Policy";
Language.ATP="Access Time Policy";
Language.WFP="Web Filter Policy";
Language.Bandwidth="Bandwidth Policy";
Language.DTP="Data Transfer Policy";
Language.ImportGroupWizard="Import Group Wizard";
Language.Step3ForPolicy="Step 3. Select common policies for Groups";
Language.SelectCommonPolicies1="Step 3: Select Common Policies for Groups";
Language.ThisPageHelps="This page helps you select common policies that will be attached to all the groups.";
Language.IfYouDoNot="If you do not want to attach common policy to all the groups, then leave \"Attach";
Language.ToAllGroups="to all the Groups?\" checkbox for that policy unchecked. By doing this you can ";
Language.AttachDifferent="attach different policies to groups in the next step.";
Language.AttachToAll="Attach to all the Groups?";
Language.GuestUserRegistration = "Guest User Registration";
Language.Mobile = "Cell Phone Number";
Language.InvalidRecaptchaResponse = "You must enter a valid code.";
Language.CodeVerification = "CAPTCHA Verification";
Language.Id = 'User ID';
Language.Exportbtn = 'Export';
Language.SMSStatus = "SMS Status";
Language.ChangeStatusConfirmMsg2="Are you sure you want to change the user status?";
Language.DuplicateNotImported="Few Users could not be registered. Specified username already exists in Appliance, choose a different name.";
Language.InvalidPassword="Few Users could not be registered. They have invalid Email Address.";
Language.ResendCredential = "Re-Send Credential";
Language.EnableGuestUserSettings = "Please Enable Guest User Settings to re-send credentials.";
Language.EnableGuestUsers = "Enable Guest Users Registration";
Language.UserNamePrefix = "Username Prefix";
Language.UserAccountExpiry = "User Account Expiry";
Language.AutoPurgeAfter = "Auto-purge users after";
Language.UseCellNumber = "Use Cell Number as Username";
Language.AutoGenerateUserName = "Auto-Generate Username";
Language.SMSGateway = "SMS Gateway";
Language.SMSGWProfileRequired="You must select SMS Gateway Profile.";
Language.UserNamePrefixRequired = "You must enter User Name Prefix.";
Language.InvalidValForDays = "Number of days must be in the range of 1 to 365.To configure more than 365 days select month or year.";
Language.InvalidValForMonths = "Number of months must be in the range of 1 to 36.";
Language.InvalidValForYears = "Number of years must be in the range of 1 to 3.";
Language.GroupRequired = "You must select Default Group.";
Language.GuestUserName = "Guest Username";
Language.UserValidity = "User Validity (Duration in Days)";
Language.AutoPurgeExpiry = "Auto Purge on Expiry";
Language.HighAvailabilityDetails="High Availability Details";
Language.HAConfigMode="HA Configuration Mode";
Language.HAAdminUser="HA Administration Username";
Language.PeerHALinkIP="Peer HA Link IPv4";
Language.PeerAdminPort="Peer Administration Port";
Language.PeerAdminIP="Peer Administration IP";
Language.SelectPort="Select Ports to be Monitored";
Language.BridgeModeHAmsg="HA not supported in bridge mode";
Language.ApplianceSpecMsg="HA cannot be configured on CR25i/CR15i appliance.";
Language.InterfaceSpecMsg="HA cannot be configured when one or more WAN interfaces are DHCP/PPPoE/WWAN enabled.";
Language.EnableHAConfirmMsg="Are you sure you want to enable HA?";
Language.DisableHAConfirmMsg="Are you sure you want to disable HA?";
Language.AdminPortCheckMsg="Peer Administration Port and Dedicated HA Link Port can not be same";
Language.MemberPortCheckMsg="HA Link Port can not be a member of Monitored Ports";
Language.BtnSync="Sync Auxiliary";
Language.SyncMsg="Are you sure you want to Sync Auxiliary?";
Language.DedicatedHAPortCheck="Dedicated HA Link Port IP and Peer HA link IP can not be same.";
Language.BtnPrimaryChange="Put on StandBy";
Language.BtnAuxChange="Put Peer on StandBy";
Language.PrimaryChangeConfirmMsg="This Appliance will be restarted.<br/> Are you sure you want to put Appliance on StandBy?";
Language.AuxChangeConfirmMsg="Peer Appliance will be restarted.<br/> Are you sure you want to put Peer Appliance on StandBy?";
Language.CompatibilityMsg="To configure High Availability on your Appliance, please contact {supportemailid}";
Language.IPHGAddTitle = "Add IP Host Group";
Language.IPHGUpdateTitle = "Edit IP Host Group";
Language.HostGroupType="IP Host Group";
Language.HostList="Host List";
Language.AddressDetail = "Address Detail";
Language.HTTPRuleAddTitle = "Add HTTP Rule";
Language.SourceIPAddr = "Source IP Address";
Language.DestinationIPAddr = "Destination IP Address";
Language.URLReg = "URL Regex.";
Language.HTTPSRAddConfirmMessage = "Are you sure you want to add HTTP Scan Rule?";
Language.Bypass = "Bypass";
Language.HTTPRuleEditTitle="Edit HTTP Rule";
Language.URLRegX = "URL Regex";
Language.HTTPSScanningAddTitle = "Add HTTPS Scanning Exception";
Language.HTTPSScanningEditTitle = "Edit HTTPS Scanning Exception";
Language.DomainURLRegex = "Domain/URL/RegEx";
Language.CategoryRequired = "The category to be bypassed must be selected";
Language.DomainRequired = "You must enter valid value for bypass";
Language.IMContactAddTitle="Add IM Contact";
Language.IMContactEditTitle="Edit IM Contact";
Language.IMUserName="IM User Name";
Language.IMGroup="IM Contact Group";
Language.Note1="e.g. jack@yahoo.com";
Language.IMContactRecExist="IM Contact could not be updated. IM Contact already exists, choose a different IM username.";
Language.IMContactGroupAddTitle="Add IM Contact Group";
Language.IMContactGroupEditTitle="Edit IM Contact Group";
Language.SelMember="Select IM Contact";
Language.IMCGRecExist="IM Contact Group could not be updated. IM Contact Group already exists, choose a different group name.";
Language.SelIMContactMsg="You must select at least one IM Contact.";
Language.IMContactList="IM Contact List";
Language.SelectedIMContact="Selected IM Contact";
Language.DeleteValidation="You must select at least one IM Contact Group.";
Language.RegExSettings = "RegEx Settings";
Language.KeywordSettings = "Keyword Settings";
Language.AppChangeConfMsg = "Are you sure you want to apply the changes?";
Language.NotValidRegEx="Not a valid Regex. Please enter valid Regex.";
Language.NotValidKeyWord="Special Characters like \\,^,$,{,},(,),[,],.,*,+,? and | are not allowed.";
Language.RegExCannotBeBlank="RegEx cannot be blank.";
Language.KeywordCannotBeBlank="Keyword cannot be blank.";
Language.KeywordRegExRequired ="At least one keyword and RegEx is required.";
Language.KeywordList = "Keyword List for Content Filter";
Language.RegexList="RegEx List for Content Filter";
Language.DuplicateRegexList="Duplicate Regex exists.";
Language.DuplicateKeywordList="Duplicate Keyword exists.";
Language.IMConversationRuleName = "Conversation Rule name";
Language.ConversationAddTitle = "Add Conversation Rule";
Language.ConversationEditTitle = "Edit Conversation Rule";
Language.BetweenUserIMcontact = "Between User/IM contact";
Language.OnetoOneConversation = "One-to-One Conversation";
Language.GroupConversation = "Group Conversation";
Language.ContentFilter = "Content Filter";
Language.LoggingLevel = "Logging Level";
Language.Participant_1_Not_Selected = "You must select First Participant";
Language.Participant_2_Not_Selected = "You must select Second Participant";
Language.Participant = "Participant";
Language.IMFileTransferRuleName = "File Transfer Rule name";
Language.FileTransferRuleAddTitle = "Add File Transfer Rule";
Language.FileTransferRuleEditTitle = "Edit File Transfer Rule";
Language.VirusScanning = "Virus Scanning";
Language.Archiving = "Archiving";
Language.IMLoginRuleName = "Login Rule name";
Language.LoginRuleExists = "Login Rule with the same name already exists, choose a different name.";
Language.LoginRuleAddTitle = "Add Login Rule";
Language.LoginRuleEditTitle = "Edit Login Rule";
Language.User_IM_Contact = "User/IM contact";
Language.PrivacyDisclaimer = "Privacy Disclaimer";
Language.Uset_Contact_Not_Selected = "You must select User/IM contact";
Language.Participants = "Participants";
Language.WebcamRuleName = "Webcam Rule name";
Language.WebcamRuleAddTitle = "Add Webcam Rule";
Language.WebcamRuleEditTitle = "Edit Webcam Rule";
Language.Exit="Exit";
Language.ImportGroup="Import Group Wizard Help";
Language.ImportGroupWizardHelp="The Import group wizard will help you import Active Directory Groups into Appliance using following steps.";
Language.ProvideBaseDN1="Step 1.Provide Base DN for Groups";
Language.SelectADGroups="Step 2.Select AD groups to import";
Language.SelectCommonPolicies2="Step 3.Select common policies for Groups";
Language.SelectSpecificPolicies1="Step 4.Select Specific policies for Groups(If required)";
Language.OnceYouHave="Once you have performed above steps ,your selected groups will be imported from Active Directory to the Appliance"; 
Language.SelectedPolicies=" and selected policies will be attached to them.";
Language.NoteUpdConfMsg = "Updating the Interface details may affect one or more of its dependent configurations, including:<br/>1. DHCP Server or Relay<br/>2. VPN configurations<br/>3. Respective VLAN Interface(s), and its configuration(s)<br/>4. Router Advertisement<br/><br/>Are you sure you want to update the Interface details?"; 
Language.InterfaecDeleteConfirm = "Deleting an Interface(s) will delete one or more of its dependent configurations, including:<br/>1. Interface-Zone binding<br/>2. DHCP Server or Relay<br/>3. Interface based Firewall Rules<br/>4. ARP - NDP Static and Proxy<br/>5. Virtual Hosts and respective Firewall Rules <br/>6. Interface based Hosts and respective Host Groups <br/>7. Routes - Unicast and Multicast <br/>8. Interface based PPPoE configurations<br/>9. Gateway configurations<br/>10. VPN configurations<br/>11. Router Advertisement<br/><br/>Are you sure you want to delete the selected Interface(s)?";
Language.PPPoE = "PPPoE";
Language.DHCP = "DHCP";
Language.ServiceName1 = "Access Concentrator/Service Name";
Language.LCPInterval = "LCP Echo Interval";
Language.LCPRequest = "Send LCP echo request every";
Language.LCPSecond = "seconds (5-180,Default:20)";
Language.LCPFailure = "LCP Failure";
Language.LCPReply = "Wait for LCP echo reply for";
Language.LCPAttempts = "attempts (Default:3)";
Language.InterfaceCannotDisabledMsg = "You cannot disable interface, you are currently connected through.";
Language.UnboundInterfaceConfirm = "Unbinding the Interface will delete all its dependent configurations, including:<br/>1. Interface-Zone binding<br/>2. DHCP Server or Relay<br/>3. Interface based Firewall Rules<br/>4. ARP - NDP Static and Proxy<br/>5. Virtual Hosts and respective Firewall Rules <br/>6. Interface based Hosts and respective Host Groups <br/>7. Routes - Unicast and Multicast <br/>8. Interface based PPPoE configurations<br/>9. Gateway configurations<br/>10. VPN configurations<br/>11. Router Advertisement<br/><br/>Are you sure you want to unbind the Interface?"; 
Language.ChkPasswordMessage="Password mismatch. The Password typed in Password and Confirm Password fields must be same.";
Language.HAIsConfigured = "HA is configured so WAN interface cannot be configured as PPPoE or DHCP.";
Language.DedicatedPortMsg="HA is configured.Selected Port is dedicated Port.Could not be updated.";
Language.HAMonitorPortMsg="Interface can't be Unbinded. Interface is used as HA Monitor Port.";
Language.HAAdminPortCheck="Interface can't be Unbinded. Interface is used as Peer Administration Port in HA.";
Language.BothDNSsameMsg="Primary DNS IP & Secondary DNS IP Address must not be same";
Language.NotValidUser="Not a valid User Name";
Language.BlankPassword="Password value should not Blank";
Language.LocalIntervalValue="Local Interval value should be between 5 to 180";
Language.LCPFailureAttempt="LCP Failure Attempts should be between 1 to 65535";
Language.MSSValueInPPPOE="MSS value should be between 528 and 1452 in PPPOE";
Language.MTUMSSValueInPPPOE = "MTU value atleast 48 greater than MSS value";
Language.IPAssignment="IP Assignment";
Language.IPAndMask="IPv4 / Netmask";
Language.IPAndSubnet="IPv6 / Prefix";
Language.SubnetPrefix="Prefix";
Language.ZoneName="Zone Name";
Language.RecordNotExistMessage="Record could not be found.";
Language.ChildExist = "Interface is already in use.";
Language.DelSingleInterfaceConfirm="Deleting Interface will also remove all its dependent configurations including: <br>1. Interface-Zone binding<br>2. DHCP Server or Relay<br>3. Interface based Firewall rules<br>4. ARP - NDP static and proxy<br>5. Virtual hosts and VH based firewall rules<br>6. Interface based Hosts and reference from host groups<br>7. Routes - Unicast, Multicast<br><br>Are you sure you want to delete Interface?";
Language.DelMultiInterfaceConfirm="Deleting Interface will also remove all its dependent configurations including: <br>1. Interface-Zone binding<br>2. DHCP Server or Relay<br>3. Interface based Firewall rules<br>4. ARP - NDP static and proxy<br>5. Virtual hosts and VH based firewall rules<br>6. Interface based Hosts and reference from host groups<br>7. Routes - Unicast, Multicast<br><br>Are you sure you want to delete the selected Interface(s)?";
Language.VLAN = "VLAN";
Language.MemberInterface = "Member Interface";
Language.ConnectedBridgeDelFailed = "You cannot delete bridge pair, you are currently connected through.";
Language.UnitedStates="United States";
Language.World="Rest of the World";
Language.Canada="Canada";
Language.Japan="Japan";
Language.EMEA="EMEA";
Language.GeographyLabel="Geography&nbsp;:&nbsp;";
Language.InternetAccessConfiguration="Internet Access Configuration";
Language.SelectPolicy="Please select the policy for LAN";
Language.WANTraffic="WAN traffic";
Language.MonitorOnly="Monitor Only";
Language.AllowsAccess="Allows access without authentication";
Language.DoesNotBlock="Does not block any traffic";
Language.GeneralInternetPolicy="General Internet Policy";
Language.BlocksUnhealthy="Blocks unhealthy web and Internet traffic";
Language.ScanHTTP="Scan HTTP Traffic for Viruses";
Language.StrictInternetPolicy="Strict Internet Policy";
Language.DoesNotAllow="Does not allow access without authentication";
Language.IPHostAddTitle = "Add IP Host";
Language.IPHostUpdateTitle = "Edit IP Host";
Language.IPRangeType = "IP Range";
Language.IPListType = "IP List";
Language.IPNetworkSubnet = "Subnet";
Language.IPList = "List of IP Addresses";
Language.IPExample = "E.g. 192.168.1.125,192.236.25.1";
Language.HostGroup = "Host Group";
Language.IPlistMsg="You must enter value for IP List.";
Language.CheckIPlist="You must enter valid value for IP List.";
Language.CustomSignatureEditTitle = "Edit Custom Signature ";
Language.CustomSignatureAddTitle = "Add Custom Signature ";
Language.CustomRule="Custom Rule";
Language.DefaultMode="Default Mode";
Language.Detect="Detect";
Language.Off="Off";
Language.CustomSignatureUpdateConfirmMessage="Are you sure you want to update the Custom Signature?";
Language.CustomSignatureAddConfirmMessage="Are you sure you want to add a Custom Signature?";
Language.CheckProtocolMessage = "You must select Protocol.";
Language.CheckSeverityMessage = "You must select Severity.";
Language.CustomSignatureCheck2="Rule must end with a ';'";
Language.CustomRuleHelp="(Format: Keyword:\"value\";) ";
Language.CusSigHeader="Custom Signature";
Language.Action = "Action on VPN Restart";
Language.RespondOnly = "Respond Only";
Language.Initiate = "Initiate";
Language.Tunnel = "Tunnel";
Language.Transport = "Transport";
Language.ConnectionType = "Connection Type";
Language.RoadWarrior = "Remote Access";
Language.NetToNet = "Site to Site";
Language.HostToHost = "Host to Host";
Language.AuthDetails = "Authentication Details";
Language.AuthType = "Authentication Type";
Language.PresharedKey ="Preshared Key";
Language.DigiCerti = "Digital Certificate";
Language.RSAKey = "RSA Key";
Language.LocalCertificate = "Local Certificate";
Language.RemoteCertificate = "Remote Certificate";
Language.LocalNetwork = "Local Network Details";
Language.LocalWANPort = "Local WAN Port";
Language.RemotePeerGW = "Remote Gateway IP Address for the Remote peer";
Language.LocalLANSubnet = "Local Subnet";
Language.RemoteLANAddress1 = "Remote Subnet for the Remote peer";
Language.LocalID = "Local ID";
Language.SelectLocal = "Select Local ID";
Language.IPAddress = "IP Address";
Language.Email2 = "Email";
Language.RemoteIDPeer = "Remote ID for the Remote peer";
Language.RemoteNetworkDetail = "Remote Network Details";
Language.RemoteHost = "Remote Host";
Language.ForAnyIP = "for any IP Address";
Language.RemoteSubnet = "Remote Subnet";
Language.LocalSubnetAddressPeer = "Local Subnet for the Remote peer";
Language.AllowNATTraversal = "Allow NAT Traversal";
Language.RemoteID = "Remote ID";
Language.SelectRemote = "Select Remote ID";
Language.LocalIDPeer = "Local ID for the Remote peer";
Language.UserAuth = "User Authentication";
Language.UserAuthMode = "User Authentication Mode";
Language.EnableClient = "Enable as Client";
Language.EnableServer = "Enable as Server";
Language.AllowedUser = "Allowed User";
Language.QuickMode = "Quick Mode Selectors";
Language.LocalPort = "Local Port";
Language.ForAnyPort = "for any Port";
Language.RemotePort = "Remote Port";
Language.AddUser = "Add User";
Language.ExterCerti = "External Certificate";
Language.LocalRSAKey = "Local RSA Key";
Language.RemoteRSAKey = "Remote RSA Key";
Language.RemoteVPNServer = "Remote VPN Server";
Language.AddIPSecConf = "Are you sure you want to add a IPSec Connection?";
Language.UpdateConfirm = "Are you sure you want to update the IPSec Connection?";
Language.ContainChar = "Connection name must contain alphanumeric characters and underscore only.";
Language.InvalidAction = "Invalid action on restart for dynamic remote host.";
Language.ConnTypeReq = "You must select Connection Type.";
Language.NotChangeConnType = "You cannot change Connection Type as it is member of a Failover group.";
Language.LocalRemoteCerti = "Local and Remote Certificate cannot be same";
Language.SelectLocalServer = "You must select Local WAN Port";
Language.SelectLocalGateway = "You must select address of Local Gateway";
Language.NotSameServerGateway = "IP Address of Local Server and Local Gateway cannot be same.";
Language.SpecifyInterNet = "You must enter Local Internal Networks";
Language.ValidEnterLocal = "You must enter valid Local ID value";
Language.ValidEnterRemote = "You must enter valid Remote ID value"; 
Language.MustRemoteHost1 = "You must enter address of Remote Host";
Language.MustRemoteServer = "You must enter address of Remote Server";
Language.ValidIPDomain = "You must enter valid IP Address or Domain Name for remote server";
Language.CheckManualPolicy = "Please check Remote IP Address.<br>Remote IP Address cannot be dynamic when Keying Method is configured as Manual in IPSec policy";
Language.CheckRSAKey = "Please check Remote IP Address.<br>Remote IP Address cannot be dynamic when Authentication type is configured as RSA Key in IPSec Connection";
Language.RemoteHostValue = "Remote host value must be '*'";
Language.AllowedNetworks = "You must enter allowed networks.";
Language.SpecInterNet = "You must specify Remote Internal Networks.";
Language.MustConfirmPresharedKey = "You must enter Confirm Preshared key";
Language.PresharedKey5Char = "Preshared key must be of 5 characters long";
Language.NotBlankPreshared = "White space (blank) cannot be included at either ends in Preshared key ";
Language.SpecCharPreshared = "Special character \" cannot be included in Preshared key";
Language.MustRSAKey = "You must enter Remote RSA Key";
Language.MustUserName = "You must enter User Name";
Language.MustPassword = "You must enter Password";
Language.MustSelectUser = "You must select Users";
Language.MustLocalPort = "You must enter valid value for Local Port";
Language.MustRemotePort = "You must enter valid value for Remote Port";
Language.SelectPolicyForVPNConn = "You must select one Policy";
Language.SameNetwork = "You cannot enter same host for Local and Remote Internal Network";
Language.ConfirmPresharedKey ="Confirm Preshared Key";
Language.NotSamePreshared = "Preshared key mismatch. The Preshared key typed in Preshared key and Confirm Preshared key fields must be same.";
Language.ChangePresharedkey="Change Preshared Key";
Language.ShowPresharedKey="Show Preshared/PSK Key";
Language.ChangePresharedKeyWarningMsg="This will update preshared key of all the connections configured between same local and remote peers. Are you sure you want to continue?";
Language.IPSecNameHelp="Enter a unique name to identify the IPSec Connection.";
Language.PolicyHelp="Select the Policy you wish to apply to the connection traffic.";
Language.ConnTypeHelp="<b>Remote Access connection</b> is established to connect individual hosts to access<br>private network over the Internet without static IP Address.<br/>For example, travelers and teleworkers using laptops to access their company&#39;s<br>network securely over the Internet.<br>To establish remote connection, every host must have VPN client software.<br>The VPN client encapsulates and encrypts the host&#39;s traffic before sending it over<br>the Internet.<br/><b>Site-to-Site connection</b> is established to connect two networks over the Internet.<br>For example, connecting a branch office network to a company&#39;s head office<br>network.<br><b>Host-to-Host connection</b> established secure tunnel between two hosts.";
Language.ModeHelp="<b>Tunnel mode</b> is recommended<br>- Use <b>Transport mode</b> where both endpoints understand IPSEC directly.<br>- <b>Tunnel mode</b> is primarily used for interoperability with gateways <br>or end systems  that do not support L2TP/IPSec or PPTP VPN site-to-site connections.";
Language.VPNRestartHelp1="Select the action you wish to take on the connection<br>when VPN services or Appliance restarts.<br>Choose&nbsp;<b>Disable to</b> keep the connection disabled till<br>the user activates.<br>Choose&nbsp;<b>Respond only to</b> keep the connection ready<br>to respond to any incoming request.<br>Choose&nbsp;<b>Initiate to</b> establish the connection every time<br>VPN services or Appliance restarts.";
Language.AuthTypeHelp1="<b>Preshared/PSK key :</b> Authenticate IPSec end-points by using the secret know to <br>both the end-points.<br>&nbsp;<b>Digital certificate :</b> Authenticate IPSec end-points by exchanging certificates <br>(either self signed or issued by a certificate authority).<br>&nbsp;<b>RSA Key :</b> Authenticate IPSec end-points using RSA keys. Local RSA key can<br> be regenerated from CLI Console. Refer to Console guide for more details.";
Language.LocalServerHelp="Select the WAN port, which acts as the end-point for your tunnel.";
Language.LocalSubnetHelp="Select the local network(s) you wish to give<br>access to remote users via this connection.";
Language.LocalIDHelp="For preshared key and RSA key, select any type of ID and enter its value.DER ASN1 DN (X.509) is not applicable.<br>For Local Certificate, ID and its value configured in Local Certificate is displayed automatically.";
Language.LocalIDHelp4CISCOVPNClient="For Preshared Key, select any type of ID and enter its value.DER ASN1 DN (X.509) is not applicable.<br>For Local Certificate, ID and its value configured in Local Certificate is displayed automatically.";
Language.RemoteHostHelp="Enter IP Address or host name of Remote end-point.<br>To specify any IP Address, enter *.";
Language.AllowNATHelp="Enable NAT traversal if a NAT device exists between your VPN endpoints <br>i.e. when remote peer has private/non-routable IP Address.";
Language.RemoteSubnetHelp="Select the remote network(s) that you wish to access via this connection.";
Language.RemoteIDHelp="For preshared key and RSA key, select any type of id and enter its value.DER ASN1 DN (X.509) is not applicable.<br>In case of Local Certificate, ID and its value configured in Local Certificate is displayed automatically.";
Language.RemoteIDHelp4CISCOVPNClient="For Preshared Key, select any type of id and enter its value.DER ASN1 DN (X.509) is not applicable.<br>In case of Local Certificate, ID and its value configured in Local Certificate is displayed automatically.";
Language.UserAuthHelp="Authentication of VPN Clients required via XAUTH<br>Choose <b>Disable</b> if authentication is not required.<br>Choose <b>Enable as Client</b> - Enter username and password<br>for authentication by the remote gateway.<br>Choose <b>Enable as Server</b> - Select all the users that<br>are to be allowed to connect.";
Language.ProtocolHelp="Select all the protocols that are to be allowed for negotiations.<br>Tunnel will pass only that data which uses the specified protocol.";
Language.LocalPortHelp="Enter the Local Port number that the local VPN peer uses to transport<br>traffic related to TCP or UDP protocol. The range is from 1 to 65535.<br>To specify any local port, enter *.";
Language.RemotePortHelp="Enter the Remote Port number that the remote VPN peer uses to transport<br>traffic related to TCP or UDP protocol. The range is from 1 to 65535.<br>To specify any remote port, enter *.";
Language.IPSecDescHelp="Enter IPSec VPN Connection Description.";
Language.SelConnType="Select Connection Type";
Language.SelBaseLocation="Select Base Location";
Language.HeadOffice="Head Office";
Language.BranchOffice="Branch Office";
Language.AuthTypeLabel="Authentication of VPN Clients required via XAUTH";
Language.SummaryLabel="IPSec connection Summary";
Language.SummaryDesc="Configuration of IPSec Connection:";
Language.AuthDesc="Authentication of user which depends on the connection type";
Language.WizardLabel="VPN Connection Wizard";
Language.NotNullConnNameMsg="You must enter value for Connection Name";
Language.MaxCharLimitInDesc="Maximum 255 characters are allowed for Description";
Language.Help1Label2="Step 1";
Language.Help1Label3="Select connection,mode,action and vpn policy.";
Language.Help1Label4="Step 2";
Language.Help1Label5="Select authentication of user according to connection mode.";
Language.Help1Label6="Step 3";
Language.Help1Label7="Select local server details.";
Language.Help1Label8="Step 4";
Language.Help1Label9="Select remote server details.";
Language.Help1Label10="Step 5";
Language.Help1Label11="View Connection summary.";
Language.Help2Label1="Remote Access connection";
Language.Help2Label2="is established to connect individual hosts to access private network over the Internet without static IP Address.";
Language.Help2Label3="For example, travelers and teleworkers using laptops to access their company's network securely over the Internet.";
Language.Help2Label4="To establish remote connection, every host must have VPN client software. The VPN client encapsulates and encrypts the host's traffic before sending it over the Internet.";
Language.Help2Label5="Site-to-Site";
Language.Help2Label6="connection is established to connect two networks over the Internet. For example, connecting a branch office network to a company's head office network.";
Language.Help2Label7="Host-to-Host";
Language.Help2Label8="connection established secure tunnel between two hosts.";
Language.Help3Label1="Authenticate IPSec end-points by using the secret know to both the end-points.";
Language.Help3Label2="Authenticate IPSec end-points by exchanging certificates (either self signed or issued by a certificate authority).";
Language.Help3Label3="Authenticate IPSec end-points using RSA keys. Local RSA key can be regenerated from CLI Console. Refer to Console guide for more details.";
Language.Help4Label1="Local server will allow you to select the WAN port, which acts as the end-point for your tunnel.";
Language.Help4Label2="Local subnet will allow you to select the local network(s) you wish to give access to remote users via this  connection.";
Language.Help4Label3="For preshared key and RSA key, select any type of ID and enter its value.DER ASN1 DN (X.509) is not applicable.";
Language.Help4Label4="For Local Certificate, ID and its value configured in Local Certificate is displayed automatically.";
Language.Help5Label1="Enter IP Address or host name of Remote end-point.To specify any IP Address, enter *.";
Language.Help5Label2="Enable NAT traversal if a NAT device exists between your VPN endpoints i.e. when remoe peer has private/non-routable IP Address.";
Language.Help5Label4="Remote ID term s same as Local ID.";
Language.Help6Label1="Choose <b>Disable</b> if authentication is not required.";
Language.Help6Label2="Choose <b>Enable as Client</b> - Enter username and password for authentication by the remote gateway.";
Language.Help6Label3="Choose <b>Enable as Server</b> - Select all the users that are to be allowed to connect.";
Language.ConnectMsg="Are you sure you want to connect?";
Language.DisconnectMsg="Are you sure you want to disconnect the Connection?";
Language.ActivateMsg1= "Are you sure you want to activate the Connection?";
Language.DeactivateMsg1="Are you sure you want to deactivate the Connection?";
Language.Export = "Export";
Language.ConfirmExport = "This might take few minutes.<br>Are you sure you want to export the Connection ?";
Language.ExportWarningMessage="The Encryption algorithms configured are not supported by Appliance VPN Client.<br/>Please use DES, 3DES or AES";
Language.ActionOnInitiate = "Action on Initiate";
Language.XAuth = "X-Auth";
Language.AddConnecionGroup="Add Failover Group";
Language.DeleteGroupConfirm="Are you sure want to delete the selected Failover Group?";
Language.GroupActivateMsg="Are you sure you want to activate the Failover Group?";
Language.GroupDeactivateMsg="Are you sure you want to deactivate the Failover Group?";
Language.UpdateSuccessAlertMsg="Following connections configured between same local and remote peer are updated successfully&nbsp;:&nbsp;";
Language.IPSAddTitle = "Add IPS Policy";
Language.IPSUpdateTitle = "Edit IPS Policy";
Language.CategoryName="Category Name";
Language.IPSUpdateConfirmMessage="Are you sure you want to update the IPS policy?";
Language.IPSAddConfirmMessage="Are you sure you want to create IPS policy?";
Language.SearchResHeader = "Search Result";
Language.SigUpdConfMsg="Are you sure you want to update the Signature?";
Language.RecommendedAction="Default Action";
Language.Actions="Actions";
Language.SetCommonAction="Set common action";
Language.SelectAll="Select All";
Language.L2TPConfig = "Configure";
Language.AssignIP = "Assign IP from";
Language.ClientInfo = "Client Information";
Language.PrimaryDNSServer = "Primary DNS Server";
Language.SelectDNS = "Select DNS Server";
Language.Other = "Other";
Language.SecondaryDNSServer = "Secondary DNS Server";
Language.Members = "Members";
Language.UserGroup = "Select Users/Group";
Language.MemberGroup = "Member Users Group";
Language.ConfPPTPInsert = "Are you sure want to add L2TP Configuration?";
Language.L2TPConfUpd = "Are you sure want to update L2TP Configuration?";
Language.L2TPdisableConfirmUpdate = "The configuration change will be applicable only when L2TP is enabled. Are you sure you want to save the configuration?";
Language.StartIP = "Start IP";
Language.EndIP = "End IP";
Language.IPRange = "IP Address range is not valid.";
Language.SelectReq = "You must select DNS Server.";
Language.NotValidDNS = "You must enter valid DNS Server.";
Language.UserNotSelected2 = "You must selected at least one user or usergroup";
Language.NotBothSameDNS = "You must enter different primary and secondary DNS server";
Language.NotBothSameWINS = "You must enter different primary and secondary WINS server";
Language.ShowL2TPMember = "Show L2TP Members";
Language.EnableL2TP="Enable L2TP";
Language.RemoteLANAddress2 = "Remote LAN Address for the Remote peer";
Language.RemoteLANNetwork = "Remote LAN Network";
Language.LocalLANAddressPeer = "Local LAN Address for the Remote peer";
Language.IPAddressChanged = "IP Address of local VPN server has been changed.";
Language.AddL2TPConf = "Are you sure you want to add the L2TP Connection?";
Language.UpdL2TPConf = "Are you sure you want to update the L2TP Connection?";
Language.SelectLocalID2 = "You must select Local ID.";
Language.SelectValidLocalID2 = "You must select valid Local ID.";
Language.MustEnterLocal2 = "You must enter Local ID value.";
Language.MustEnterRemote2 = "You must enter Remote ID value.";
Language.SelectRemoteID2 = "You must select Remote ID.";
Language.MustSelectValidRemoteID2 = "You must select valid Remote ID.";
Language.MustRemoteHost2 = "You must enter Remote Host IP Address.";
Language.AllowedNetIPAddr = "You must provide network IP Address.";
Language.SpecInterNetIP = "You must provide Remote Internal Network IP Address.";
Language.MustPresharedKey2 = "You must enter Preshared key.";
Language.MustSelectCerti2 = "You must select Certificate.";
Language.SelectValidRemoteValue2 = "You must enter valid data in Remote ID.";
Language.SelectValidLocalValue2 = "You must enter valid data in Local ID.";
Language.L2TPNameHelp="Please enter the unique name to identify the L2TP Connection.";
Language.L2TPDescHelp="Enter L2TP VPN Connection Description.";
Language.VPNRestartHelp2="Select the action you wish to take on the connection when VPN services or Appliance restarts.<br>Choose&nbsp;<b>Disable to</b> keep the connection disabled till the user activates.<br>Choose&nbsp;<b>Respond only to</b> keep the connection ready to respond to any incoming request.";
Language.AuthTypeHelp="<b>Preshared key :</b> Authenticate L2TP end-points by using the secret know to <br>both the end-points.<br>&nbsp;<b>Digital certificate :</b> Authenticate L2TP end-points by exchanging certificates <br>(either self signed or issued by a certificate authority).";
Language.ConnL2TPMsg="Are you sure you want to establish L2TP connection?";
Language.DisconnL2TPMsg="Are you sure you want to disconnect L2TP connection?";
Language.ActivateMsg2= "Are you sure you want to activate connection?";
Language.DeactivateMsg2="Are you sure you want to deactivate connection?";
Language.L2TPdisableMsg="Connection will be activated only when L2TP is enabled.";
Language.L2TPTitle="Add L2TP Member";
Language.L2TPAddSuccess="L2TP Members have been added successfully.";
Language.L2TPAddFailure="L2TP Members could not be added.";
Language.L2TPMembers="L2TP Members";
Language.L2TPConfMsg="Are you sure you want to delete L2TP member(s)?";
Language.AddLDAPServer = "Add LDAP Server";
Language.UpdateLDAPServer = "Edit LDAP Server";
Language.AnonymousLogin = "Anonymous Login";
Language.UserNameForAdmin = "Administrator";
Language.BaseDN = "Base DN";
Language.GetBaseDN = "Get Base DN";
Language.AuthenticationAttribute = "Authentication Attribute";
Language.TightIntegrationCC = "Tight Integration";
Language.GroupNameAttribute = "Group Name Attribute";
Language.ExpireDateAttribute = "Expire Date Attribute";
Language.LDAPServerAddConfirmMessage = "Are you sure you want to add LDAP server?";
Language.LDAPServerUpdateConfirmMessage = "Are you sure you want to update LDAP server?";
Language.LDAPTestConnConfMsg = "Are you sure you want to test the connectivity between the Appliance and LDAP server?";
Language.GetBaseDnConfirmMessage = "Are you sure you want to get Base DN?";
Language.BaseDNNullMessage = "Base DN should not be empty.";
Language.InvalidServerIPMessage = "Please enter valid server IP.";
Language.InvalidPortMessage = "Please enter valid Port.";
Language.BaseDNMsg="Base DN retrieved successfully.";
Language.BaseDNFail="Base DN retrieval failed.";
Language.AddressGroupAddTitle = "Add Address Group";
Language.AddressGroupUpdateTitle = "Edit Address Group";
Language.GroupTypeRBL = "RBL(IPv4)";
Language.GroupTypeEmail = "Email Address/Domain";
Language.InputEmail = "Email Address(s)/Domain(s)";
Language.InputIP = "IP Address(s)/Network(s)";
Language.InputRBL = "RBL(s)";
Language.Note2 = "(Use comma to add multiple)";
Language.EnterValidValueForName = "You must enter valid value for Name.";
Language.EnterValidValueForDomain = "You must enter valid value for Domain.";
Language.EnterValidValueForEmail = "You must enter valid value for Email Address/Domain.";
Language.DuplicateDomain = "Domain already exists.";
Language.DuplicateIPAddress = "IP Address  already exists.";
Language.DuplicateEmailExist = "Email Address/Domain already exists.";
Language.Manual = "Manual";
Language.SelectaFile = "You must select a file of Email Address/Domain.";
Language.InvalidFileExtension = "File extension must be either csv or txt.";
Language.maxLengthExceed = "Maximum 100 characters are allowed for '{groupType}'";
Language.AddrEmailCSVFile = "Import Email Address/Domain";
Language.AddressGroup = "Address Group";
Language.AddrListFile = "List File";
Language.UploadFileConfMsg = "Are you sure you want to upload the File?";
Language.AddressGroupRequired = "You must select Address Group";
Language.RuleId = "Rule ID";
Language.TotalConnection = "Total Connections";
Language.UploadTransfer = "Upload Transfer";
Language.DownloadTransfer = "Download Transfer";
Language.UploadBandwidth = "Upstream Bandwidth";
Language.DownloadBandwidth = "Downstream Bandwidth";
Language.ConnDetail = "Connection Details of ";
Language.WanIPDetail = "Destination IP Wise Live connections for ";
Language.DestDetail = "Destination Port wise Live connections for ";
Language.AndSmall = "and";
Language.ApplicationName = "Application Name";
Language.LiveConnFor = "Live Connections Summary for";
Language.WANIPBased = "Destination IP Wise";
Language.DestPortBased = "Destination Port Wise";
Language.TrafficDiscoveryFor = "Live Connections for ";
Language.LiveConnectionToolTip = "Destination IP Address/Destination Port wise Live connections for ";
Language.SentClientlessUSerMsg = "Message won't be sent to clientless users";
Language.MessageText = "Message Text";
Language.DisconnectLiveUser = "Disconnect Live User";
Language.ConfDisconnUser = "Are you sure you want to disconnect all the selected users?";
Language.AlertMessage = "You must enter the message.";
Language.UserID = "User ID";
Language.HostIP = "Host IP";
Language.MAC = "MAC";
Language.TotalTime = "Total Time";
Language.DisconnMultiConfUser = "Are you sure want to disconnect all the selected users?";
Language.DONE = "Done";
Language.ConcurrentSessions = "Concurrent Sessions:";
Language.DataTransferRate = "Data Transfer Rate<br>(bits/sec)";
Language.InternetUsageTime = "Internet Usage Time<br>(HH:MM)";
Language.ACLUpdConfMsg = "Are you sure you want to update Appliance Access?";
Language.AdminServices = "Admin Services";
Language.AuthenticationServices = "Authentication Services";
Language.NetworkServices = "Network Services";
Language.OtherServices = "Other Services";
Language.WindowsLinuxClient = "Windows/Linux Client";
Language.WebProxy = "Web Proxy";
Language.AddDomainConfirm = "Are you sure you want to add domain?";
Language.LocalDomainExists = "Local Domain could not be added. Local Domain already exists, choose a different domain.";
Language.DuplicateLocalDomain = "Trusted Domain could not be added. Trusted Domain already exists, choose a different Trusted Domain.";
Language.NotValidValue = "Please enter valid value for Domain Name.";
Language.Locale="Locale";
Language.Language="Language";
Language.LanguageSetting="Language Settings";
Language.DefaultConfigurationLanguage="Default Configuration Language";
Language.SSLVPNDefaultConfigurationLanguage="Default language for SSL VPN Web Portal";
Language.DefaultConfigLanConfirmMessage="Modifying the default language will load factory default configuration in '{sellanguage}' language.<BR>Are you sure you want to Modify the default language?";
Language.ConfigurationLanguage="Language Configuration";
Language.Date="Date";
Language.Date_Format="Date Format";
Language.Time_Format="Time Format";
Language.Preview="Preview";
Language.LocaleSettConfMsg="Are you sure you want to apply this Locale Settings?";
Language.ApplySuccessMessage="Locale Settings has been applied successfully.";
Language.ApplyFailMessage="Locale Settings could not be applied.";
Language.InNextVersionMessage = "This feature will be available in upcoming version.";
Language.MACHostAddTitle = "Add MAC Host";
Language.MACHostUpdateTitle = "Edit MAC Host";
Language.MACListType = "MAC List";
Language.MACList = "List of MAC Addresses";
Language.MACExample = "E.g. 00:16:76:49:33:CE,00:17:76:49:33:CE";
Language.MACHelp="E.g. 00:16:76:49:33:CE or 00-16-76-49-33-CE";
Language.MAClistMsg="You must enter value for MAC List.";
Language.CheckMAClist="You must enter valid value for MAC List.";
Language.InvalidMACAddress = " Invalid MAC Address or format.<br/> Valid format - 00:16:76:49:33:CE or 00-16-76-49-33-CE for ";
Language.InvalidMACList = " Invalid MAC List or format.<br/> Valid format - 00:16:76:49:33:CE or 00-16-76-49-33-CE for ";
Language.MailScanningRuleAddConfirmMessage = "Are you sure you want to add Mail Scanning Rule?";
Language.MailScanningRuleUpdateConfirmMessage = "Are you sure you want to update the Mail Scanning Rule?";
Language.InvalidRuleNameMessage = "Not a valid Rule Name";
Language.SelectSenderListMessage = "Please select sender list";
Language.SelRecepientListMsg = "Please select recepient list";
Language.SelectBlockFileTypeMessage = "Please select block file type";
Language.Scanning="Scanning";
Language.Quarantine="Quarantine";
Language.NotifySender="Notify Sender";
Language.BlockFileTypes="Block File Types";
Language.ActionWhen="Action When";
Language.Infected="Infected";
Language.Suspicious="Suspicious";
Language.ProtectedAttachment="Protected Attachment";
Language.RecieverAction1="Reciever Action";
Language.NotifyAdministrator="Notify Administrator";
Language.BlockedFile = "Blocked File Type";
Language.RecieverAction = "Receiver Action";
Language.NotifyAdmin = "Notify Admin";
Language.MailServerSetting="Mail Server Settings";
Language.MailserverIP="Mail Server IPv4 Address / FQDN";
Language.AuthenticationRequired="Authentication Required";
Language.ToEmailAddress="Send Notifications to Email Address";
Language.EMailSetting = "Email Settings";
Language.NotifyApplyConfMsg="Are you sure you want to apply Notification Setting?";
Language.IdentityBased = "The Identity Based";
Language.UTMAppliance = "UTM Appliance";
Language.SecureYourEnterprise = "Secure your enterprise";
Language.With = "with ";
Language.Integrated = "integrated";
Language.InternetSecurity = "Internet security";
Language.AddNotSelected="You must select atleast one user";
Language.Fullname="Full Name";
Language.ProvideBaseDN2="Step 1: Provide Base DN for groups";
Language.AuthenticationIs="Currently, Authentication is integrated  with Active Directory.";
Language.HereProvide="Here, Provide Base DN for groups.";
Language.Error="Error:";
Language.ViewResults="Step 6:View Results";
Language.EnterValidBaseDN="You must enter valid Base DN";
Language.SuccessfullyCompleted="Import Group Wizard Successfully Completed";
Language.AllTheGroups="All the Groups are imported successfully and attached the selected policies.";
Language.WizardFailed="Import Group Wizard failed";
Language.GroupsWillAppended="Imported Groups will be appended to existing list of groups.";
Language.SomeGroupsImported="But some of the groups are not imported";
Language.ReviewSelection="Step 5:Review Selection";
Language.PleaseReview="Please review the following summary of your Import Group Wizard Settings. To change anything, click on previous button and change the settings. Click on Finish to apply the setting and complete the configuration.";
Language.BaseDNLbl="Base DN:";
Language.GroupsToBe="Groups To Be imported";
Language.CommonPolicies="Common Policies for Groups: ";
Language.SpecificPolicies="Specific policies for Groups: ";
Language.GroupsDisplayed="Groups displayed in summary will be migrated to Appliance. <br> Are you sure you want to continue?";
Language.SelectADGroupsCC="Step 2: Select AD Groups to Import";
Language.PleaseSelectADGroups="Please select the groups from AD server which you want to import into Appliance.";
Language.ADGroups="AD Groups";
Language.SelectedGroups="Selected Groups";
Language.PleaseDoNotSelect="Please do not select the following because Group or User with same name<br>already exist in Appliance.<br><br>";
Language.PleaseSelect="Please select groups to migrate";
Language.subscriptionSuccess = "Module has been subscribed successfully.";
Language.Trail = "Trial";
Language.Subscribe = "Subscribe";
Language.AppRegDetail = "Appliance Registration Details";
Language.ModSubDetail = "Module Subscription Details";
Language.Module = "Module";
Language.ExpDate = "Expiration Date";
Language.SyncSuccess = "Synchronization with server successfully.";
Language.SyncFail = "Synchronization with server failed";
Language.SyncCommunicationError = "Synchronization failed, Server not reachable";
Language.Synchronize="Synchronize";
Language.SyncWithServer="Synchronize Licenses with Customer My Account ";
Language.ModSubDetailOnline="Manage Module Subscription Online";
Language.ToRegisterAppliance="To register appliance, update or renew modules go to";
Language.ToSubscribeTrial="To subscribe for Trial version of modules go to";
Language.SubscriptionHeader="Module Subscription";
Language.TrialSubscriptionHeader="Module Trial Subscription";
Language.ModuleHeader="Module Registration Form";
Language.Emailid = "Registered Email Address";
Language.SubscriptionKey = "Subscription Key";
Language.RegModuleConfMsg="Are you sure you want to register Module?";
Language.SubAppNotActive = "Your Appliance could not be activated. Activate the Appliance before proceeding further.";
Language.SubMaxLimitReached = "You cannot avail trial subscriptions again. Contact your reseller or sales representative to get the subscription key.";
Language.NoRouteToHost3 = "Appliance could not connect to the Central Registration Server. Please check your Internet connection settings.";
Language.SubFailInvalidKey = "Invalid Subscription key; check whether you are providing the correct key.";
Language.SubFailKeyUsed = "Subscription key already registered; check whether you are providing the correct key.";
Language.SubFailInvalidKeyForModule = "Subscription Key is not valid for this Subscription Module or Appliance model.";
Language.SubKeyValidityExpired = "Subscription Key's validity has expired";
Language.SubRenewBeforeSubscription = "Renewal key cannot be used before subscription";
Language.SubInvalidUserCountKey = "Invalid user license. Check whether you are providing the correct subscription key";
Language.SubInvalidForDemoAppliance = "This Appliance is an NFR appliance assigned for product demos. You can avail only Trial subscriptions on this Appliance.";
Language.TrialSubSuccess = "Module has been subscribed for Trial successfully.";
Language.ForgotEmailAddressLink = "Forgot Email Address";
Language.ForgotPasswordLink = "Forgot Password";
Language.MulticastRouteAddTitle = "Add Multicast Route";
Language.MulticastRouteUpdateTitle = "Edit Multicast Route";
Language.SourceInterface = "Source Interface";
Language.MulticastAddress = "Multicast Address";
Language.DestinationInterface = "Destination Interface";
Language.MulticastRouteAddConfirmMessage = "Are you sure you want to add a Multicast Route?";
Language.MulticastRouteUpdateConfirmMessage = "Are you sure you want to update the Multicast Route?";
Language.SelectOneInterface = "You must select at least one Destination Interface.";
Language.SelectSrcInterface = "Select a Source Interface.";
Language.MulticastIPOutOfRange = "Multicast IP Address must be in the range of 224.0.0.0  to  239.255.255.255.";
Language.InvalidMulticastAddress = "Multicast Address is not valid.";
Language.SrcDestiNotSame = "Source and Destination Interface must not be same.";
Language.InvalidClass = "Source IP Address must be in class A,B or C.";
Language.MulticastForwardingSetting="Multicast Forwarding Setting";
Language.ManageMulticastRoute="Manage Multicast Route";
Language.MCastIP = "Multicast IP";
Language.EnableConfirmMessage = "Are you sure you want to enable Multicast Forwarding?";
Language.DisableConfirmMessage = "Are you sure you want to disable Multicast Forwarding?";
Language.EnableMulticastForwarding = "Enable Multicast Forwarding";
Language.MulCLUserHeader="Add Multiple Clientless Users";
Language.MulClientlessserConfMsg="Are you sure you want to register multiple Clientless Users?";
Language.AuthNetworkIP="IP Address must belong to configured authentication networks.";
Language.IPAddressInUse="This IP Address is already in use";
Language.IPNotSameClass2 = "Range From and Range To fields should be of the same class.";
Language.IPMappedto="IP Mapped To";
Language.MapSourceIPwith="Map Source IP with";
Language.MASQUERADE="MASQUERADE";
Language.IPHost="IP Host";
Language.NATPolicyName = "NAT Policy Name";
Language.IPNotSelected = "Please select IP or IP Range.";
Language.NATPolicyEditTitle = "Edit NAT Policy";
Language.NATPolicyAddTitle = "Add NAT Policy";
Language.ConfigureMail = "Configure Mail Settings";
Language.ConfigureEmail = "Configure Email and Mail Server settings for System Notifications";
Language.MsgSendNotification = "Send notification address is required";
Language.MsgAlphanumericValue = "You must enter Alphanumeric,'_', '.', '@' and '-' value for Send Notification Email Address.";
Language.MsgValidIP = "Enter valid mail server IP / FQDN";
Language.MsgValidPort = "Enter valid mail server port";
Language.MsgFromEmail = "From Email Address is required";
Language.MSGAlphanumericValueFromEmail = "You must enter Alphanumeric,'_', '.', '@' and '-' value for From Email Address.";
Language.MsgUsername = "Enter valid Username";
Language.MsgPassword = "Enter Password";
Language.PleaseRefer = "Please refer the Network Diagrams to choose the deployment mode from the following options";
Language.ChangingDeployment = "If you are changing deployment mode of already deployed Appliance, on successful change Appliance will reboot automatically.";
Language.DueToThis = "Due to this, Appliance will take time to restart.";
Language.EtherType1 = "Ether<br>Type";
Language.PacketType = "Packet<br>Type";
Language.Ports = "Ports<br>[src,dst]";
Language.Stop = "Stop";
Language.PackCap = "Packet Capture";
Language.CapPacket = "Captured Packet";
Language.Capture = "Capture Filter";
Language.HexDetail = "Hex & ASCII Detail";
Language.Info = "Packet Information";
Language.UserIDbr = "User<br>ID";
Language.OnCC = "On";
Language.Trace = "Trace";
Language.BufferSize = "Buffer Size";
Language.BufferUsed = "Buffer used";
Language.BufferPacket = "Trace Off, Buffer Size 2048 KB, Buffer used 0 KB";
Language.BandwidthPolicyId = "Bandwidth Policy ID";
Language.CCSSLVPNPolicyID = "SSL VPN Policy ID";
Language.MasterConnectionID = "Master Connection ID";
Language.ConnectionStatus = "Connection Status";
Language.ConnectionFlags = "Connection Flags";
Language.ServedBy = "Served By";
Language.ConfigStatusAlert = "To reflect the configuration changes, you need to stop and start the Packet Capture again";
Language.EnableParentProxy = "Parent Proxy";
Language.DomainIPAddress = "Domain Name/IP Address ";
Language.ProxyConfMsg = "Are you sure you want to update the Parent Proxy Settings?";
Language.ValidUserName = "You must enter valid Username.";
Language.CheckValidDomainIPMsg = "You must enter valid Domain/IPv4 Address.";
Language.UserNameRequired = "You must enter a username";
Language.PasswordRequired = "You must enter a password";
Language.PersonalInfo="Personal Information";
Language.PersonalDetailConfMsg="Are you sure you want to change the Personal details?";
Language.policyLabel = "For POP/S - IMAP/S protocol there is single policy.";
Language.policyDesc = "Whenever a virus gets detected in a mail, the virus affected attachment will be stripped from the message and the message body will be replaced with a notification message.";
Language.CyberoamSSLVPN = "SSL VPN Portal";
Language.LoginPageView = "Login Page View";
Language.MainPageView = "Main Page View";
Language.SSLVPNPortalMsg = "Welcome to the SSL VPN Portal!";
Language.Login = "Login";
Language.Welcome = "Welcome";
Language.SSLVPNClient = "SSL VPN Client (Tunnel access mode)";
Language.DownloadSSLVPN = "Download Bundled SSL VPN Client";
Language.DownloadSSLVPNMsg = "(Installer)";
Language.DownloadSSLVPNConfig = "Download SSL VPN Client Configuration - Windows";
Language.DownloadSSLVPNConfigMsg = "(Configuration Only)";
Language.WebAccessMode = "Web access mode";
Language.ApplicationAccessMode = "Application access mode";
Language.EnterURL = "Enter URL";
Language.Go = "Go";
Language.SSLVPNUserPortal = "SSL VPN User Portal";
Language.ConfiguredBookmarks = "Configured Bookmarks";
Language.SrNo = "Sr. No.";
Language.Intranet = "Intranet";
Language.PPTPConfig = "PPTP Configuration";
Language.ConfL2TPInsert = "Are you sure want to configure PPTP connection?";
Language.PPTPConfUpd = "Are you sure want to update PPTP connection configuration?";
Language.PPTPdisableConfirmUpdate = "The configuration change will be applicable only when PPTP is enabled. Are you sure you want to save the configuration?";
Language.UserNotSelected3 = "You must select atleast one user or usergroup.";
Language.ShowPPTPMember = "Show PPTP Members";
Language.EnablePPTP="Enable PPTP";
Language.AddPPTPMember="Add PPTP Member";
Language.PPTPAddSuccess="PPTP Members have been added successfully.";
Language.PPTPAddFailure="PPTP Members could not be added.";
Language.PPTPMembers="PPTP Members";
Language.PPTPConfMsg="Are you sure you want to delete PPTP member(s)?";
Language.QoSPolicyDetailAddTitle = "Add QoS Policy Detail";
Language.QoSPolicyDetailEditTitle = "Edit QoS Policy Detail";
Language.Bandwidth_DetailLbl="Schedule wise QoS Policy Details";
Language.Policy_Type="Policy Type";
Language.Implementation_On = "Implementation On";
Language.Total_Bandwidth_in_KB="Total Bandwidth (in KB)";
Language.Strict="Strict";
Language.Committed="Committed";
Language.Total_Upload_Download="Total (Upload + Download)";
Language.Individual_Upload_Download="Individual (Upload/Download)";
Language.Between_2_4096_KB="(between 2-2560000 KB)";
Language.Guaranteed_Burstable_in_KB="Guaranteed - Burstable (in KB)";
Language.Guaranteed_Burstable_Upload_in_KB="Guaranteed - Burstable Upload (in KB)";
Language.Guaranteed_Burstable_Download_in_KB="Guaranteed  - Burstable Download (in KB)";
Language.Upload_Bandwidth="Upload Bandwidth";
Language.Download_Bandwidth="Download Bandwidth";
Language.Schedule_Not_Selected1="You must select Schedule.";
Language.Must_be_between_2_and_4096="(Must be a number between 2 and 2560000)";
Language.QoSAddConfirmMessage = "Are you sure you want to create the QoS Policy?";
Language.QoSEditConfirmMessage = "Are you sure you want to update the QoS Policy Details?";
Language.BurstableInvalid = "Guaranteed Bandwidth should not be greater than Burstable Bandwidth.";
Language.QoSPolicyAdd = "Add QoS Policy";
Language.QoSPolicyEdit = "Edit QoS Policy";
Language.Policy_Name="Policy Name";
Language.Policy_Based_On="Policy Based On";
Language.Web_Category="Web Category";
Language.Priority="Priority";
Language.Individual="Individual";
Language.Shared="Shared";
Language.Bandwidth_Detail = "Bandwidth (Min/Max)";
Language.Upload_Bandwidth_Detail = "Upload Bandwidth (Min/Max)";
Language.Download_Bandwidth_Detail = "Download Bandwidth (Min/Max)";
Language.BandwidthDetail="Add Schedule wise QoS Policy Details to override default QoS Policy Details.";
Language.EditConfirmMessage="Are you sure you want to update the QoS Policy?";
Language.InvalidBandwidthMessage="You must enter value between 2 and 2560000 KB for ";
Language.AtleastOneIPAddressMessage="You must select at least one IP Address to the QoS Policy.";
Language.AtleastOneUserMessage="You must select at least one User to the QoS Policy.";
Language.PriorityNotSelected="You must select Priority";
Language.ScheduleNotAllowed="Scheduling disabled for Web Category based QoS Policy";
Language.RestrictionType = 'Restriction Type';
Language.TotalBandwidthQoS ='Total Bandwidth<br>(in KB)(Min/Max)';
Language.UploadBandwidthQoS = 'Upload Bandwidth<br>(in KB)(Min/Max)';
Language.DownloadBandwidthQoS = 'Download Bandwidth<br>(in KB)(Min/Max)';
Language.MailIdNotDefine="Quarantine mail(s) could not be fetched as Email Address of user is not configured.";
Language.ReleaseSuccMsg2="Email has been released successfully.";
Language.InvalidEmailAddMsg2="Email could not be released, choose a valid Email Address.";
Language.UnknownHostMsg="Email could not be released, Host is unkown.";
Language.AddRadiusServer = "Add RADIUS Server";
Language.UpdateRadiusServer = "Edit RADIUS Server";
Language.AuthenticationPort = "Authentication Port";
Language.SharedSecret = "Shared Secret";
Language.RADIUSAddConfirmMessage = "Are you sure you want to add RADIUS server?";
Language.RADIUSUpdateConfirmMessage = "Are you sure you want to update RADIUS server?";
Language.RadiusTestConnConfMsg = "Are you sure you want to test the connectivity between the Appliance and RADIUS server?";
Language.RestoreMsg2 = "Restoring this backup will override all your current configuration and system will restart.";
Language.RestoreDefault = "Restore Default";
Language.BootFWMsg = "We recommend you to take backup of the current Configuration before booting this Appliance to the factory default configuration.";
Language.RebootFDConf = "Are you sure you want to reboot with factory default configuration?";
Language.BootDefault = "Boot with factory default";
Language.ConfirmBootDefault = "Are you sure you want to boot to factory default?";
Language.Channel = "Channel";
Language.BSSID = "BSSID";
Language.SSID = "SSID";
Language.SignalStrengthPer = "Signal Strength(%)";
Language.SecurityMode = "Security Mode";
Language.WirelessMode = "Wireless Mode";
Language.HH="HH";
Language.MM="MM";
Language.SS="SS";
Language.CurrentTime="Current Time";
Language.ScannedResults="Scan Results";
Language.ScanNowBtn="Scan Now";
Language.SysTriggerMsg="Schedule system-triggered scan at";
Language.SysScanEmailMsg="Send scanned results via Email";
Language.SysRogueAPScanMsg="Rogue AP scan was last carried out at";
Language.DiscoveredAP="Unrecognized Access Points";
Language.RogueAP="Rogue Access Points";
Language.AuthorizedAP="Authorized Access Points";
Language.APScanStatusMsg="Scanning for nearby Wireless Access Points.";
Language.Schedule_Not_Selected2="You must select Schedule";
Language.MarkAsRogueSuccessMsg="Selected Access Point is marked as \"Rogue\" and moved to Rogue Access Point list.";
Language.MarkAsAuthorizedSuccessMsg="Selected Access Point is marked as \"Authorized\" and moved to Authorized Access Point list.";
Language.MarkAsUnrecognizedSuccessMsg="Selected Access Point is marked as \"Unrecognized\" and moved to Unrecognized Access Point list.";
Language.MarkAsRogueFailedMsg="Selected Access Point could not be marked as \"Rogue\" and hence not moved to the Rogue Access Point list.";
Language.MarkAsAuthorizedFailedMsg="Selected Access Point could not be marked as \"Authorized\" and hence not moved to the Authorized Access Point list.";
Language.MarkAsUnrecognizedFailedMsg="Selected Access Point could not be marked as \"Unrecognized\" and hence not moved to the Unrecognized Access Point list.";
Language.RogueDownLinkMsg="This AP was marked as Rogue by administrator but it is currently not in the network";
Language.AuthorizedDownLinkMsg="This AP was marked as Authorized by administrator but it is currently not in the network";
Language.MarkDiscoveredAP="Mark as Unrecognized Access Points";
Language.MarkRogueAP="Mark as Rogue Access Points";
Language.MarkAuthorizedAP="Mark as Authorized Access Points";
Language.DeleteAPmsg="Remove AP from this list";
Language.ScanConfMsg="Scanning will result into connectivity loss for all the connected clients for few seconds. Are you sure, you want to scan?";
Language.IPFromDHCP = "Obtain an IP from DHCP";
Language.IPFromPPPoE = "Obtain an IP from PPPoE";
Language.StaticIP = "Use Static IP";
Language.PPPoEDetails = "PPPoE Details";
Language.HostAlreadyExist = "Host already exist for current zone. Change of zone is not allowed";
Language.GatewayExists = "Gateway exists in firewall rule for current zone. Change of zone is not allowed";
Language.FirewallRulesExist = "Firewall rules already exist for the current zone. Change of zone is not allowed";
Language.EnterValidIPMsg = "Enter valid IP Address for ";
Language.EnterValidSubnetMsg = "Enter valid Subnet mask for ";
Language.SameIPAddress = "You can not enter same IP Address '{ipaddress}' for different ports";
Language.SameSubnetIPAddress = "You can not enter same Subnet IP Addresses '{ipaddress}' and '{nextip}'";
Language.DHCPConfigured = "DHCP is configured on '{interfacePort}'\nDHCP can only be configured on External Zone(s)";
Language.PPPoEConfigured = "PPPoE is configured on '{interfacePort}'\nPPPoE can only be configured on External Zone(s)";
Language.PPPoEUserName = "Enter PPPoE User Name for ";
Language.PPPoEPassword = "Enter PPPoE password for ";
Language.InvalidGWName = "Invalid Gateway name for ";
Language.ValidGatewayIPAddress = "Enter valid Gateway IP Address for ";
Language.SameIPAndGateway = "Interface IP and Gateway is same for ";
Language.InvalidGWIPforPort = "Invalid gateway IP for PORT ";
Language.MultipleGateway = "Multiple gateway with same name exist\nPlease change gateway name";
Language.SamePrimarySecondaryDNS = "Primary and Secondary DNS should not be same";
Language.OneInterfaceEnabled = "You should have one interface enabled.";
Language.ScheduleAddTitle = "Add Schedule";
Language.ScheduleEditTitle = "Edit Schedule";
Language.Recurring = "Recurring";
Language.OneTime = "One Time ";
Language.StartDate  = "Start Date ";
Language.EndDate  = "End Date ";
Language.Days  = "Days";
Language.Validity = "Validity";
Language.ScheduleName = "Schedule Name.";
Language.CheckDate = "Start Date should always be less than or equal to End Date.";
Language.CheckHour = "Start Hour should be less than or equal to End Hour.";
Language.CheckMinute = "Start Minutes should be less than End Minutes.";
Language.SameStartStopTimeMsg= "Start Time and Stop Time cannot be same.";
Language.ValidateStartStopTimeMsg="Start Time cannot be greater than Stop Time.";
Language.EnterOneScheduleDetailMsg="Please add at least one schedule.";
Language.SearchURL = "Search URL";
Language.NotURL="Please enter a valid search url";
Language.RelConnList = "Related Connections";
Language.NoRelatedConnFound="No Related Connections found.";
Language.EmailAdd="To Email Address";
Language.SendMailBtn="Send";
Language.SuccMsg="Email has been sent successfully.";
Language.FailMsg="Email could not be sent.";
Language.dhcpserver="DHCP Server ";
Language.snmpd="SNMP";
Language.Running="Running";
Language.Stopped="Stopped";
Language.Restart="Restart";
Language.ValidationMsg="Are you sure you want to ";
Language.The=" the ";
Language.kasdConnectivity = "Anti Spam Center Connectivity";
Language.Disconnected = "Disconnected";
Language.ServiceAddTitle = "Add Service";
Language.ServiceUpdateTitle = "Edit Service";
Language.ServiceTypeTCPIP = "TCP/UDP";
Language.hostUpdateSuccessfully = "Service '{serviceName}' has been updated successfully.";
Language.chkSourcePort = "You must enter valid Source Port.";
Language.chkDestinationPort = "You must enter valid Destination Port.";
Language.Details="Details";
Language.VirtualHost="Virtual Host";
Language.ProtocolNumber="Protocol Number";
Language.ICMPType="ICMP Type";
Language.ICMPCode="ICMP Code";
Language.ServiceGroupAddTitle = "Add Service Group";
Language.ServiceGroupUpdateTitle = "Edit Service Group";
Language.SelectService = "Select Service";
Language.SGAddSuccess = "Service Group '{serviceGroupName}' has been added successfully.";
Language.SGUpdateSuccess = "Service Group '{serviceGroupName}' has been updated successfully.";
Language.No_Services_Selected = "You must select at least one Service.";
Language.SelectedService="Selected Service";
Language.ServiceList="Service List";
Language.HostType = "Host Type";
Language.RebootConf = "Are you sure you want to reboot?";
Language.ShutdownConfirm = "Are you sure you want to shutdown?";
Language.WarningLabel = "Warning:  This action will disconnect all the users.";
Language.ReasonLabel = "Please enter message below to be logged.";
Language.ReasonBlankMsg = "Reason cannot be blank.";
Language.AuthSettHeader = "Authorizer Settings";
Language.FourEyeMsg = "We recommend creation of at least two authorizers. You have configured a single authorizer. He will not be able to change any 4-Eye authentication settings or de-anonymize the records when he logs in as Administrator.";
Language.Continue = "Would you like to continue?";
Language.SMSAddPageTitle = "Add SMS Gateway";
Language.SMSUpdatePageTitle = "Edit SMS Gateway";
Language.ReqParam = "Request Parameters";
Language.RespParam = "Response Parameters";
Language.RespFormat = "Response Format";
Language.TestConnectivity = "Test Connectivity";
Language.ParamValue = "Value";
Language.RespFormatRequired = "You must enter value for Response Format.";
Language.InvalidReqParamName = "You must enter a valid value for Request Parameter Name.";
Language.InvalidReqParamVal = "You must enter a valid value for Request Parameter Value.";
Language.InvalidResParamName = "You must enter a valid value for Response Parameter Name.";
Language.InvalidResParamVal = "You must enter a valid value for Response Parameter Value.";
Language.UrlHelp = "Enter the URL provided by your service provider.<br/>E.g.<br/><b>http://www.beat2day.co.in/sms.aspx</b>?user={username}&pass={password}<br/>&mbno=9792234567&mseg=Test Message";
Language.ReqParamHelp = "Enter Request Parameters provided by your Service Provider to configure the SMS Gateway.<br/>E.g.<br/>http://www.beat2day.co.in/sms.aspx?<b>user={username}&pass={password}&mbno=9792234567<br/>&mseg=Test Message</b><br/><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\" width=\"150px;\"><tr><th>Name</th><th>Value</th></tr><tr><td>user</td><td>joey</td></tr><tr><td>pass</td><td>joey123</td></tr><tr><td>mbno</td><td>{mobileno}</td></tr><tr><td>msg</td><td>{msg}</td></tr></table><br/>Note: Value of Mobile Number must be {mobileno} and Message must be {msg}.";
Language.ResFormatHelp = "Enter the Response Format provided by your Service Provider.<br/>E.g.<br/>If the Response Received is \"<b>status=302&message=Limit Exceeded</b>\",<br/> then the Response Format should be \"<b>status={0}&message={1}</b>\".";
Language.ResParamHelp = "Enter Response Parameters provided by your Service Provider.<br/>E.g.<br/>If Response Format is \"<b>status={0}&message={1}</b>\", then the Response Parameters are:<br/><table border=\"1\" cellpadding=\"3\" cellspacing=\"1\"><th>Parameter Index</th><th>Name</th><tr><td>0</td><td>Status</td></tr><tr><td>1</td><td>Message</td></tr></table>";
Language.IntResParamValReq = "Response Parameter value must be an integer.";
Language.MandatoryReqParamReq = "You must enter request parameters for mobile no and message.";
Language.UseCountrycode = "Use Country Code with Cell Number";
Language.CellFormat = "Cell Number Format";
Language.NotConnected = "SMS Gateway could not be connected.";
Language.ResponseString = "Response String";
Language.AgentConfiguration="Agent Configuration";
Language.Location="Location";
Language.AgentPort="Agent Port ";
Language.ManagerPort="Manager Port ";
Language.SNMPdisableConfirmUpdate = "The configuration change will be applicable only when SNMP is enabled. Are you sure you want to save the configuration?";
Language.EnableSNMP="Enable SNMP Agent";
Language.communityAddTitle="Add Community";
Language.CommunityEditTitle="Edit Community";
Language.IPAddressSrc="IP Address (Source) ";
Language.ProtocolVersion="Protocol Version ";
Language.TrapSupport="Trap Support ";
Language.V1="v1";
Language.V2C="v2c";
Language.CommunityAddConfirmMessage="Are you sure you want to create the community?";
Language.CommunityUpdateConfirmMessage="Are you sure you want to udpate the community details?";
Language.ChkProtocolVersionMsg="At least one protocol out of v1 and v2c must be selected.";
Language.Trap="Trap";
Language.V3UserEditTitle = "Edit V3 User";
Language.V3UserAddTitle = "Add V3 User";
Language.V3UserAddConfirmMessage="Are you sure you want to create the V3 User?";
Language.V3UserUpdateConfirmMessage="Are you sure you want to update the V3 User details?";
Language.CheckPasswdLenMessage="Password must be at least 8 characters long";
Language.V3User="V3 User";
Language.SpamQuarantineDigestSetting="Quarantine Digest Setting";
Language.DisableMsg="You are not allowed to change digest settings. Please contact administrator for further details.";
Language.ManageSpamDigest="Manage Quarantine Digest";
Language.SDConfMsg="Are you sure you want to update the Quarantine Digest for User?";
Language.EmailSuccessUpdate="Email Address is successfully updated";
Language.SpamRuleAddPageTitle = "Add Spam Rule";
Language.SpamRuleUpdatePageTitle = "Edit Spam Rule";
Language.SpamRuleName = "Spam Rule name";
Language.RecipientEmail = "Recipient Email";
Language.SenderEmail = "Sender Email";
Language.IFCaps = "IF";
Language.Then = "Then";
Language.CyberoamIdentifiesSpam = "Anti Spam Module Has Identified Mail As";
Language.OutboundIdentifiesSpam = "Outbound Anti Spam Module Has Identified Mail As";
Language.InboundIdentifiesSpam = "Inbound Anti Spam Module Has Identified Mail As";
Language.ByOutboundSpam = "by Outbound Anti Spam Module";
Language.ByInboundSpam = "by Inbound Anti Spam Module";
Language.IPAddressBelongsTo = "Destination IP Address/Network Belongs To";
Language.IPAddressBelongsFROM = "Source IP Address/Network Belongs To";
Language.SenderIPBlackListedByRBL = "Sender IP Address Blacklisted By RBL";
Language.SMTPAction = "SMTP/S Action";
Language.POPIMAPAction = "POP3/IMAP Action";
Language.SelectRBlMessage = "Please select RBL.";
Language.SelectSMTPActionMessage = "Please select SMTP Action.";
Language.SelectPOPActionMessage = "Please select POP3/IMAP Action.";
Language.MessageSizeIs = "Message Size Is";
Language.MessageHeaderName = "Message Header Name";
Language.MessageHeaderValue = "Message Header Value";
Language.MessageSize = "Message Size";
Language.MessageHeaderSelectMessage = "Please select Message Header from list.";
Language.ChkMessageSize="You must enter valid value for Message Size";
Language.RecipientEmailNotSelected = "Please select a Recipient Email Address";
Language.SenderEmailNotSelected = "Please select a Sender Email Address";
Language.InvalidEmailSMTP = "Please enter a valid Email Address for SMTP Action change recepient";
Language.SpamRules = "Spam Rules";
Language.Rules = "Rules";
Language.POP3IMAP = "POP3/IMAP";
Language.SpoofPrevention="Spoof Prevention";
Language.EnableSpoofPrevention="Enable Spoof Prevention";
Language.RestrictUnknownIPonTrustedMAC="Restrict Unknown IP on Trusted MAC";
Language.IPSpoofing="IP Spoofing";
Language.MACFilter="MAC Filter";
Language.IPMACPairFilter="IP-MAC Pair Filter";
Language.SpoofConfUpd="Please use this feature with caution!<br/>You may lock out network access to Appliance if incorrect MAC addresses are added to the Trusted MAC list<br/>Do you want to save this settings?";
Language.ZoneNotSelected ="You must select at least one zone";
Language.noTrustedEntryMessage = "You need to add at least one MAC entry in the Trusted MAC list to enable MAC Filtering.";
Language.ZoneNotSelectedForIPMac ="You must select at least one zone for IP-MAC Pair Filter";
Language.FullAccessSettings = "Tunnel Access Settings";
Language.ServerCerti = "SSL Server Certificate";
Language.PerUserCerti = "Per User Certificate";
Language.ClientCerti = "SSL Client Certificate";
Language.IPLeaseRange = "IPv4 Lease Range";
Language.PrimaryWINS = "Primary WINS";
Language.SecondaryWINS = "Secondary WINS";
Language.CheckPeer = "Check Peer after every";
Language.Disconnect_after = "Disconnect after";
Language.DPD = "Dead peer detection";
Language.MessageTCP = "(Should be from Private IP ranges.&nbsp;First IP in the range will be used by the server.)";
Language.MessageUDP = "(Should be from Private IP ranges.&nbsp;First 2 IPs in the range will be used by the server.)";
Language.SelUDP = "(Select UDP for better performance)";
Language.SelectClient = "Select Client Certificate";
Language.SelectServer = "Select Server certificate";
Language.SSLVPNTunnelConfMsg = "Are you sure want to update SSL VPN Tunnel Access settings?";
Language.NoServerCert = "No SSL Server Certificate is selected";
Language.NoClientCert = "No SSL Client Certificate is selected";
Language.StartLeaseIPReq = "Start Lease IP Address";
Language.EndLeaseIPreq = "End Lease IP Address";
Language.NotPrivateNetwork = "IP Lease Range is not a valid Private network";
Language.SameClass = "IP Lease Range should be of the same class";
Language.Required2IPs = "At least 2 IPs should be configured in IP Lease Range.";
Language.Required3IPs = "At least 3 IPs should be configured in IP Lease Range.";
Language.ValidSubnet = "Insert valid subnet mask";
Language.NotPrimaryDNS = "You must enter a valid IP Address for Primary DNS";
Language.NotPrimaryWINS = "You must enter a valid IP Address for Primary WINS";
Language.PrimaryDNSReq = "You must enter a value for Primary DNS value.";
Language.PrimaryWINSReq = "You must enter a value for Primary WINS value.";
Language.NotSecondaryDNS = "You must enter a valid IP Address for Secondary DNS";
Language.NotSecondaryWINS = "You must enter a valid IP Address for Secondary WINS";
Language.DPDDelayReq1 = "DPD Delay";
Language.DPDDelayRange1 = "DPD Delay must be a value between 60 and 3600.";
Language.DPDTimeoutReq1 = "DPD Timeout";
Language.DPDTimeoutRange1 = "DPD Timeout must be a value between 300 and 18000.";
Language.DPDRecommendRatio = "DPD Disconnect time must be at least twice the polling frequency. The recommended ratio is 1:5.";
Language.IdleTimeoutRange = "Tunnel Access Idle Timeout must be a value between 15 and 60.";
Language.DataTransferThresholdRange2 = "Tunnel Access data transfer threshold must be a value between 1 and 65536.";
Language.NotValidNetMask4LeaseRange = "You must enter valid subnet mask for ip lease range";
Language.ServerCertificateExpired = " Server Certificate has expired or is not yet valid";
Language.ClientCertificateExpired = " Client Certificate has expired or is not yet valid";
Language.PerUserHelpText="(Default CA must be configured from System -> Certificate -> Certificate Authority)";
Language.TunnelTypeCC = "Tunnel Type";
Language.ConnectedSince = "Connected Since";
Language.DeleteConfirm = "Are you sure want to disconnect all the users?";
Language.DisconnSingleConfUser = "Are you sure want to disconnect the user?";
Language.PolicyAdd = "Add SSL VPN Policy";
Language.PolicyUpdate = "Edit SSL VPN Policy";
Language.AccessMode = "Access Mode";
Language.FullAccess = "Tunnel Access";
Language.WebAccess = "Web Access";
Language.AppAccess = "Application Access Mode";
Language.AppAccessSetting = "Application Access Settings";
Language.TunnelType = "Tunnel Type";
Language.SplitTunnel = "Split Tunnel";
Language.FullTunnel = "Full Tunnel";
Language.AvailableHostNet = "Available Hosts/Networks";
Language.SelectHostNet = "Selected Hosts/Networks";
Language.AccessResource = "Accessible Resources";
Language.AccessResourceForIPv4 = "Accessible Resources (IPv4)";
Language.AccessResourceForIPv6="Accessible Resources (IPv6)";
Language.AdvanceSettingDPD = "Advanced Settings (DPD and Idle Timeout)";
Language.AdvanceSettingIdle ="Advanced Settings (Idle Timeout)";
Language.DPDSetting = "DPD Settings";
Language.UseGlobalSetting = "Use Global Settings";
Language.OverGlobalSetting = "Override Global Settings";
Language.EnableDPD = "Enable DPD";
Language.Peer = "Check peer after every";
Language.AvailableBookMarks = "Available Bookmarks/Bookmarks Groups";
Language.SelectBookMarks = "Selected Bookmarks/Bookmarks Groups";
Language.WebAccessSetting = "Web Access Settings";
Language.EnableCustomURL = "Enable Arbitrary URL Access";
Language.NameRequired = "SSL VPN Policy Name";
Language.NotValidSSLVPNName = "Not a valid SSL VPN Policy Name";
Language.AccessModeReq = "You must select at least one access mode";
Language.DPDDelayReq2 = "DPD Delay value required";
Language.DPDDelayNumeric = "Only numeric value allowed in DPD Delay";
Language.DPDDelayRange2 = "DPD Delay value must be between 60 and 3600";
Language.DPDTimeoutReq2 = "DPD Timeout value required";
Language.DPDTimeoutNumeric = "Only numeric value allowed in DPD Timeout";
Language.DPDTimeoutRange2 = "DPD Timeout value should be between 300 and 18000";
Language.DPDRecommend = "DPD Disconnect time should be at least twice the polling frequency. The recommended ratio is 1:5";
Language.FullAccessVal = "Tunnel Access Idle Timeout value is required.";
Language.FullAccessNumeric = "You must enter numeric value in Tunnel Access Idle Timeout";
Language.FullAccessRange = "Tunnel Access Idle Timeout value must be between 15 and 60.";
Language.WebAccessVal = "You must enter values for Web Access Idle Timeout.";
Language.WebAccessNumeric = "You must enter numeric value in Web Access Idle Timeout";
Language.WebAccessRange= "Web Access Idle Timeout value must be between 10 and 60";
Language.AddSSLVPNConf = "Are you sure you want to create the SSL VPN Policy?";
Language.UpdSSLVPNConf = "Are you sure you want to update the SSL VPN Policy?";
Language.DPDTimeout = "DPD Timeout";
Language.AddPolicyMembers = "Add Policy Member(s)";
Language.ManagePolicyMembers = "Manage Policy Member(s)";
Language.GroupNameWithNoSpace = "GroupName";
Language.SSLVPNPolicyName = "Current SSL VPN Policy";
Language.AddSSLVPNPolicyMembers = "Add SSL VPN Policy Members";
Language.SSLVPNMembersAddConfMsg="Are you sure you want to add member in Current SSL VPN Policy?";
Language.DeleteSSLVPNPolicyMembers = "Delete SSL VPN Policy Members";
Language.SSLVPNPolicyConfMsg="Are you sure you want to delete member from Current SSL VPN Policy?";
Language.IdleTime = "Idle Time";
Language.UpdateWeb = "Are you sure want to update SSL VPN Web Access?";
Language.IdleTimeOutRange = "Idle timeout value should be between 10 and 60.";
Language.AddSQPHdr = "Add Surfing Quota Policy";
Language.UpdateHeader = "Edit Surfing Quota Policy";
Language.CycleHours = "Cycle Hours";
Language.HoursPer = "Hour(s) &";
Language.SQPName = "Surfing Quota Policy Name.";
Language.SharedTime = "Share allotted time with group members.";
Language.MaximumHours = "Maximum Hours";
Language.MaximumValidityValue = "Maximum validity cannot be greater than 10 years";
Language.InvalidMaximumHoursMessage = "Maximum Hours cannot be greater than multiplication of Validity and Cycle Hours.";
Language.MaximumHoursLimitMessage = "Maximum Hours cannot be greater than 87840.";
Language.MaximumHoursLowerLimitMessage = "Maximum Hours cannot be less than Cycle Hours.";
Language.NoncyclicMaxHoursLimitMessage = "Maximum Hours cannot be greater than available hours.";
Language.InvalidCycleHoursMessage="Cycle Hours cannot be more than Available Hours.";
Language.InvalidMaxHoursMessage = "Maximum Hours must be at least 1 hour.";
Language.InvalidExpireDaysMessage = "Validity must be at aleast 1 day.";
Language.NonZeroCycleHoursMessage = "You must enter a number greater than zero for Cycle Hours.";
Language.NonZeroExpireDaysMessage = "You must enter a number greater than zero for Validity.";
Language.NonZeroAllotedHoursMessage = "You must enter a number greater than zero for Maximum Hours.";
Language.MinutesPer = "Minute(s) per";
Language.TimeAllow = "Time allowed (HH)";
Language.CycleTime = "Cycle Time";
Language.Facility="Facility";
Language.SeverityLevel="Severity Level";
Language.Format="Format";
Language.SyslogServerAddConfirmMessage="Are you sure you want to add the Syslog Server?";
Language.SyslogServerUpdateConfirmMessage="Are you sure you want to update the Syslog Server?";
Language.ChkPortRange="Port value must be between 1 and 65535";
Language.SyslogContainChar="Syslog name must contain alphanumeric characters and underscore only. However, it should not begin with numbers or underscore.";
Language.BridgePairContainChar="Bridge Pair name must contain alphanumeric characters and underscore only. However, it should not begin with numbers or underscore.";
Language.ListSeverity="List Severity";
Language.LogType="Log Type(System)";
Language.Syslog="Syslog";
Language.LogsConfMsg = "Are you sure you want to update the Logs configuration?";
Language.FirewallRules = "Firewall Rules";
Language.InvalidTraffic = "Invalid Traffic";
Language.LocalACLs = "Local ACLs";
Language.DoSAttack = "DoS Attack";
Language.DroppedICMPRedirectedPacket = "Dropped ICMP Redirected Packet";
Language.DroppedSourceRoutedPacket = "Dropped Source Routed Packet";
Language.DroppedFragmentedTraffic = "Dropped Fragmented Traffic";
Language.MACFiltering = "MAC Filtering";
Language.IPMACPairFiltering = "IP-MAC Pair Filtering";
Language.IPSpoofPrevention = "IP Spoof Prevention";
Language.Anomaly = "Anomaly";
Language.Signature = "Signatures";
Language.IMAP4 = "IMAP4";
Language.ContentFiltering = "Content Filtering";
Language.Events = "Events";
Language.AdminEvents = "Admin Events";
Language.AuthenticationEvents = "Authentication Events";
Language.SystemEvents = "System Events";
Language.SSLVPN="SSL VPN";
Language.SystemHealthOverview="System Health Overview";
Language.UtilitiesWise="Utilities Wise";
Language.LiveGraph="Live Graph";
Language.CPUInfo="CPU Info";
Language.MemoryInfo="Memory Info";
Language.InterfaceInfo="Interface Info";
Language.PeriodWise="Period Wise";
Language.Today="Last 24 hours";
Language.Yesterday="Last 48 hours";
Language.LWeekly="Last week";
Language.LMonthly="Last month";
Language.LYearly="Last year";
Language.UtilitiesList="Utilities";
Language.UtilitiesSelectedList="Selected Utilities";
Language.MustOne="You must select at least one utility.";
Language.Disk="Disk";
Language.WANZone="WAN Zone";
Language.Max="Max";
Language.Min="Min";
Language.Average="Average";
Language.DaysLbl = "Day(s)";
Language.Months = "Month(s)";
Language.Idle = "Idle";
Language.LiveCPUUsage = "CPU usage for last two hours";
Language.CPUUsageofToday = "CPU usage for last 24 hours";
Language.CPUUsageofYesterday = "CPU usage for last 48 hours"; 
Language.CPUUsageofLastWeek = "CPU usage for last week";
Language.CPUUsageofLastMonth = "CPU usage for last month"; 
Language.CPUUsageofLastYear = "CPU usage for last year"; 
Language.CPUUsage = "CPU usage(%)"; 
Language.LiveMemoryUsage = "Memory usage for last two hours";
Language.MemoryUsageofToday = "Memory usage for last 24 hours";
Language.MemoryUsageofYesterday = "Memory usage for last 48 hours"; 
Language.MemoryUsageofLastWeek = "Memory usage for last week"; 
Language.MemoryUsageofLastMonth = "Memory usage for last month"; 
Language.MemoryUsageofLastYear = "Memory usage for last year";
Language.MemoryUsage = "Memory usage";
Language.Free = "Free";
Language.LiveLoadAverage = "Load average for last two hours"; 
Language.LoadAverageofToday = "Load average for last 24 hours"; 
Language.LoadAverageofYesterday = "Load average for last 48 hours"; 
Language.LoadAverageofLastWeek = "Load average for last week";
Language.LoadAverageofLastMonth = "Load average for last month";
Language.LoadAverageofLastYear = "Load average for last year";
Language.LoadAverage = "Load average";
Language.OneMinute = "One Minute";
Language.FiveMinutes = "Five Minutes";
Language.FifteenMinutes = "Fifteen Minutes";
Language.LiveDiskUsage = "Disk usage for last two hours";
Language.DiskUsageofToday = "Disk usage for last 24 hours";
Language.DiskUsageofYesterday = "Disk usage for last 48 hours";
Language.DiskUsageofLastWeek = "Disk usage for last week";
Language.DiskUsageofLastMonth = "Disk usage for last month";
Language.DiskUsageofLastYear = "Disk usage for last year";
Language.Root = "Root";
Language.Config = "Config";
Language.Temp = "Temp";
Language.DiskUsage = "Disk usage(%)";
Language.LiveLiveUsers = "Live users for last two hours"; 
Language.LiveUsersofToday = "Live users for last 24 hours";
Language.LiveUsersofYesterday = "Live users for last 48 hours";
Language.LiveUsersofLastWeek = "Live users for last week";
Language.LiveUsersofLastMonth = "Live users for last month";
Language.LiveUsersofLastYear = "Live users for last year";
Language.LiveuserVertLabel = "Live users";
Language.LiveWANUpDownDataTransfer = "WAN Zone: Total Upload/Download data transfer for last two hours";
Language.LiveGWDataTransfer = "WAN Zone: Gateway wise total data transfer for last two hours";
Language.LiveTotalDataTransfer = "WAN Zone: Total data transfer for last two hours";
Language.WANUpDownDataTransferofToday = "WAN Zone: Total Upload/Download data transfer for last 24 hours";
Language.GWDataTransferofToday = "WAN Zone: Gateway wise total data transfer for last 24 hours";
Language.TotalDataTransferofToday = "WAN Zone: Total data transfer for last 24 hours";
Language.WANUpDownDataTransferofYesterday = "WAN Zone: Total Upload/Download data transfer for last 48 hours";
Language.GWDataTransferofYesterday = "WAN Zone: Gateway wise total data transfer for last 48 hours";
Language.TotalDataTransferofYesterday = "WAN Zone: Total data transfer for last 48 hours";
Language.WANUpDownDataTransferofLastWeek = "WAN Zone: Total Upload/Download data transfer for last week";
Language.GWDataTransferofLastWeek = "WAN Zone: Gateway wise total data transfer for last week";
Language.WANUpDownDataTransferofLastMonth = "WAN Zone: Total Upload/Download data transfer for last month";
Language.GWDataTransferofLastMonth = "WAN Zone: Gateway wise total data transfer for last month";
Language.TotalDataTransferofLastMonth = "WAN Zone: Total data transfer for last month";
Language.WANUpDownDataTransferofLastYear = "WAN Zone: Total Upload/Download data transfer for last year";
Language.GWDataTransferofLastYear = "WAN Zone: Gateway wise total data transfer for last year";
Language.TotalDataTransferofLastYear = "WAN Zone: Total data transfer for last year";
Language.WANDataTransfer = "WAN (KBits/s)";
Language.GWDataTransfer ="Gateway(s) (KBits/s)";
Language.TotalDataTransfer = "Total KBits/s";
Language.DownloadDataTransfer = "Download KBits/s";
Language.UploadDataTransfer = "Upload KBits/s";
Language.LiveInterfaceUsage = "Interface: {interfacename} usage for last two hours";
Language.InterfaceUsageofToday = "Interface: {interfacename} usage for last 24 hours";
Language.InterfaceUsageofYesterday = "Interface: {interfacename} usage for last 48 hours";
Language.InterfaceUsageofLastWeek = "Interface: {interfacename} usage for last week";
Language.InterfaceUsageofLastMonth = "Interface: {interfacename} usage for last month";
Language.InterfaceUsageofLastYear = "Interface: {interfacename} usage for last year";
Language.ReceivedKBits = "Received KBits/Sec";
Language.TransmittedKBits = "Transmitted KBits/Sec";
Language.ReceivedErrors = "Received Errors";
Language.TransmittedDrops = "Transmitted Drops";
Language.Collisions = "Collisions";
Language.TransmittedErrors = "Transmitted Errors";
Language.ReceivedDrops = "Received Drops";
Language.TimeZone="Time Zone "; 
Language.NTPServerMsg="Sync with NTP Server ";
Language.SetDate="Set Date";
Language.PredefinedUser="Use pre-defined";
Language.CustomUser="Use Custom";
Language.NTPServerHelp="(Enter NTP Server IP Address/Domain)";
Language.SyncStatus="Sync Status ";
Language.TimeConfMsg="Are you sure you want to update the time settings?";
Language.NTPServerIP="NTP server IP";
Language.TimeZone_Not_Selected="You must select Time Zone";
Language.NTPServer_Not_Added = "You must enter NTP Server IP Address/Domain";
Language.ConfirmSync = "Are you sure want to synchronize time as per NTP Server?";
Language.ConfirmRebootSync = "This action will restart Appliance. Are you sure want to synchronize time as per NTP Server?";
Language.ConfirmReboot = "This action will restart Appliance. Are you sure you want to continue?";
Language.SyncNow = "Sync Now";
Language.ToChangeTimeZone = "(To change time zone, you need to disable HA if configured)";
Language.NTPServer_NotValid="You must enter valid NTP Server IP Address/IPv6 Address/Domain.";
Language.DuplicateEntry="You must enter unique NTP Server IP Address/Domain.";
Language.MaximumTenNTPServer="You are not allowed to enter more than 10 NTP Server IP Address/Domain.";
Language.Maximum128Characters="You can not enter more than 128 characters as NTP Server IP Address/Domain.";
Language.Theme="Theme";
Language.ThemeConfMsg="Are you sure you want to apply this Theme?";
Language.MsgNotAllowedIPAddress = "You are not allowed to enter more than 10 NTP Server IP Address/Domain Name.";
Language.MsgNotAllowedCharacterLimit = "You can not enter more than 128 characters as NTP Server IP Address/Domain Name.";
Language.EnterValidNTP = "Please enter valid NTP Server IP/Domain Name";
Language.DateTimeConf = "Date & Time Configuration";
Language.DateTime = "Date &amp; Time ";
Language.SetTime = "Set Time";
Language.AutomaticallySynchronize = "Automatically Synchronize with NTP Server";
Language.UseInternalList = "Use an internal list of predefined NTP Servers";
Language.SynchronizeNTPServer = "Synchronize with NTP Server";
Language.keyingMethod = "Keying Method";
Language.allowRekeying = "Allow Re-keying";
Language.keyingEntries = "Key Negotiation Tries";
Language.authMode = "Authentication Mode";
Language.passDataInCompressFormat = "Pass Data In Compressed Format";
Language.perfectForwardSecrecy = "Perfect Forward Secrecy";
Language.phase1 = "Phase1";
Language.p1EncryAlgo = "Encryption Algorithm";
Language.p1AuthAlgo = "Authentication Algorithm";
Language.p1DHGroups = "DH Group";
Language.keylife = "Key Life";
Language.rekeyMargin = "Rekey Margin";
Language.randomizeRekeyMarginBy = "Randomize Re-Keying Margin By";
Language.dpd = "DPD";
Language.checkPeerAfterEvery = "Check Peer After Every"; 
Language.waitForResponse = "Wait For Response Upto";
Language.dpdAction = "Action When Peer Is Not Active";
Language.phase2 = "Phase2";
Language.localSPI = "Local SPI";
Language.remoteSPI = "Remote SPI";
Language.inEncryKey = "Inbound Encryption Key"; 
Language.outEncryKey = "Outbound Encryption Key";
Language.inauthkey = "Inbound Authentication Key";
Language.outauthkey = "Outbound Authentication Key";
Language.BandWidth42="Guaranteed - Burstable Download (in KB)";
Language.BWUsage="Bandwidth Usage";
Language.bandwidth="BW";
Language.SCName = "Schedule Name";
Language.type = "Schedule Type";
Language.NATpolicyName = "Nat Policy Name";
Language.hostname = "HostName";
Language.disconnectafter="Disconnect After";
Language.anyurlaccess="Custom URL Access";
Language.fullaccessmode="Full Access Mode";
Language.webaccessmode="Web Access Mode";
Language.timeallow="Time Allowed(HH:MM)";
Language.httpaction="HTTP Action";
Language.httpsaction="HTTPS Action";
Language.reporting="Reporting";
Language.certificatebasedcategorization="Certificate Based Categorization";
Language.UnableToResolveIPs="Unable to resolve IP Address for this FQDN.";
Language.Add_Trusted_MAC="Add Trusted MAC";
Language.Edit_Trusted_MAC="Edit Trusted MAC";
Language.IP_Association="IP Association";
Language.IP_Addresses="IP Addresses";
Language.EditSuccessMessage="Trusted MAC has been updated successfully.";
Language.EditFailMessage="Trusted MAC could not be updated.";
Language.MultipleIPMessage="(Use comma to add multiple addresses)";
Language.AddrMACFile = "Trusted MAC address File";
Language.AddMACCSVFile = "Import Trusted MAC address CSV File";
Language.CSVConfMsg = "Are you sure you want to upload the CSV File?";
Language.ValidateMessage = "You must select CSV file of Trusted MAC address.";
Language.MACAddress = "MAC Address";
Language.TrustedListNotEmpty = "Trusted MAC List cannot be empty, if MAC Filtering is enabled.";
Language.UnicastRouteUpdatePageTitle = "Edit Unicast Route";
Language.UnicastRouteAddPageTitle = "Add Unicast Route";
Language.Distance = "Distance";
Language.DistanceRange =  "(0 - 255)";
Language.DistanceOutOfRange = "Distance must be between 0 and 255.";
Language.GatewayOrInterfaceMessage = "You must provide either Gateway or Interface.";
Language.InvalidDestIPMessage = "Invalid Destination IP Address. Correct Destination IP Address is ";
Language.UnicastRoute = "Unicast Route";
Language.IPNetmask = "IP/Netmask";
Language.UnicastRouteInUse = "Unicast Route could not be deleted. Firewall Rule exists For Host.";
Language.Unlock = "Unlock"; 
Language.AutoUpdateTitle="Signature Auto Updates";
Language.AutoUpdate="Enable Signature Updates";
Language.AVDef="AV Definition";
Language.IPSSignature="IPS Signatures";
Language.ManualUpdates="Manual Signature Updates";
Language.LastUpdateStatus="Last Update Status";
Language.LastUpdateMode="Last Update Mode";
Language.AntiVirusDef="Anti Virus Definition";
Language.ConfirmSyncMsg="Are you sure you want to synchronize?";
Language.SettingsConfMsg="Are you sure you want to update the settings?";
Language.Automatic="Automatic";
Language.Success="Success";
Language.Fail="Fail";
Language.SuccessUpdateStatus="Definitions updated successfully on";
Language.FailedUpdateStatus="Update is not available on";
Language.Progress="Update in progress";
Language.UpdateFailure="Failed to update definitions on";
Language.FailedUpdateStatusWithNoTime="Update not Available";
Language.AddURLGroup="Add URL Group";
Language.EditURLGroup="Edit URL Group";
Language.URLGroupName="URL Group Name";
Language.URLGroupRegex="URL(s)";
Language.URLRegexNotNull="You must enter value for URL Group";
Language.CommaNotAllowedInURL="Url cannot contain comma, single quotes and double quotes characters.";
Language.ADDURLRegex="Add URL here";
Language.NotDomain="You must enter valid domain name.";
Language.URLCharLimit="You can not enter more than 250 characters in URL(s)";
Language.DuplicateURLMessage =  "Duplicate URL in the list.";
Language.UserUpdatePageTitle = "Edit User";
Language.AccessTime = "Access Time";
Language.SimultaneousLogins = "Simultaneous  Logins";
Language.UserGroupNode = "User Group node(s)";
Language.UserAddConfirmMessage = "Are you sure you want to register User?";
Language.UserUpdateConfirmMessage = "Are you sure you want to update User details?";
Language.MACAddressList="MAC address List";
Language.MACAddressCheckList="You must enter MAC List";
Language.MACAddressListHelp="Use a comma or a new line to separate multiple MAC Addresses. <br/>Example: 11:11:11:11:11:11, 22:22:22:22:22:22";
Language.ChkProfileMsg="You must select Profile.";
Language.ChkMACAddressMsg="Please enter valid MAC address";
Language.ChkIPAddressValMsg="You must enter IP Address";
Language.ChkIPAddrMsg3="You must enter valid IP Address";
Language.ChkIPAddrRangeMsg2="You must enter valid IP Range";
Language.ChkSimulLogin="Simultaneous Logins should be between 1 and 99.";	
Language.DuplicateIPInLoginRestriction="Duplicate IP Address in login restriction.";
Language.DuplicateMACAddress="Duplicate MAC address.";
Language.IPNotSameClass3 = "Range from and to field should be of the same class";
Language.IPRangeLimit = "Maximum 20 IP Addresses are allowed in an IP Range.";
Language.EndCharValidationMsg="Username cannot end with special characters '.' and '@' ";
Language.InvalidUserNameLbl="You must enter Alphanumeric, '_', '@', '.' and whitespace value for Username";
Language.LoginRestrforAppAccess="Login Restriction for Appliance Access";
Language.ScheduleforAppAccess="Schedule for Appliance Access";
Language.AdminAdvancedSettings="Administrator Advanced Settings";
Language.UploadCSVFile = "Upload a CSV File";
Language.point1 = "First row of the  csv file must be the header row, divided into following fields separated by comma (\",\") <br/>Username, Password, Name, Group Name, Email Address. ";
Language.subpointheader = "Format of header row:";
Language.subpoint1 = "Compulsory first field: Username. ";
Language.subpoint2 = "Optional fields in any order: Password, Name, Group Name, Email Address. ";
Language.point2 = "The remaining rows are values corresponding to the header fields. ";
Language.point3 = "Number of fields in each row must be same as those within the header row. ";
Language.point4 = "An error message is displayed, if data is missing for any field within the header. ";
Language.point5 = "If a Password field is not included in the header, then the field will be set same as that of the Username. ";
Language.point6 = "If a Name field is not included in the header, then the field will be set same as that of the Username. ";
Language.point7 = "If a Group Name field is not included in the header, then it can be configured by the Administrator during the migration. ";
Language.point8 = "Multiple Email Address will be seperated by semicolon (\";\"). ";
Language.point9 = "All the blank rows will be ignored. ";
Language.Logo = "Logo";
Language.WindowTitle = "Page Title";
Language.LoginPageMessage = "Login Page Message";
Language.HomePageMessage = "Home Page Message";
Language.ColorScheme = "Color Scheme";
Language.Background = "Background";
Language.FontColor = "Font Color";
Language.TableHeader = "Table Header";
Language.TableHeaderFontColor = "Table Header Font Color";
Language.TableCells = "Table Cells";
Language.TableCellsFontColor = "Table Cells Font Color";
Language.ProperPortalLogo = "You must provide proper portal logo file";
Language.InvalidFormat2 = "Invalid portal logo file format. File should be in .jpg, .bmp, .gif or .png format";
Language.PortalConfUpd = "Are you sure want to update the SSL VPN Portal Configuration?";
Language.CaptivePortalConfUpd = "Are you sure want to update the Captive Portal Configuration?";
Language.PortalResetConf = "Are you sure want to reset the Captive Portal Configuration?";
Language.External_IP = "External IP";
Language.Mapped_IP = "Mapped IP";
Language.Physical_Zone = "Physical Zone";
Language.Port_Forwarding = "Port Forwarding";
Language.Enable_Port_Forwarding = "Enable Port Forwarding";
Language.Port_Type = "Port Type";
Language.External_Port = "External Port";
Language.Mapped_Port = "Mapped Port";
Language.Virtual_Host_Name = "Virtual Host Name";
Language.External_IP_Not_Selected = "Please select External IP";
Language.Mapped_IP_Not_Selected = "Please select Mapped IP";
Language.HostCagegoryMessage = "You must select IP Range for Mapped IP. You have selected IP Range for External IP.";
Language.PortRangeMessage = "You must select same Port Range for External Port and Mapped Port.";
Language.ExternalPortRangeMessage = "You must enter valid Port Range for External Port.";
Language.MappedPortRangeMessage = "You must enter valid Port Range for Mapped Port.";
Language.VirtualHostAdd = "Add Virtual Host";
Language.VirtualHostEdit = "Edit Virtual Host";
Language.PublicAddress = "Public Address";
Language.MappedAddress = "Mapped Address";
Language.PublicPort = "Public Port";
Language.AddVLANHdr = "Add VLAN";
Language.EditHeader = "Edit VLAN";
Language.VLANID = "VLAN ID";
Language.VLANAddConfirmMessage = "Are you sure you want to add the VLAN Interface?";
Language.VLANAddSuccess = "VLAN Interface '{interfaceName}' has been added successfully.";
Language.UnboundVLANConfirm = "Unbinding the VLAN interface will delete all its dependent configurations, including:<br/>1. VLAN Interface-Zone binding<br/>2. DHCP Server or Relay<br/>3. VLAN Interface based Firewall Rules<br/>4. ARP - NDP Static and Proxy<br/>5. Virtual Hosts and respective Firewall Rules <br/>6. VLAN Interface based Hosts and respective Host Groups <br/>7. Routes - Unicast and Multicast <br/>8. VLAN Interface based PPPoE configurations<br/>9. Gateway configurations<br/>10. VPN configurations<br/><br/>Are you sure you want to unbind the VLAN Interface?";
Language.ObtainDNS = "Obtain DNS from server";
Language.ServiceName2 = "Service Name";
Language.VLANUpdConfMsg = "Updating VLAN details may affect its dependent configurations like:<br>1. Stops DHCP Server configuration for selected VLAN.<br>2. Remove DHCP Relay configuration for selected VLAN.<br>3. VPN, GRE tunnels may get interrupted for selected VLAN.<br><br>Are you sure, you want to update Interface details?";
Language.VLANGatewaySameClass = "VLAN IP Address and Gateway IP Address must be in same network.";
Language.VLANIDMSG="You must enter valid VLAN ID between 2 to 4094.";
Language.SameGatwayVLANIP="Interface IP & Gateway IP Address must not be same.";
Language.VPNTitle="VPN (IPSec/L2TP/PPTP) Authentication Methods";
Language.VPNTitleWithDialin="VPN (IPSec/Dial In/L2TP/PPTP) Authentication Methods";
Language.SSLVPNTitle="SSL VPN Authentication Methods";
Language.SameAsFR="Set Authentication Method Same as Firewall";
Language.SameAsVPN="Same as VPN";
Language.SameAsFireWall="Same as Firewall";
Language.SameAsSSLVPN="Set Authentication Method for SSL VPN";
Language.VPNAuthConfMsg = "Are you sure you want to update VPN Authentication Settings?";
Language.SSLVPNConfMsg = "Are you sure you want to update SSL-VPN Authentication Settings?";
Language.LocalServer = "Local Server";
Language.RemoteServer = "Remote Server/Host";
Language.BytesReceived = "Bytes Received";
Language.DisconnMultiConfConn = "Are you sure want to disconnect all the selected connections?";
Language.DisconnSingleConfConn = "Are you sure want to disconnect the connection?";
Language.AddVPNPolicy = "Add VPN Policy";
Language.EditVPNPolicy = "Edit VPN Policy";
Language.hex = "hex";
Language.NegotiationMessage = "Set 0 for unlimited number of negotiation tries";
Language.MainMode = "Main Mode";
Language.AggressiveMode = "Aggressive Mode";
Language.PerfectForwardSecrecy = "Perfect Forward Secrecy (PFS)";
Language.Phase1 = "Phase 1";
Language.Phase2 = "Phase 2";
Language.DHGroup = "DH Group (Key Group)";
Language.DPDPeerDetect = "Dead Peer Detection";
Language.ActionPeerNotActive = "Action When Peer Unreachable";
Language.PFSGroup = "PFS Group (DH Group)";
Language.KeyingMessage = "(Keying Method cannot change, Policy is associated with connection)";
Language.ConfirmCreate = "Are you sure you want to create VPN policy?";
Language.VPNpolicyConfUpd = "Are you sure you want to update VPN policy?";
Language.PolicyName = "VPN policy name";
Language.KeyNegotiationReq = "Key Negotiation tries";
Language.KeyNegotiationRange = "Key Negotiation Tries must be between 0 and 50";
Language.P1AlgoShouldNotSame = "Phase1 both algorithm should not be same";
Language.SelectDHGroup = "You must select atleast one DH Group";
Language.KeyLifeRange = "Key Life must be between 2 minutes and 24 hours";
Language.ReKeyLesser = "Rekey Margin must be at least 1 minute lesser than Key life";
Language.RandomizeReq = "Randomize Re-keying";
Language.KeyLifeGraterRekeyMargin = "Key Life must be greater than rekeymargin*(100 + randomize rekey margin )/100";
Language.CheckPeerReq = "Check Peer After";
Language.DPDTimeoutReq3 = "Wait for Responce";
Language.P2AlgoShouldNotSame = "Phase2 both algorithm should not be same";
Language.LocalSPIHex = "You must enter hexadecimal values for Local SPI";
Language.LocalSPIRange = "Local SPI must be greater than 100 hex";
Language.RemoteSPIHex = "You must enter hexadecimal values for Remote SPI";
Language.RemoteSPIRange = "Remote SPI must be greater than 100 hex";
Language.EncAlgoSelect = "You must select Encryption Algorithm";
Language.InboundEncKeyReq = "You must enter Inbound Encryption Key";
Language.InboundEncKeyHex = "You must enter hexadecimal value for Inbound Encryption Key";
Language.InboundEncKey16 = "You must enter Inbound Encryption Key of 16 characters";
Language.InboundEncKey48 = "You must enter Inbound Encryption Key of 48 characters";
Language.InboundEncKey32 = "You must enter Inbound Encryption Key of 32 characters";
Language.InboundEncKey64 = "You must enter Inbound Encryption Key of 64 characters";
Language.OutboundEncKeyReq = "You must enter Outbound Encryption Key";
Language.OutboundEncKeyHex = "You must enter hexadecimal value for Outbound Encryption Key";
Language.OutboundEncKey16 = "You must enter Outbound Encryption Key of 16 characters";
Language.OutboundEncKey48 = "You must enter Outbound Encryption Key of 48 characters";
Language.OutboundEncKey32 = "You must enter Outbound Encryption Key of 32 characters";
Language.OutboundEncKey64 = "You must enter Outbound Encryption Key of 64 characters";
Language.AuthAlgoReq = "You must select Authentication Algorithm";
Language.InboundAuthKeyReq = "You must enter Inbound Authentication Key";
Language.InboundAuthHex = "You must enter hexadecimal values for Inbound Authentication Key";
Language.OutboundAuthKeyReq = "You must enter Outbound Authentication Key";
Language.OutboundAuthKeyHex = "You must enter hexadecimal value for Outbound Authentication Key";
Language.InboundAuthGeneral = "You must enter valid Inbound Authentication Key";
Language.OutboundAuthKeyGeneral = "You must enter valid Outbound Authentication Key";
Language.ManageWithSpace = "&nbsp;&nbsp;Manage&nbsp;&nbsp;";
Language.Rekey = "Re-key";
Language.Compress = "Compress";
Language.PFS = "PFS";
Language.EAA = "Encryption-Authentication Algorithm";
Language.ActionPeer = "Action on Active Peer";
Language.DuplicatePolicy = "Duplicate this policy";
Language.MaximumSize = "Size 125x70 pixels"; 
Language.LoginPageHeader = "Login Page Header";
Language.PasswordCaption = "Password Caption";
Language.UserNameCaption = "Username Caption";
Language.LoginPageFooter = "Login Page Footer";
Language.ButtonCaption = "Login Button Caption";
Language.LogoutButtonCaption = "Logout Button Caption";
Language.BackgroundColor = "Background Color";
Language.BackgroundFontColor = "Header, Footer Font Color ";
Language.HeaderBackColor = "Page Title Background Color";
Language.HeaderFontColor  = "Page Title Font Color";
Language.CaptionFontColor = "Caption Font Color";
Language.LoginMessageFontColor = "Login Message Font Color";
Language.MyAccountCaption = "My Account Link Caption";
Language.RegisterLinkCaption = "Registration Link Caption";
Language.LogoutLoginSame = "Login and Logout Caption must be different.";
Language.ConfirmSetDefaultMsg = "Are you sure want to apply the Default Portal Configuration?";
Language.CustomImgMsg="Please select Custom Logo file.";
Language.HTMLInput="HTML Input";
Language.confirmSave="Are you sure you want to save Client Login Template?";
Language.confirmReset="Are you sure you want to reset Client Login Template?";
Language.AddWebCategory="Add Web Category ";
Language.WebCategoryUpdateTitle="Edit Web Category ";
Language.Classification="Classification";
Language.DomainKeyword="Domain/Keyword";
Language.Keyword="Keyword";
Language.WebFilterPolicyLabel = "Configure web filter policies for this category";
Language.WebFilterPolicy = "Web filter policy";
Language.DeniedMessage="Denied Message";
Language.NotNULL="Consecutive commas or data with comma at the beginning or ending is not allowed.";
Language.WCConfMsg="Are you sure you want to create the Web Category?";
Language.WCConfUpdMsg="Are you sure you want to udpate the Web Category?";
Language.MaxURLExceed = "You can add only '{number}' URLs";
Language.MaxKeywordExceed = "You can add only '{number}' Keywords";
Language.UrlKeywordRequired = "You must enter at least one Domain/Keyword.";
Language.SomeDomainURLFailed = "Some URL/Domain cannot be updated.";
Language.DuplicateURLInList = "Duplicate Domain/URL in the list.";
Language.DuplicateKeywordInList = "Duplicate keyword in the list.";
Language.MoreCharReqKeyword = "At least two characters required in keyword.";
Language.MoreCharReqURL = "At least two characters required in URL/Domain.";
Language.KeywordCommaNotAllowed = "Keyword cannot contain comma, single quotes and double quotes characters.";
Language.CommaHelp = "Use comma as a separator to specify multiple domains or keywords.";
Language.OverrideDefaultDeniedMessage="Override Default Denied Message";
Language.KeywordCheck="You must enter valid keyword";
Language.KeywordCharLimit="You can not enter more than 250 characters for Keyword.";
Language.DomainCharLimit="You can not enter more than 250 characters for Domain.";
Language.WFPTitleAdd="Add Web Filter Policy ";
Language.WFPTitleEdit="Edit Web Filter Policy ";
Language.EnableReporting="Enable Reporting";
Language.EnabelCerificateBaseCategorizasion= "Enable certificate based categorization for HTTPS";
Language.WFPConfMsg="Are you sure you want to create the Web Filter Policy?";
Language.ConfirmRuleMessage="Are you sure you want to add the Web Filter Policy Rule?";
Language.WFPConfUpdMsg="Are you sure you want to update the Web Filter Policy?";
Language.UpdatingStatusMessage = "Updating...";
Language.HTTPFileSize = "Download File Size Restriction";
Language.ValidMaxFileSize = "Download File Size Restriction must be between 0 and 1536(MB).";
Language.WebFilterPolicyRuleTitle="Add Web Filter Policy Rules";	
Language.FileSizeNote = " (Enter 0 for No Restriction)";
Language.CategoryType = "Category Type";
Language.WebFilterPolicyRuleEditTitle="Edit Web Filter Policy Rules";
Language.Exception="Exception";
Language.WebAction="Web Action";
Language.WFCName = "Web Filter Category Name";
Language.EnforceSafeSearch="Enforce Safe Search";
Language.EnablePharmingProtection="Enable Pharming Protection";
Language.EnforceSafeSearchHelp="Enabling this option would enforce safe search in search engines when Porn, AdultContent and Nudity categories are denied in Web Filter Policy";
Language.EnablePharmingProtectionHelp="On Enabling this option Appliance would protect  users against pharming by re-resolving the domain name of the website  using the DNS configured on the appliance";
Language.WFSettingsConfMsg="Are you sure you want to update the Web Filter Settings?";
Language.DeniedMsgImage="Denied Message Image";
Language.TopImage="Top Image";
Language.BottomImage="Bottom Image";
Language.MaximumPixel="Maximum 125x70 pixels ( .jpg, .jpeg)";
Language.MaximumPixelFooter="Maximum 70x60 pixels ( .jpg, .jpeg)";
Language.TopImageRequired = "You must select a Top Image";
Language.BottomImageRequired = "You must select a Bottom Image";
Language.InvalidTopFileFormat = "Invalid top image format. File should be in .jpg format";
Language.InvalidBottomFileFormat = "Invalid bottom image format. File should be in .jpg format";
Language.DeniedMsgRequired = "You must enter value for Default Denied Message.";
Language.DefaultDeniedMsg = "Default Denied Message";
Language.ImageFileExceeded = "Image size can not be more than 512 KB.";
Language.HTTPProxyPort="Web Proxy Port ";
Language.HTTPTrustedPort="Trusted Ports";
Language.WebProxyConfMsg="Are you sure you want to update the Web Proxy Settings?";
Language.CheckPortValMsg="You must enter Port";
Language.CheckValidPortMsg="You must enter a correct value for Port";
Language.CheckValidStartPortMsg="You must enter a correct value for Start Port";
Language.CheckValidEndPortMsg="You must enter a correct value for End Port";
Language.CheckStartPortValMsg="You must enter Start Port for Port Range";
Language.CheckEndPortValMsg="You must enter End Port for Port Range";
Language.CheckValidPortRangeMsg="Start Port value must be less than End Port";
Language.CheckValidCachePort = "You can not enter trusted port as proxy port";
Language.TrustedPortAlertMsg = "Port 80/443 is not part of trusted port list. This may create problem in web surfing of users. Are you sure you want to update Web Proxy Settings? ";
Language.DuplicateEntryExists="Duplicate Port exists.";
Language.PhoneNumber = "Phone Number";
Language.InitializationString = "Initialization String";
Language.DialType = "Dial";
Language.AutoDial = "Auto Dial";
Language.ManualDial = "Manual Dial";
Language.DialOnDemand = "Dial on Demand";
Language.IdleTimeoutRangeLbl = "(1-30 Minutes)";
Language.RedialTries = "Redial Tries";
Language.GatewaySettings = "Gateway Settings";
Language.ObtainGateway = "Obtain gateway from server";
Language.GatewayType = "Gateway Type";
Language.ActivateThisGateway = "Activate this Gateway";
Language.IfInCC = "If";
Language.GatewayFails = "Gateway fails";
Language.ActionOnActivation = "Action on Activation";
Language.HoldDownTime2 = "Hold down time";
Language.DNSSettings = "DNS Settings";
Language.DNS1 = "DNS 1";
Language.DNS2 = "DNS 2";
Language.InitStringRangeLimit = "Initialization String reached limit.";
Language.InitStringNotNull = "Initialization string cannot be blank.";
Language.SavedSettingConfWWAN = "Are you sure you want to save Wireless WAN settings?";
Language.Pin = "SIM Card PIN Code";
Language.SerialPort = "Serial Interface";
Language.ChangePin = "Change PIN";
Language.NoSignal = "No Signal";
Language.ConnectedAsExplicitGW = "Connected as Explicit Gateway";
Language.Connecting = "Connecting";
Language.Reconnecting = "Reconnecting";
Language.DeviceNotSupported = "Device not detected.";
Language.DeviceNotFound = "No modem plugged-in";
Language.SignalStrength = "Signal Strength";
Language.Excellent = "Excellent";
Language.VeryGood = "Very Good";
Language.Good = "Good";
Language.Low = "Low";
Language.VeryLow = "Very Low";
Language.ConfDisconnWAN = "Are you sure you want to disconnect wireless WAN?";
Language.ConfirmConnect = "Are you sure you want to connect wireless WAN?";
Language.ConfigurationOverview = "Configuration Overview";
Language.BroadcastSSID = "Broadcast SSID";
Language.KeyEntry = "Key Entry";
Language.KeyLengthCC = "Key Length";
Language.Key = "Key";
Language.PassPhrase = "Passphrase/PSK";
Language.GruopkeyUpdate = "Group key Update";
Language.TimeoutInterval = "Timeout Interval";
Language.TimeoutIntervalValidation = "(30 - 2592000 ) Seconds";
Language.PassPhraseValidation = "(8-32) characters";
Language.Hexadecimal = "Hexadecimal (0-9, A-F)"; 
Language.ASCII = "ASCII";
Language.bits ="bits";
Language.Auto ="Auto";
Language.validkey = "Key length must be ";
Language.APUpdConfMsg = "Updating Access Point details may affect its dependent configurations like:<br>1. Stops DHCP Server configuration for selected Access Point<br>2. Remove DHCP Relay configuration for selected Access Point<br>3. VPN tunnels may get interrupted for selected Access Point<br><br>Are you sure, you want to update Access Point details?";
Language.APUpdConfMsgForBridge = "Are you sure, you want to update access point details?";
Language.validPassPhrase = "At least 8 Alphanumeric charactor you should provide";
Language.validTimeout = "Timeout Interval should be between 30 - 2592000";
Language.SetDHCPConfirmMSG = "WLAN2 access point created successfully.\nDo you want to configure DHCP server on this access point?.";
Language.ASCIIValidPassPhrase = "You must enter valid characters for Pass Phrase. All the special characters except ; , ', and \" are allowed.";
Language.ASCIIValidKey = "You must enter valid characters for key. All the special characters except ; , ', and \" are allowed.";
Language.HexaValidKey = "You must enter Hexadecimal characters for ";
Language.ASCIIValidSSID = "You must enter valid characters for SSID. All the special characters except ; , ', and \" are allowed.";
Language.ServerPort = "Server Port";
Language.ServerSecret = "Server Shared Secret";
Language.BackupServerSecret = "Backup Server Shared Secret";
Language.BackupServerIP = "Backup Server IP";
Language.ASCIIValidServerSecret = "You must enter valid characters. All the special characters except ; , ', and \" are allowed for ";
Language.BackupServerPort = "Backup Server Port";
Language.Change = "Change";
Language.BackupServerValue="You must provide Backup Server IP, Port and Shared Secret";
Language.SameServerAndBackupServerIP="Server IP and Backup Server IP must be different";
Language.AddNotSupport = "Add/Delete functionality is not supported in bridge mode.";
Language.DelSingleAPConfirm= "Deleting Access Point will also remove all its dependent configurations including: <br>1. Access Point-Zone binding<br>2. DHCP Server or Relay<br>3. Access Point based Firewall rules<br>4. ARP - NDP static and proxy<br>5. Virtual hosts and VH based firewall rules<br>6. Access Point based Hosts and reference from host groups<br>7. Routes - Unicast, Multicast<br><br>Are you sure you want to delete the selected Access Point?";
Language.DelMultiAPConfirm = "Deleting Access Point will also remove all its dependent configurations including: <br>1. Access Point-Zone binding<br>2. DHCP Server or Relay<br>3. Access Point based Firewall rules<br>4. ARP - NDP static and proxy<br>5. Virtual hosts and VH based firewall rules<br>6. Access Point based Hosts and reference from host groups<br>7. Routes - Unicast, Multicast<br><br>Are you sure you want to delete all the selected Access Point?";
Language.LeaseIPAddr = "Leased IP Address";
Language.AccessPoint = "Access Point";
Language.AddTrustedMAC = "Add To Trusted MAC";
Language.NotSelected = "You must select at least one Connected Client.";
Language.DisconnMultiConfClient = "Are you sure want to disconnect all the selected Clients?";
Language.DisconnSingleConfClient = "Are you sure want to disconnect the Client?";
Language.AddTrustedMACMultiConfirm = "Are you sure want to Add all the selected Clients in Trusted MAC?";
Language.AddTrustedMACSingleConfirm = "Are you sure want to Add the Client in Trusted MAC?";
Language.DisconnectSuccessful = "WLAN Client have been disconnected successfully.";
Language.WLANDisconnectFailed = "WLAN Client could not be disconnected.";
Language.AddTrustedMACSuccessful = "WLAN Client have been Added successfully in Trusted MAC.";
Language.AddTrustedMACFailed = "WLAN Client could not be Added in Trusted MAC.";
Language.WirelessProtocol = "Wireless Protocol";
Language.Geography = "Geography";
Language.TransmissonPower = "Transmisson Power";
Language.BeaconInterval = "Beacon Interval";
Language.RTSThreshold = "RTS Threshold";
Language.FragmentationThreshold = "Fragmentation Threshold";
Language.MaximumClients = "Maximum Clients";
Language.BeaconIntervalValidation = "(20 - 1000 Milliseconds)";
Language.RTSThresholdValidation = "(1 - 2347)";
Language.FragmentationThresholdValidation = "(256 - 2346)";
Language.MaximumClientsValidation = "(1 - 255)";
Language.BeaconIntervalValidMessage = "You should be enter value between 20 to 1000 of ";
Language.RTSThresholdValidMessage = "You should be enter value between 1 to 2347 of ";
Language.FragmentationThresholdValidMessage = "You should be enter value between 256 to 2346 of ";
Language.MaximumClientsValidMessage = "You should be enter value between 1 to 255 of ";
Language.ApplyConfirmMessage = "Are you sure you want to apply these Wireless LAN Settings?";
Language.ZoneAddTitle="Add Zone";
Language.ZoneUpdateTitle="Edit Zone";
Language.MemberPorts="Member Ports";
Language.DeviceAccess="Appliance Access";
Language.ZoneNameNotValid ="You must enter alphanumeric and '_' value for Zone Name ";
Language.DeviceAccesss="Device Access";
Language.PortConfig="Port Configuration";
Language.Lan="LAN Zone";
Language.PortConfigConfirm= "Are you sure you want to change configuration?";
Language.configDHCPServer = "Configure DHCP Server >>";
Language.General = "General Configuration";
Language.NoRecordsFoundWithConfig = "No records found. Please check the Log Settings for this Log Type/Module.<br/><a href=\"#\" onclick=\"openClickHereLink('/logging/SyslogSetting.jsp')\">Click Here</a> to modify the Log Settings (Logs & Reports -> Configuration -> Log Settings.)";
Language.RoleName = "Profile Name";
Language.TestConnection = "Test Connection";
Language.ScheduleBackup = "Backup";
Language.Revoke = "Revoke";
Language.ResetToDef="Reset to default";
Language.EnableHA="Enable HA";
Language.DisableHA="Disable HA";
Language.AddBridgePair="Add Bridge-Pair";
Language.WebCat="Web Category Database";
Language.Connect = "Connect";
Language.InvalidUserName = " cannot contain '/', '\\', ' \" ', '[', ']', ':', '|', '<', '>', '=', '+', ';', ',', '*', '?'";
Language.NoteMsg="Note:Connections marked in <font color='red'>RED</font> have conflicting configuration. It is recommended that all the connections shared between end points must have the same authentication methods and credentials.";
Language.Note3="<div style='float:left'>Note: </div><div class='checkBox_disabled' style='background-position:-304px -328px;height:12px;'></div> indicates a Group/User already exist in the Appliance or invalid Group Name";
Language.WizardConfirm = "<div style='padding-left:5px'> Wizard will flush following settings, if configured:<br>- Custom Zones<br>- Custom Firewall rules<br>- Gateway<br>- Device Access<br>- Virtual hosts<br>- Interface based Hosts and Host groups<br>- DHCP Server or Relay<br>- VPN policies - IPSec, L2TP, PPTP<br>- ARP - NDP Static, Proxy<br>- Routes - Unicast, Multicast<br><br>Are you sure you want to continue?</div>";
Language.subscription = {};
Language["subscription"]["IPS"] = "IPS policies containing default categories will not function as the \"Intrusion Prevention System (IPS)\" module is unsubscribed";
Language["subscription"]["WEB FILTER"] = "Policies containing default categories will not function as the \"Web and Application Filter\" module is unsubscribed";
Language["subscription"]["APPLICATION FILTER"] = "Policies containing default categories will not function as the \"Web and Application Filter\" module is unsubscribed";
Language["subscription"]["ANTI SPAM"] = "Spam detection using RPD(TM) technology is disabled as \"Gateway Anti Spam\" module is unsubscribed";
Language["subscription"]["ANTI VIRUS"] = "Traffic will not be scanned for viruses as the \"Gateway Anti Virus\" module is unsubscribed";
Language["subscription"]["TD"] = "Policies containing default categories will not function as the \"Web and Application Filter\" module is unsubscribed";
Language["subscription"]["WAF"] = "Policies containing default categories will not function as the \"Web Application Firewall\" module is unsubscribed";
Language.ASExpiredOSExpired = "Spam detection using RPD(TM) technology is disabled as \"Gateway Anti Spam\" and \"Outbound Spam Detection\" modules have expired.";
Language.ASUnsubscribedOSExpired = "Spam detection using RPD(TM) technology is disabled as \"Gateway Anti Spam\" module is unsubscribed and \"Outbound Spam Detection\" module has expired.";
Language.ASSubscribedOSExpired = "Outbound Spam detection using RPD(TM) technology is disabled as \"Outbound Spam Detection\" module has expired.";
Language.ASExpired = "Spam detection using RPD(TM) technology is disabled as \"Gateway Anti Spam\" module has expired";
Language.ConnectionServedBy="Connection Served By"; 
Language.TranslatedSource = "Translated Source"; 
Language.TranslatedDestination = "Translated Destination";
Language.DeleteMultiConfirm = "Are you sure you want to delete all the selected records?";
Language.DeleteSingleConfirm = "Are you sure you want to delete the selected records?";
Language.DeleteNotSelected = "You must select at least one record.";
Language.PCPorts = "Ports[src,dst]";
Language.GWDataTitle="Data Transfer Report for";
Language.MoreThanWeekRequired="Selected Period must be minimum of 7 days.";
Language.WrongSelectionOfDate="End date must not be greater than start date.";
Language.DontDeliver = "Don't Deliver";
Language.RemoveandDeliver = "Remove and Deliver";
Language.DeliverOriginal = "Deliver Original";
Language.QosSelectPriority=" Select Priority";
Language.QosBestPriority=" 7 - [Best Effort - e.g P2P]  (Lowest)";
Language.QosBulkyPriority=" 6 - [Bulky - FTP]";
Language.QosNormal5Priority=" 5 - [Normal]";
Language.QosNormal4Priority=" 4 - [Normal]";
Language.QosNormal3Priority=" 3 - [Normal]";
Language.QosNormal2Priority=" 2 - [Normal]";
Language.QosBusinessPriority=" 1 - [Business Critical]";
Language.QosRealTimePriority=" 0 - [Real Time - e.g. VOIP]  (Highest)";
Language.IPAddrChangedMsg="IP Address of local server has been changed";
Language.EnterHostName = "Enter Host Name";
Language.EnterServiceName="Enter Service Name";
Language.EnterServiceGroupName="Enter Service Group Name";
Language.ValidHostName="You must enter value for Host Name";
Language.EnterHostGroupName = "Enter Host Group Name";
Language.EnterMACHostName="Enter MACHost Name";
Language.DHGrp1="1 (DH768)";
Language.DHGrp2="2 (DH1024)";
Language.DHGrp5="5 (DH1536)";
Language.DHGrp14="14 (DH2048)";
Language.DHGrp15="15 (DH3072)";
Language.DHGrp16="16 (DH4096)";
Language.MinPasswdLen5to10 = "Minimum Password length should be between 5 and 10.";
Language.ApplicationSignature = "Application Signature";
Language.ApplicationSignatures = "Application Signatures";
Language.notValidIPMsg = "You must enter valid value for IP Addresses";
Language.InterfaceIP = "Interface IP";
Language.Critical = "Critical";
Language.Major = "Major";
Language.Moderate = "Moderate";
Language.Minor = "Minor";
Language.Warning = "Warning";
Language.AllowPacket = "Allow Packet";
Language.DropPacket = "Drop Packet";
Language.DropSession = "Drop Session";
Language.WFPRFileType="File Type";
Language.WFPRURLGroup="URL Group";
Language.WFPRDynamicCategory="Dynamic Category";
Language.AddDomains="Add Domains Here";
Language.AddKeywords="Add Keywords Here";
Language.addExtenstionHere="Add Extension here";
Language.AddMIMEHeadershere="Add MIME Headers here";
Language.EnterScheduleName="Enter Schedule Name";
Language.CountryHostGroup = "Country Host Group";
Language.AddCountryHostTitle = "Add Country Host";
Language.CountryHostList = "Country Host List";
Language.UpdateCountryHostTitle = "Edit Country Host";
Language.AddCountryHostGrpTitle = "Add Country Host Group";
Language.UpdateCountryHostGrpTitle = "Edit Country Host Group";
Language.SurfingExpireDate="Surfing Quota Expiry Date";
Language.GuestUserExpireDate="Guest User Account Expiry Date";
Language.GuestUserValidityExpired = "Guest User Validity Expired";
Language.ParamIndex = "Parameter Index";
Language.headers = "headers";
Language.Sunday = "Sunday";
Language.Monday = "Monday";
Language.Tuesday = "Tuesday";
Language.Wednesday = "Wednesday";
Language.Thursday = "Thursday";
Language.Friday = "Friday";
Language.Saturday = "Saturday";
Language.Spam = "Spam";
Language.ProbableSpam = "Probable Spam";
Language.VirusOutBreak = "Virus Outbreak";
Language.ProbVirusOutBrak = "Probable Virus Outbreak";
Language.GreaterThan = "Greater Than";
Language.LessThan = "Less Than";
Language.SelMsgHeader = "Select Message Header";
Language.From = "From";
Language.To = "To";
Language.Contains = "Contains";
Language.Equals = "Equals";
Language.SelAction = "Select Action";
Language.ChangeRecp = "Change Recipient";
Language.PrefixSub = "Prefix Subject";
Language.IPGroup = "IP Group";
Language.RBLGroup = "RBL Group";
Language.ConfirmMsgForLocalAuthofGuestUser = "Guest User will always be authenticated with Local Authentication Server. Are you sure you want to update Authentication Settings?";
Language.Enter = "Enter ";
Language.NormalGroup = "Normal";
Language.Week = "Week";
Language.Day = "Day";
Language.Month = "Month";
Language.ClientlessGroup = "Clientless";
Language.EnterName = "Enter Name";
Language.EnterUserName ="Enter UserName";
Language.EnterIP = "Enter IP Address";
Language.EnterEmail = "Enter Email Address";
Language.EnterMACList = "Enter MAC Address List";
Language.ActiveDirectory = "Active Directory";
Language.LDAPServer = "LDAP Server";
Language.RADIUSServer = "RADIUS Server";
Language.CTSASettings = "CTAS Settings";
Language.NTLMSettings = "NTLM Settings";
Language.CTASInactivityCheck="User Inactivity";
Language.CTASInactivityTime="Inactivity Time";
Language.CTASConfirmMessage="Are you sure you want to update CTAS Settings?";
Language.CTASInactivityTimetOutOfRange = "Inactivity Time must be between 3 and 1440.";
Language.NTLMConfirmMessage="Are you sure you want to update NTLM Settings?";
Language.NTLMInactivityTimetOutOfRange = "Inactivity Time must be between 6 and 1440.";
Language.LocalSubnet="Local Subnet";
Language.RemoteGateway="Remote Gateway";
Language.Notification="Notification";
Language.Maintenance="Maintenance";
Language.HA="HA";
Language.Community="Community";
Language.V3UserTitle="v3 User";
Language.CRLTitle="CRL";
Language.SysGraph="System Graphs";
Language.Tools="Tools";
Language.CTR="CTR";
Language.Objects="OBJECTS";
Language.Hosts="Hosts";
Language.MACHost="MAC Host";
Language.CountryHost="Country Host";
Language.ServiceGrp="Service Group";
Language.NetworkInCaps="NETWORK";
Language.WLAN="Wireless LAN";
Language.ConnectedClient="Connected Client";
Language.RogueAPScan="Rogue AP Scan";
Language.WWAN="Wireless WAN";
Language.DialIn="Dial In";
Language.StaticRoute="Static Route";
Language.Unicast="Unicast";
Language.Multicast="Multicast";
Language.SrcRoute="Source Route";
Language.Server="Server";
Language.Lease="Lease";
Language.Relay="Relay";
Language.DDNS="Dynamic DNS";
Language.GuestUser="Guest Users";
Language.FWCaps="FIREWALL";
Language.fwRule="Rule";
Language.fwRuleipv4="IPv4 Rule";
Language.fwRuleipv6="IPv6 Rule";
Language.trustedMAC="Trusted MAC";
Language.DoS="DoS";
Language.BypassRules="Bypass Rules";
Language.IPSEC="IPSec";
Language.SSL="SSL";
Language.Bookmark="Bookmark";
Language.BookmarkGrp="Bookmark Group";
Language.Portal="Portal";
Language.LiveConns="Live Connections";
Language.IPSECconn="IPSec Connections";
Language.SSLVPNUser="SSL VPN Users";
Language.WebFCaps="WEB FILTER";
Language.AppFCaps="APPLICATION FILTER";
Language.IMrule="IM Rules";
Language.Conversation="Conversation";
Language.FileTransferRule="File Transfer";
Language.WebcamRule="Webcam";
Language.AVCaps="ANTI VIRUS";
Language.ASCaps="ANTI SPAM";
Language.HTTPScanRule="HTTP Scanning Rules";
Language.HTTPScanException="HTTPS Scanning Exceptions";
Language.V9QuarantineArea="V9 Quarantine Area";
Language.EmailArchiver="Email Archiver";
Language.SpamDigestSettings="Quarantine Digest Settings";
Language.QuarantineArea="Quarantine Area";
Language.TrustedDomain="Trusted Domain";
Language.TDCaps="TRAFFIC DISCOVERY";
Language.SyslogServer="Syslog Servers";
Language.LogSetting="Log Settings";
Language.ViewReport="View Reports";
Language.FourEyeAuth="4-Eye Authentication";
Language.LogAndReport="LOGS & REPORTS";
Language.HTTPSTitle="HTTP/S";
Language.SystemCaps="SYSTEM";
Language.IdentityCaps="IDENTITY";
Language.SNMPScanRules="SMTP/S Scanning Rules";
Language.POPIMAPRules="POP/S - IMAP/S Scanning Rules";
Language.EnterFQDNHostName="Enter FQDN Host Name";
Language.EnterFQDNHosGroupName="Enter FQDN HostGroup Name";
Language._NameWithMultipleSpaces = "Alphanumeric, '_', and spaces";
Language.NameWithMultipleSpacesForLcation="You must enter valid Alphanumeric, '_', and spaces value for Location";
Language.GatewayFailoverTimeoutOutofRange = "Gateway Failover Timeout must be between 1 - 65535 Seconds";
Language.ValidMailServerIP="You must enter valid IPv4 value for Mail Server IP Address";
Language.RedirectUserURL = "URL Redirection after Login";
Language.URLToRedirect = "URL to redirect";
Language.UserRequestedURL = "User requested URL";
Language.CustomURL = "Custom URL";
Language.RemoveAttachment="Remove Attachment";
Language.SendOriginal="Send Original";
Language.SelDSCP="Select DSCP Marking";
Language.AfterFactoryReset = "The network setting parameters are restored to factory default. It is recommended, you configure the network settings.";
Language.EmptyCountryHostListLabel = "No Country Host(s) available";
Language.SelNode = "Add Selected Node here";
Language.vrInvalidUserName = " cannot contain '/', '\\', ' \" ', '[', ']', ':', '|', '<', '>', '=', '+', ';', ',', '*', '?'";
Language.vrEndCharValidation=" cannot end with special characters '.' and '@'";
Language.vrInvalidDomainName=" can contain only alphanumeric characters, '_', '-' and '.'";
Language.DERASN1="DER ASN1 DN  (X.509)";
Language.YahooContacts="Any other Yahoo Contacts";
Language.MSNContacts="Any other MSN Contacts";
Language.RestoringBackup="The backup is being restored.";
Language.ValidStartIPMsg="Range Start IP Address";
Language.ValidEndIPMsg="Range End IP Address";
Language.ModelNumber = "Model Number";
Language.MobileNoHelp ="Enter the cell phone number without any prefix e.g. \"0\", \"+\"";
Language.MbNowithCountryCodeHelp = "Enter without a country code or \"0\" (Zero) as prefix e.g. 98XXXXXXXX";
Language.ConnectionLostMsg = "Error! The request could not be completed. This could be due to one of the following reasons: <br> 1. Could not connect to the Appliance <br> 2. The request is terminated by the user ";
Language.SelOptionNotConnected="Selected Interface is not currently connected.";
Language.LessThanMonthRequired="Selected Period could not be more than 30 days.";
Language.Period="Period";
Language.SelfSigned="Self Signed";
Language.AllCategories = "All Categories";
Language.FileCategory = "File Category";
Language.NoGateway = "No Gateway";
Language.NoPolicy = "No Policy";
Language.NoCategory = "No Category";
Language.NoApplication = "No Application";
Language.NoRule = "No Rule";
Language.List = "List";
Language.Hold="Hold";
Language.Re_initiate="Re-initiate";
Language.ApplicationAccess="Application Access";
Language.OTHER="OTHER";
Language.RSAKeys="RSA Keys";
Language.DigitalCertificates="Digital Certificates";
Language.Inactive = "Inactive";
Language.DailyCaps = "DAILY";
Language.WeeklyCaps="WEEKLY";
Language.MonthlyCaps = "MONTHLY";
Language.YearlyCaps="YEARLY";
Language.WebClient = "Web Client";
Language.ThinClientOnly = "Thin Client";
Language.IPSubnet = "IP Subnet";
Language.SystemHost = "System Host";
Language.SelectReason="Select Reason";
Language.SelectStatus="Select Status";
Language.SelectUser="Select User";
Language.selectzone="Select Zone";
Language.SelectSourceInterface="Select a Source Interface";
Language.ARPCache="Neighbor Cache";
Language.NoPolicyApplied="No Policy Applied";
Language.AutoNegotiate="Auto Negotiate";
Language.AdminWeakPassword = "Administrator [Weak Password]";
Language.Manager = "Manager";
Language.UserBasedShared = "User Based Shared";
Language.UserBasedIndividual = "User Based Individual";
Language.FirewallRuleBased = "Firewall Rule Based";
Language.WebCategoryBased = "Web Category Based";
Language.ApplicationBasedShared = "Application Based Shared";
Language.ApplicationBasedIndividual = "Application Based Individual";
Language.Web = "Web";
Language.AllProtocol = "All Protocol";
Language.AnyType="Any Type";
Language.AnyCode="Any Code";
Language.Userpolicyapplied="User\'s policy applied";
Language.UpdateStatus="Updates Status";
Language.ConfirmUpdate="Are you sure you want to update?";
Language.FileUploadMessage="You must select an update file.";
Language.BypassSession = "Bypass Session";
Language.DisSSLVPNPolicy="Disabled SSL VPN Policy";
Language.is = "is";
Language.Contact="Contact";
Language.Blank="Blank";
Language.isnot = "is not";
Language.contains = "contains";
Language.doesnotcontain= "does not contain";
Language.isequalto="is equal to";
Language.Startswith="Starts with";
Language.Registered= "Registered";
Language.ARPRequest="ARP - NDP Request";
Language.ARPReply="ARP - NDP Reply";
Language.Bridge_Pair="Bridge-Pair";
Language.WirelessModem="Wireless Modem";
Language.Unbound="Unbound";
Language.Auto_negotiated="Auto-negotiated";
Language.viewDataTrans="Click to view data transfer";
Language.All="All";
Language.EthernetHeader="Ethernet Header";
Language.SourceMACAddress="Source MAC Address";
Language.DestinationMACAddress="Destination MAC Address";
Language.Header="Header";
Language.IPHeaderLength="IP Header Length";
Language.TypeofService="Type of Service";
Language.TotalLength="Total Length";
Language.Identification="Identification";
Language.FragmentOffset="Fragment Offset";
Language.TimetoLive="Time to Live";
Language.Checksum="Checksum";
Language.SequenceNumber="Sequence Number";
Language.Window="Window";
Language.AcknowledgementNumber="Acknowledgement Number";
Language.Length="Length";
Language.Code="Code";
Language.EchoID="Echo ID";
Language.EchoSequence="Echo Sequence";
Language.FragmentationMTU="Fragmentation MTU";
Language.ARPType="ARP Type";
Language.TotalDataTransferofLastWeek = "WAN Zone: Total data transfer for last week";
Language.WebAndAppFilterLicence="Web and Application Filter";
Language.IPSLicence="IPS";
Language.AVLicence="Gateway Anti Virus";
Language.ASLicence="Gateway Anti Spam";
Language.WorkHourSupport="8 x 5 Support";
Language.FullTimeSupport="24 x 7 Support";
Language.UserLicence="User License";
Language.BundleLicence="Bundle Subscription";
Language.OutBoundSpanLicence="Outbound Spam Protection";
Language.SSLVPNLicence="SSL VPN";            
Language.edit="edit";
Language.ClientlessUser="Clinetless User";
Language.SSLVPNPolicy="SSL VPN Policy";
Language.VPNPolicy="VPN Policy";
Language.Logonto="Log on to";
Language.StatusMessage_1="Login Failed.";
Language.StatusMessage_2="Appliance is not activated.";
Language.StatusMessage_3="This IE version is not supported, please try to login using higher version.";
Language.StatusMessage_4="This mode of URL access is not allowed.";
Language.StatusMessage_5="Clientless User is not allowed to login to My Account";
Language.StatusMessage_6="Tampering suspected. Provide valid credential.";
Language.StatusMessage_7="You are not authorized to view report(s)";
Language.UsernameRequired="You must enter the Username";
Language.PasswdReqMsg="You must enter the Password";
Language.MyAccount="My Account";
Language.WebAdminConsole="Web Admin Console";
Language.InvalidUsernamePassword="Invalid username or password";
Language.SessionExpired="Sorry! Session Expired";
Language.NotAdminUser="You are not admin user";
Language.DactivateUser="The username has been deactivated";
Language.MaxSessionExceed="Max concurrent users limit exceeded, please try after some time...";
Language.NotAuthorizedUser="Not an authorized SSL VPN user";
Language.AdminDisconnect="You have been disconnected by Administrator";
Language.NoBookMarkForWebAccess="No bookmarks available for Web Access Mode";
Language.ContactAdminForAppAccess="Contact Administrator for Application access.";
Language.NoBookMarkAvail="No bookmarks available";
Language.NoFullWebAppAccess="Current SSL VPN User neither have Full Access nor Web Access nor Application Access.";
Language.NoPolicyForCurrentUser="No SSL VPN Policy binded to current SSL VPN User";
Language.EnterValidURL="Please enter valid URL";
Language.ContactAdminToDownload="Please contact administrator, SSL VPN is not Configured, File can not be download";
Language.JavaNotEnableInBrowser="Java is not enabled on your Browser. Please enable and try again.";
Language.AAMInited="Application Access Mode successfully initiated.";
Language.AAMFailToInit="Application Access Mode could not be initiated.";
Language.AAMOnlyForWindows="CRSSL Application Access Mode is supported in WINDOWS operating systems only.";
Language.JavaVersionNotSupport="Recommended JRE version: 1.6.0_18 or later from Sun Microsystems Inc. Your version:{javaversion} from {vendor}";
Language.SSLHandShakeFailed="SSL Handshake Failed";
Language.SeverCertHandShakeFailed="SSL Handshake Falied: server certificate is not valid.";
Language.CertNotValid="Certificate is not yet valid. Please contact Administrator.";
Language.ExpiredCert="Certificate has been expired. Please contact Administrator.";
Language.Denied="Denied";
Language.POP="POP";
Language.LocalACL="Local ACL";
Language.ICMPRedirection="ICMP Redirection";
Language.SourceRouted="Source Routed";
Language.FragmentedTraffic="Fragmented Traffic";
Language.ForeignHost="Foreign Host";
Language.IPMACFilter="IPMAC Filter";
Language.IPSpoof="IP Spoof";
Language.GUI="GUI";
Language.CLI1="CLI";
Language.CCC="Central Management";
Language.GuestUserLbl="Guest User";
Language.Dial_In="Dial-In";
Language.WebCatCC="WebCat";
Language.Appliance="Appliance";
Language.MyAccountLbl="My Account";
Language.Sec30="30 Sec";
Language.Min1="1 Min";
Language.Min2="2 Min";
Language.Min5="5 Min";
Language.Successful="Successful";
Language.Failed="Failed";
Language.Established="established";
Language.Terminated="Terminated";
Language.Renew="Renew";
Language.Expire="Expire";
Language.FileName="FileName";
Language.File_Quarantine="File/Quarantine";
Language.NOSUBJECT="NO SUBJECT";
Language.MaildetectSPAM="Mail detected as SPAM";
Language.MaildetectPROBSPAM="Mail detected as PROBABLE SPAM";
Language.MailisClean="Mail is Clean";
Language.SenderIPblacklisted="Sender IP Address is blacklisted";
Language.AddFirewallRulesForVirtualHost="Add Firewall Rules For Virtual Host";
Language.chkFirewallRulesForVirtualHost="Add Firewall Rule(s) For Virtual Host";
Language.AddRulesForVirtualHost="Add Rule(s)";
Language.VHcreate="Virtual Host \"";
Language.succCreated="\" is successfully created.";
Language.wantToAllowAccess="Do you want to allow access to  \"";
Language.FromParticularZone="\" from a particular zone?";
Language.AddFirewallRuleLbl="Add a firewall rule for each source zone from which you want to allow access to this virtual host.";
Language.firewallRuleName="Firewall Rule Name";
Language.sourceZone="Source Zone";
Language.AVASscanning="AV & AS Scanning";
Language.reflexiveRule="Create Reflexive Rule";
Language.Personal = "Personal";
Language.PersonalDetails = "Personal Details";
Language.Client = "Client";
Language.AccountStatus = "Account Status";
Language.QuarantineMails = "Quarantine Mails";
Language.SpamQuarantineMails = "Quarantine Emails";
Language.EnterValidValueForIPAddress = "You must enter valid value for IP Address.";
Language.Of="of";
Language.WLANRadio="WLAN Radio";
Language.WebAppFirewallCaps = "WEB APPLICATION FIREWALL";
Language.WebServers = "Web Servers";
Language.WebServer = "Web Server";
Language.Alerts = "Alerts";
Language.ServerIdentity = "Hide Server Identity";
Language.JSProcessing = "Enable JavaScript Processing";
Language.StrictHTTPS = "Enable Strict HTTPS";
Language.ClientIPHeader = "Send Client IP Header";
Language.IncomplementURLs = "Allow Incomplete URLs";
Language.URLValidation = "Enable Case-Sensitive URL Validation";
Language.TransformError = "Enable Transform Error 500";
Language.ErrorURLs = "Error URLs";
Language.BadRequest = "400 Bad Request";
Language.Forbidden = "403 Forbidden";
Language.MethodNotAllow = "405 Method Not Allowed";
Language.HTTPMethods = "Allowed HTTP Methods";
Language.Methods = "HTTP Methods";
Language.EditException = "Edit Exception";
Language.IgnoreCase = "Ignore Case";
Language.RegEx = "RegEx";
Language.ContentType = "Content Type";
Language.HTMLContentType = "HTML (htm, php, asp, jsp, cgi etc)";
Language.OtherContentType = "Other (jpg, gif, pdf etc)";
Language.URI = "URI";
Language.FormName = "Form Name";
Language.FieldName = "Field Name";
Language.FieldType = "Field Type";
Language.Characters = "Characters";
Language.BasicInfo = "Basic Information";
Language.PublicNameOrAddress = "Public IP/FQDN";
Language.PublicIPAddress = "Public IP";
Language.DomainsToProtect = "Domains To Protect";
Language.SourceIPName = "Source IP/Name";
Language.StatusCode = "Status Code";
Language.ExceptionName = "Exception Name";
Language.ExceptionType = "Exception Type";
Language.WebServerName = "Web Server Name";
Language.IsPrivateIP = "Is this service hosted on Private IP?";
Language.VirtualIP = "Virtual IP";
Language.VirtualPort = "Virtual Port";
Language.WAFIPAddressTxt = "(Specify the IP Address of the server that hosts the service that will be protected by the Web Application Firewall)";
Language.WAFZoneTxt = "(Select Zone where the web server physically resides)";
Language.WAFVirtualIPTxt = "(Mention Virtual IP Address here, if the web server resolves on  an IP other than Real IP)";
Language.WAFVirtualPortTxt = "(Mention Virtual Port here, if the web server is accessed using a port different than a port it actually runs on)";
Language.AlertDetails = "Alert Details";
Language.FromName ="From Name";
Language.UserAgent = "User Agent";
Language.HTTPRequest = "HTTP Request";
Language.AddException = "Add Exception";
Language.PerformanceTunning = "Performance Tuning";
Language.MaxConnections = "Max Connections";
Language.Maxlistenqueue = "Max Listen Queue";
Language.Keepalivetimeout = "Keep Alive Timeout";
Language.EnableSSLScanning = "SSL Scanning for HTTP Port";
Language.WebServerPort = "Web Server Port";
Language.EnableFormValidation = "Enable Form Validation";
Language.Text = "Text";
Language.TextArea = "Text-Area";
Language.FormCleanup = "Form Clean-up";
Language.Block = "Block";
Language.Alert = "Alert";
Language.EnableCookieValidation = "Enable Cookie Validation";
Language.StrictCookieValidation = "Enable Strict Cookie Validation";
Language.TransitionPeriod = "Enable Transition Period";
Language.CookieCleanup = "Enable Cookie Clean-up";
Language.EncryptToWebserver = "Encrypt To Webserver";
Language.AllowSSLv2 = "Allow SSLv2";
Language.WeakCiphers = "Allow Weak Ciphers";
Language.Exceptions="Exceptions";
Language.EntryPoint = "Entry Point";
Language.UnprotectedDirectories = "Unprotected Directories";
Language.FilterException = "Filter Exception";
Language.CookieException = "Cookie Exception";
Language.FormsException = "Forms Exception";
Language.Checkbox = "Check Box";
Language.Hidden = "Hidden";
Language.Radio = "Radio Button";
Language.URLDirectory = "URL/Directory";
Language.URLProperties = "URL/Directory Properties";
Language.WSHostedOn = "Web Server Hosted On";
Language.PrivateIP = "Private IP";
Language.PublicIP = "Public IP/FQDN";
Language.SelPrivateHost = "Select Private Host";
Language.SelPublicHost = "Select Public Host";
Language.PrivatePort = "Private Port";
Language.DomainOrIP = "Domain/IP Address";
Language.Domains = "Domains";
Language.WAFScanning = "WAF";
Language.Active_Active="Active-Active";
Language.Active_Passive="Active-Passive";
Language.PortList="Port List";
Language.SelectedPort="Selected Port";
Language.PortNotNullMsg = "You must enter value for Port";
Language.HostSelMsg = "You must select the Public IP/FQDN.";
Language.PublicHostSelMsg = "You must select the Public IP.";
Language.PrivateHostSelMsg = "You must select the Private IP.";
Language.WAFServiceError = "You cannot select System Service Group.";
Language.WAFMenuLabel = "WAF";
Language.SamePortMsg = "Both Public HTTP and HTTPS Port can't be same.";
Language.URLDirectoryURI = "URL/Directory/URI";
Language.OtherWAFConfiguration="Other WAF Configuration";
Language.BridgePairNotAdded="Bridge Pair cannot be configured while HA is enable.";
Language.URLLimit = "You can't enter more than 128 URLs for one group";
Language.AllDomainOnIP = "All Domains Hosted On ";
Language.SpecificDomainOnIP = "Specific Domains Hosted On ";
Language.OnlyHTTP = "Only HTTP";
Language.OnlyHTTPS = "Only HTTPS";
Language.HTTPAndHTTPS = "HTTP & HTTPS";
Language.HTTPwithSSLOffloading = "HTTP with SSL Off loading";
Language.WebServerProtocol = "Web Server Protocol";
Language.PublicPrivate = "(Public - Private)";
Language.NetworkConfigWizard = "Network Configuration Wizard";
Language.OrInSmall="or";
Language.ToInSmall = "&nbsp;to&nbsp;";
Language.PrevLbl="Prev";
Language.LowIPRange="Low Range IP";
Language.HostIPRange="Host IP Range.";
Language.ApplyGrpSetting="Apply Group\'s Setting";
Language.ServiceGrpName="Service Group Name";
Language.HostGrpName="Host Group Name";
Language.OneDomainReq = "At least one Domain to protect is required.";
Language.BytesTransferred = "Bytes Transferred";
Language.NonZeroMaxConnMessage = "You must enter a number greater than 50 for Max Connections.";
Language.NonZeroMaxQueMessage = "You must enter a number greater than 10 for Max listen queue.";
Language.NonZeroKeepAliveMessage = "You must enter a number greater than 5 for Keep alive timeout.";
Language.FileSizeValidMsg="File size must be between 1-{ftpscansizelimit}&nbsp;KB";
Language.TotalActiveUserLbl="Total Active User";
Language.outOf="Out of";
Language.AlertEvents = "Alert Events";
Language.AllowedEvents = "Allowed Events";
Language.WouldDenied = "Would be denied";
Language.WebServerNotExists = "Web Server not exists to Add Exception.";
Language.IBMServerTerminal="IBM Server Terminal";
Language.NTLMClient = "NTLM Client";
Language.URLOrIP = "URL/IP Address";
Language.Classic = "Classic";
Language.Standard = "Standard";
Language.iNGClassic = "Radiance";
Language.iNGStandard = "Elegance";
Language.AddASException = "Add As Exception";
Language.BetweenDays = "(0 - 999)";
Language.KeepAliveRange = "(5 - 999)";
Language.MaxQueRange = "(10 - 999)";
Language.MaxConnRange = "(50 - 9999)";
Language.StaticDNS = "DNS Host Entry";
Language.TTL = "Time To Live (Seconds)";
Language.HostDomainName = "Host/Domain Name";
Language.ReverseDNS = "Reverse DNS Lookup";
Language.StaticDNSAddTitle = "Add DNS Host Entry";
Language.StaticDNSEditTitle = "Edit DNS Host Entry";
Language.validTimeToLive= "Time To Live should be between 3600 - 604800 seconds";
Language.MaxDomainNodeLabel = "The host/domain name must not exceed 253 characters. The label must not exceed 63 characters.";
Language.DNSDomainHelp = "Host/Domain name must not exceed 253 characters.<br/> Label must not exceed 63 characters.<br/>E.g. www.mail.example.com <br/>Label - mail,example<br/> Host/Domain name - www.mail.example.com";
Language.TTLSecHelp="(3600 - 604800)";
Language.ReverseDNSHelp = "Add reverse DNS lookup for this Host entry";
Language.SurfingRenewal="Surfing Quota Cycle Renewal";
Language.DataTransferRenewal="Data Transfer Cycle Renewal";
Language.InvalidBandwidthRange = "Bandwidth must be between 2 to 2560000.";
Language.InvalidInactivityTimeoutRange = "Inactivity Timeout Range must be between 3 to 1440";
Language.chkpeer="Check Peer After Every should be between 60 - 3600";
Language.Emergency = "Emergency";
Language.ErrorLable = "Error";
Language.Debug = "Debug";
Language.MaxDays = "(0 - 365)";
Language.MaxDayMsg = "Invalid input. Number of days can not be more than 365.";
Language.FormCleanupHrsMsg = "Invalid input. Number of hours can not be more than 23.";
Language.MaxHours = "(0 - 23)";
Language.Enable_load_balancing="Enable Load Balancing";
Language.HealthCheckMethod = "Health Check Method";
Language.TCPProbe = "TCP Probe";
Language.ICMPProbe = "ICMP Probe";
Language.EnableHealthCheck = "Enable Health Check (For failover)";
Language.Retries = "Retries";
Language.PortRangeLabel = "(Range:1 - 65535)";
Language.ValidInterval = "Health Check Interval should be between 5 - 65535 seconds";
Language.ValidTimeOut = "Health Check TimeOut should be between 1 - 10 seconds";
Language.ValidRetries = "Health Check Retries should be between 1 - 10";
Language.SpamRuleIdentitySpam = "Mail is identified as Spam";
Language.SpamRuleIdentityProbSpam = "Mail is identified as probable Spam";
Language.SpamRuleIdentityVirusOutbreak = "Mail is identified as Virus Outbreak";
Language.SpamRuleIdentityProbVirusOutbreak = "Mail is identified as probable Virus Outbreak";
Language.SpamRuleIPBelong = "From IP Belongs To {ipgroup}";
Language.SpamRuleIPBlackListBy = "Sender IP Address Black Listed By {ipaddress}";
Language.SpamRuleMsgGreaterThan = "Message size is greater than {size}";
Language.SpamRuleMsgLessThan = "Message size is less than {size}";
Language.SpamRuleMessageHeader = "Message Header {header} {state} {value}";
Language.MoreInfo = "More Info";
Language.AddrGrpMaxLimitExceed = "Maximum 400 '{groupType}' are allowed.";
Language.Risk = "Risk";
Language.Characteristics = "Characteristics";
Language.Technology = "Technology";
Language.AppNameSearch = "Search By Application Name";
Language.AppFilterSettings = "Application Filter Criteria";
Language.DSCPVal="DSCP Val";
Language.DDNSHostNameHelpMsg="(Example:xyz.dyndns.com)";
Language.GWIPNameLbl="Gateway [IP Or Name]";
Language.WeekDays="Week Days";
Language.WeekDaysIncSaturday="Weekdays Including Saturday";
Language.AllDaysofWeek="All Days of week";
Language.YY="YY";
Language.Mon="MM";
Language.DD="DD";
Language.NTLMEnable = "NTLM Authentication is enabled. Modifying the \"Selected Authentication Server\" list may affect NTLM authentication.";
Language.AllowedDomain = "Referred Domains";
Language.YouMustEnterMinimum = "You must enter minimum ";
Language.characterFor = " character for ";
Language.YouCanEnterMaximum = "You can enter maximum ";
Language.andConfirm = " and confirm ";
Language.areNotSame = " are not same";
Language.ConfirmWord = "Confirm ";
Language.Lock="Lock";
Language.Always="Always";
Language.ListOfApp = "List of Matching Applications";
Language.Applications = "Applications";
Language.you_cannot_enter = "You cannot enter ";
Language.validation = {};
Language["validation"][51] = "\" ' \\ and ,";
Language["validation"][52] = "\" ' \\ # and ,";
Language["validation"][53] = "\" : ; and ,";
Language["validation"][54] = "\" ' and ,";
Language["validation"][29] = ",";
Language["validation"][55] = "\" ' and \\";
Language.VirtualHostDelMsg = "Deleting the Virtual Host will delete corresponding Firewall Rule. Are you sure you want to delete Virtual Host?";
Language.Loading = "Loading...";
Language.Dataerror = "Data Error.";
Language._24Online = "24Online";
Language.GWDataTitleForDashBoard="Data Transfer Report";
Language.VHServiceError = "You can select only one service when Virtual Host is the destination host";
Language.NotSameWINS = "Primary WINS And Secondary WINS cannot be the same.";
Language.WebServerNotAvailable="No Web Server configured";
Language.SelectSchedule = "Select Schedule";
Language.WebServerDelMsg = "Deleting the Web Server will delete corresponding Firewall Rule. Are you sure you want to delete Web Server?";
Language.AllowedDomainHelp = "Provide a set of domain(s)/URL(s) required by Bookmarked URL to render it appropriately.";
Language.WAFService = "WAF";
Language.ApplicationList = "Application List";
Language.TotalApplications = "Total Applications : ";
Language.Interval="Interval";
Language.EnterDescription="Enter Description";
Language.AnyHost = "Any Host";
Language.AnyService = "Any Service";
Language.AnyLiveUser = "Any Live User";
Language.UserPolicyApplied = "User's Policy Applied";
Language.limitMaxService = "Firewall Rule could not be created/updated as more than 1024 Services/Service Groups are selected.";
Language.limitMaxSourceHost = "Firewall Rule could not be created/updated as more than 1024 Source Hosts/Host Groups are selected.";
Language.limitMaxDestHost = "Firewall Rule could not be created/updated as more than 1024 Destination Hosts/Host Groups are selected.";
Language.limitMaxUser = "Firewall Rule could not be created/updated as more than 1024 Users/User Groups are selected.";
Language.IPSPolicy="IPS Policy";
Language.LowRisk = "2 - Low";
Language.VeryLowRisk = "1 - Very Low";
Language.MediumRisk = "3 - Medium";
Language.HighRisk = "4 - High";
Language.VeryHighRisk = "5 - Very High";
Language.AppFilterRuleDelConfirm = "Are you sure you want to delete the selected Application Filter Policy rule(s)?";
Language.NameAttribute = "Display Name Attribute";
Language.WAFTitle = "Web Application Firewall";
Language.selIndividualApp = "Select Individual Application";
Language.MustSupplyPasswordKeyFile="You must provide both, CA password and private key.";
Language.WrongValidityDate="\"Valid From\" date must not be greater than \"Valid Upto\" date.";
Language.iView = "iView";
Language.IPSecConnection="IPSec Connection";
Language.CISCOMenuTitle="CISCO<font style='font-size: 0.8em;vertical-align: text-top;'>TM</font> VPN Client";
Language.CISCOSubMenuTitle="CISCO<sup style=\"font-size:7px;\">TM</sup> VPN Client";
Language.DNSServer1="DNS Server 1";
Language.DNSServer2="DNS Server 2";
Language.EnableConnHelp="Select to enable this connection.";
Language.AllowUserHelp="Select all the Users that are allowed to connect.";
Language.NameHelp="Connection identifier";
Language.AssignIPHelp="IP Address range from which IP Addresses will be assigned to the CISCO VPN Clients.";
Language.DNSHelp="DNS server addresses to be pushed to the CISCO VPN Clients.";
Language.CISCOClientUpdated = "CISCO VPN client has been updated successfully.";
Language.CISCOClientNotUpdated = "CISCO VPN client could not be updated.";
Language.DNSNotSame = "DNS Server 1 and 2 should not be same.";
Language.CISCOFailedActivate="CISCO VPN client could not be activated.";
Language.CISCOSuccessActivate="CISCO VPN client has been activated successfully.";
Language.CISCOSuccessDeactivate="CISCO VPN client has been deactivated successfully.";
Language.AuthTypeHelpForCISCOVPNClient="<b>Preshared key :</b> Authenticate IPSec end-points by using the secret know to <br>both the end-points.<br>&nbsp;<b>Digital certificate :</b> Authenticate IPSec end-points by exchanging certificates <br>(either self signed or issued by a certificate authority).";
Language.CISCOVPNClient="Configuration for CISCO<sup style=\"font-size:7px;\">TM</sup> VPN Client for Apple iOS";
Language.Install="Install";
Language.ExportPassword="Configuration Password";
Language.ExportPasswordHelp="This password is required at the time of importing client configuration profile";
Language.LookupSuccess = "Lookup Successful";
Language.LookupFail = "Lookup Fail";
Language.Result = "Result";
Language.TotalQueryTime = "Total Query Time";
Language.CanNotResolve = "Can Not Resolve";
Language.LookupAllConfiguredServers = "Lookup Using All Configured Servers";
Language.InvalidLoginTimeAD="Login not allowed at this time (AD Policy)";
Language.InvalidWorkstationAD="Login not allowed at this workstation (AD Policy)";
Language.PasswordExpiredAD="User password expired (AD Policy)";
Language.AccountDisabledAD="User account disabled (AD Policy)";
Language.AccountExpiredAD="User account expired (AD Policy)";
Language.ResetPasswordAD="User needs to reset the password (AD Policy)";
Language.AccountBlockedAD="User account blocked (AD Policy)";
Language.EmailAddressAttribute = "Email Address Attribute";
Language.AndroidClient = "Android Client";
Language.IOSClient = "iOS Client";
Language.NameLookupResult = "Name Lookup Result";
Language.TestNameLookup = "Test Name Lookup";
Language.IdentiAttrib="Identification Attributes";
Language.EmailNotification="Email Notification";
Language.IPSecTunnelUpDownLbl="IPSec Tunnel UP/Down";
Language.Issuer = "Issuer";
Language.Purpose = "Purpose";
Language.CertificateNotFound="Error in Certificate. Failed to display details of the Certificate.";
Language.ExpectedIssuer="Expected Issuer";
Language.DownloadMACConfig = "Download SSL VPN Client Configuration - MAC Tunnelblick";
Language.KeyEncryption="Key Encryption";
Language.MaxImportURLExceed = "Max '{number}' URLs are allowed in custom category, remaining are discarded.";
Language.MaxImportKeywordExceed = "Max '{number}' Keywords are allowed in custom category, remaining are discarded.";
Language.MaxImportURLExists = "Max '{number}' URLs are already exist.";
Language.MaxImportKeywordExists = "Max '{number}' Keywords are already exist.";
Language.InvalidUrlDiscard = "Some invalid URLs are discarded.";
Language.InvalidKeywordDiscard = "Some invalid Keywords are discarded.";
Language.ImportDomainKeyword="Import Domain/Keyword";
Language.PurgeUsers = "Purge AD Users";
Language.TestSuccess = "Connectivity/Authentication Test Success";
Language.TestFailed = "Connectivity/Authentication Test Failed";
Language.ADConnAuthSuccess = "All the AD servers were successfully connected and authenticated. Click \"Purge Now\" to start the purge activity. This may take several minutes depending on the number of users to be purged. To view the purge activity results, go to Logs & Reports -> Log Viewer -> Log Viewer, select \"Admin\".";
Language.ADConnAuthFailed = "Purge Activity could not be initialized. One or more AD Servers could not be connected/authenticated with the Appliance.";
Language.PurgeNow = "Purge Now";
Language.EndPointDetailLbl="Endpoints Details";
Language.Remote="Remote";
Language.FailoverGrpName="Failover Group Name";
Language.FailoverMailNotification="Failover Mail Notification";
Language.LocalRemoteServerHelp="<b>Select</b> the WAN port, which acts as the end-point for your tunnel.<br><b>Enter</b> IP Address or host name of the Remote end-point.<br>To specify any IP Address, enter *.";
Language.LocalRemoteConnNameHelp="<b>Select</b> the WAN port, which acts as the end-point for your tunnel.<br><b>Enter</b> IP Address or host name of the Remote end-point.<br>To specify any IP Address, enter *.<br><b>Enter</b> a unique name to identify the IPSec Connection.";
Language.ConnectionNameChkMsg="Connection Name(s) cannot be same.";
Language.EndPointChkMsg="IPSec failover group must have unique end-points";
Language.FailoverGroupOrderHelp="Order of Endpoint Details indicates the failover preference.";
Language.ResponseTimeOut="The operation will take time to complete. The status can be viewed from the Log Viewer page.";
Language.FailoverGroup="Failover Group";
Language.YouTubeEduFilter = "YouTube Education Filter";
Language.Max16PortInList = "Maximum 16 ports are allowed in port list";
Language.NotEqualNoPort = "Number of External Ports is not equal to the number of Mapped Ports.";
Language.InvalidExternalPortList = "Invalid port in external ports list";
Language.InvalidMappedPortList = "Invalid port in mapped ports list";
Language.InvalidMappedTypeSelection = "Invalid mapped port, Mapped port type is simple port";
Language.InvalidExternalPort = "Invalid external port";
Language.InvalidMappedPort = "Invalid mapped port";
Language.ExternalPortType = "External Port Type";
Language.MappedPortType = "Mapped Port Type";
Language.PortTypeListExample = "Ex : 23,80,8090,....";
Language.DialupPPP = "Dial-up (PPP)";
Language.NetworkAdaptorDHCP = "Network Adapter (DHCP)";
Language.APN = "APN";
Language.ReconnectTries = "Reconnect Tries";
Language.DHCPConnectCommand = "DHCP Connect Command";
Language.DHCPDisconnectCommand = "DHCP Disconnect Command";
Language.ShowRecommConfiguration = "Show Recommended Configuration";
Language.AutoConnect = "Auto Connect";
Language.ManualConnect = "Manual Connect";
Language.RecommendedConfigurationFor = "Recommended Configuration for ";
Language.LoadRecommendedConfiguration = "Load Recommended Configuration";
Language.ModemName = "Modem Name";
Language.VendorID = "Vendor ID";
Language.ProductID = "Product ID";
Language.SIMPINEnabled = "SIM PIN Enabled";
Language.AvailIPAssignmentMethods = "Available IP Assignment Methods";
Language.ModemPort = "Modem Port";
Language.SecondaryModemPorts = "Secondary Modem Port";
Language.NotRequired = "Not Required";
Language.RequiredButNotAvail = "Required but not available";
Language.LoadConfDefaultAssignMessage = "When both methods are supported by modem, the decision is taken by what is best suitable for your network. Network Adapter(DHCP) is preferable for achieving speed.";
Language.NoModemMsg = "No modem found. Please ensure that the modem is plugged to system.";
Language.ModemConfFindMsg = "Modem has just plugged-in, so finding the recommended configuration. Please check after a while.";
Language.SelectOrAdd = "Select/Add";
Language.WirelessModemDHCP="Wireless Modem (DHCP)";
Language.WirelessModemPPP="Wireless Modem (PPP)";
Language.DataTableControlHelp = "* Press Tab to add a new row.";
Language.QuarantinePurgeMsg = "(The quarantine mails list can be displayed for only last 7 days.)";
Language.IPSecLocalCertificateExpired=" local Certificate has expired or is not yet valid";
Language.IPSecRemoteCertificateExpired=" remote Certificate has expired or is not yet valid";
Language.L2TPCertificateExpired=" L2TP Certificate has expired or is not yet valid";
Language.RepetedPortInExternalPort = "Repeated port in external port";
Language.RepetedPortInMappedPort = "Repeated port in mapped port";
Language.MatchedApplications = "Matched Applications";
Language.WebServerHTTPPort="Web Server HTTP Port";
Language.WebServerHTTPSPort="Web Server HTTPS Port";
Language.AllowingHTTPtraffic = "Allow HTTP Traffic Also";
Language.SSLOffloading = "SSL Offloading";
Language.PublishedHTTPSport = "Published HTTPS port";
Language.ScrollDownMsg = "* Scroll down to view more Applications.";
Language.HTTPSAlert="For security reasons, the default CA certificate used in HTTPS scanning in your appliance has been replaced with a unique CA certificate. For uninterrupted secure browsing over HTTPS, you may need to re-import the same in the browser. {OEM.vrsslalertlink}";
Language.ForMoreInfo="For more information";
Language.Save2 = "Save";
Language.HTTPSCA = "HTTPS Scanning CA";
Language.CAKeyForHTTPScanning = "Certificate Authority (CA) is used in HTTPS scanning. It is recommended to update all its parameters.";
Language.MaximumIPMacMappingList="A Maximum of 256 IP-MAC Mapping is allowed.";
Language.ClientlessUsers="Clientless Users";
Language.EndDateEmpty = "End date is empty. please enter end date.";
Language.ApplianceCertAlertMsg = "It is recommended not to use the default Appliance Certificate in VPN/SSL VPN configuration.";
Language.Regenerate_CA="Regenerate Certificate Authority";
Language.uniqueheader="Duplicate Header value found";
Language.DNSServer1Required="Specify the IP Address for DNS Server 1";
Language.NotAvailable = "Not available";
Language.ConfirmReGenerateAndServiceMsg = "This will result into regeneration of all your certificates and will restart the SSL VPN service. Are you sure you want to continue?";
Language.RoundRobin="Round Robin";
Language.FirstAlive="First Alive";
Language.Random="Random";
Language.StickyIP="Sticky IP";
Language.KeywordExistsURL = "Some URLs could not be added because Keyword already exist for the provided domains.";
Language.LocalSubnetAddHelp = "The only allowed configurations for Local LAN/NATed LAN are IP Host and Network Host.";
Language.EnterPort="Enter Port";
Language.VirtualUtmTrial="Virtual UTM Trial";
Language.MoreOptions = "More Options";
Language.LblAccessDenied = "Access Denied";
Language.AuthUnautUsers = "Unauthenticated users redirection";
Language.SelectCategory = "You must select atleast one Category.";
Language.Regenerate_Cert="Regenerate Certificate";
Language.ConfirmRegenCA="Are you sure want to regenerate Certificate Authority?";
Language.ConfirmRegenCert="Are you sure want to regenerate Certificate?";
Language.PrimaryInterface = "Primary Interface";
Language.XmitHasPolicy = "Xmit hash policy";
Language.MemberInterfaceMsg = "You must select atleast two Member Interface.";
Language.RemoteSubnetAddHelp = "The only allowed configurations for Remote LAN are IP Host and Network Host.";
Language.LogoUrl="Logo URL";
Language.virtualutmalertMsg="Cyberoam Virtual UTM appliance is not able to connect with the Customer My Account server since the last {vrsyncfailcount} days. If the appliance fails to synchronize for {vrdiff} more day(s), it will be deactivated. Please &nbsp;{vrclicklink}&nbsp; to synchronize manually.";
Language.applianeNotActiveAlertMsg="All Internet traffic through the Appliance is dropped as it is not yet activated. Please log into the Console to activate it. For further details please click here.";
Language.ApplianceBehindADSL="Appliance behind ADSL";
Language.CTIPDRejection="CTIPD Rejection";
Language.CTIPDTmpRejection="CTIPD Temporary Rejection";
Language.ConfigClientLessUserGrp="You must configure a Clientless Group before adding a user.";
Language.SendEmail="Send Email";
Language.MustSelectOnePassphraseConfig="You must select atleast one passphrase configuration";
Language.ClientBundle="Client Bundle";
Language.OnScreenLink="On-screen Link";
Language.ReceivePassphraseVia="Receive Passphrase via";
Language.ReceivePassphrase="Receive Passphrase:";
Language.CentralManagementDetails="Central Management Details";
Language.GetUpdatesfrom="Get Updates from";
Language.ConfigurationUpdates="Configuration Synchronization";
Language.CentralManagementpushupdates="Central Management will push configuration changes to the Appliance";
Language.CentralManagementfetchupdates="Appliance will fetch configuration changes from Central Management";
Language.Protocoltoconnect="Connection Protocol";
Language.CentralManagementConsolePort="Central Management Console Port";
Language.ConnectionProto="Select option 'Central Management will push configuration changes to the Appliance', if the Appliance is directly connected to Internet.<br/>Select option 'Appliance will fetch configuration changes from Central Management', if the Appliance is behind NAT Device.";
Language.Simple = "Simple";
Language.TLS = "STARTTLS";
Language.CACertificate = "CA Certificate";
Language.ClientCertificate = "Client Certificate";
Language.ConformUpdateWebAdminSettings = "Updating Web Admin Settings may result in Appliance re-connection. \n Are you sure you want to update Web Admin Settings?";
Language.ConformUpdateSSLVPNSettings = "Updating SSL VPN Settings may result in Appliance re-connection. \n Are you sure you want to update SSL VPN Settings?";
Language.ConformUpdateLoginSecuritySettings = " Are you sure you want to update Login Security Settings?";
Language.ConformUpdateAdminPassComplexcitySettings = " Are you sure you want to update Administrator Password Complexity Settings?";
Language.ConformUpdateLoginDisclaimerSettings = " Are you sure you want to update Login Disclaimer Settings?";
Language.Max8RangeAllowed="You can add maximum 8 lease ranges in one dhcp server";
Language.DUID="DUID&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp";
Language.PreferredTime="Preferred Time";
Language.ValidTime="Valid Time";
Language.MultipleDUID = "You must enter unique DUID in Mapping List.";
Language.InvalidDUID = "You must enter valid value for DUID.";
Language.IP_DUID_Mapping_List="Static IP DUID Mapping";
Language.DisplaySettings="Display Settings";
Language.DisplayIPv6Obj = "Display IPv6 Configurations";
Language.ConformUpdateIPv6Settings = " Are you sure you want to update Display Settings?";
Language.CreatedDate="Created Date";
Language.LessThanEqualTo="less than equal to";
Language.GreaterThanEqualTo="greater than equal to";
Language.CellNumberPrefix = "Number Prefix";
Language.Get = "Get";
Language.Post = "Post";
Language.HTTPMethod = "Http Method";
Language.MyAccountLink = "My Account Link";
Language.IOSWEBClient="iOS Web Client";
Language.iOSWebClientSettings = "Web Client Settings ( iOS, Android and API )";
Language.iOSWebClientConfirmMessage="Are you sure you want to update Web Client Settings ( iOS and Android )?";
Language.UpdateMode = "Update Mode";
Language.validPortRange = "The port number should be between 1 - 65535";
Language.IPv4Lease="IPv4 Lease";
Language.IPv6Lease="IPv6 Lease (IPv6 / Prefix)";
Language.PrimaryDNSMust="You must provide Primary DNS.";
Language.IPDUIDList = "IP Mapping List";
Language.TrafficClass = "Traffic class";
Language.HopLimit = "Hop Limit";
Language.PayloadLength = "Payload Length";
Language.FlowLabel = "Flow Label";
Language.NextHeader = "Next Header";
Language.SLAAC="Router Advertisement";
Language.Prefix="Prefix";
Language.ManagedFlag="Managed Flag";
Language.OtherFlag= "Other Flag";
Language.LinkMTU="Link MTU";
Language.Reachable="Reachable";
Language.ReachableTime="Reachable Time";
Language.RetransTime="Retransmit Time";
Language.CurrentHopLimit="Hop Limit";
Language.AdvertiseOnLink="On-link";
Language.Autonomous="Autonomous";
Language.SLAACPrefix64Bits="Prefix /64";
Language.DefaultRouterLifetime="Default Gateway";
Language.GatewayLifetime="Gateway Life Time";
Language.AdvertisementInterval="Advertisement Interval";
Language.AdvertisementIntervalMinMax="Advertisement Interval (Min-Max)";
Language.SLAACReachableRange="(0 - 3600 Seconds)";
Language.SLAACAdvRetransTimerRange="(0 - 60 Seconds)";
Language.InfiniteByMinusOne="(Minutes, -1 for Infinite)";
Language.SLAACRouterAdvertimentMaxInfo="(4 - 1800 Seconds)";
Language.SLAACRouterAdvertimentMinInfo="(3 - 1350 Seconds)";
Language.SLAACDefaultGatewayInfo="(Between Max Advertisement Interval to 9000 Seconds)";
Language.SLAACLinkMTUInfo="(1280 to 1500 or 0)";
Language.SLAACMangeFlagInfo="(Manage IP Address from DHCPv6)";
Language.SLAACOtherFlagInfo="(Manage Other Parameters from DHCPv6)";
Language.PrefixAdvertConf="Prefix Advertisement Configuration";
Language.SLAACAdvValidLifeTime="Valid Life Time";
Language.SLAACAdvPrefLifeTime="Preferred Life Time";
Language.SLAACUpdateTitle="Edit SLAAC Setting";
Language.SLAACAddTitle="Add SLAAC Setting";
Language.SLAACMaxPrefixMessage="You can add maximum 16 prefixes per interface";
Language.SLAACIPv6Invalid="Invalid Prefix";
Language.SLAACAdvLifeTimeInvalid="Invalid value of Valid Life Time, Valid Life Time must start 120 to 178956970";
Language.SLAACAdvPrefLifeTimeInvalid="Invalid value of Valid Life Time, Valid Life Time must be greater than Preferred Life Time";
Language.SLAACLinkMTURangeMessage="Invalid value of Link MTU, Link MTU must be between 1280 to 1500";
Language.SLAACInvalidRangeMinRouterAdveInterRange="Invalid value of Min Advertisement Interval, it should be between 3 to 1350";
Language.SLAACInvalidRangeMinRouterAdveInter="Invalid value of Min Advertisement Interval, it should be between 3 to (0.75 * Max Router Advertisement Interval)";
Language.SLAACInvalidRangeMaxRouterAdveInter="Invalid value of Max Advertisement Interval, it should be between 4 to 1800";
Language.SLAACInvalidRangeMaxRouterAdveInterWithMin="Maximum Advertisement Interval should be less than Minimum Advertisement Interval";
Language.SLAACInvalidRangeDefaultGateway="Invalid value of Default Gateway Life Time, It should be between Max Router Advertisement Interval to 9000 Seconds";
Language.SLAACInvalidRetransmitTime="Invalid Retransmit Time";
Language.SLAACInvalidReachableTime="Invalid Reachable Time";
Language.SLAACDuplicatePrefix="Duplicate prefix, please verify given prefix";
Language.SLAACInvalidHopLimit="Invalid Hop Limit";
Language.LifeTime="Life Time";
Language.Seconds2="(Seconds)";
Language.IPTunnel = "IP Tunnel";
Language.TunnelName = "Tunnel Name";
Language.TunnelType6RDPrefix = "6rd Prefix";
Language.LocalEndPoint = "Local End Point";
Language.RemoteEndPoint = "Remote End Point";
Language.RemoteNetwork = "Remote Network";
Language.TTLShort = "TTL";
Language.TOS = "TOS";
Language.ValidIPv4="You must enter valid IPv4 value for ";
Language.ValidIPv6="You must enter valid IPv6 value for ";
Language.TunnelTypeNotSelected ="Please select Tunnel Type";
Language.AddRemoteNetHeader = "Add Static Unicast Route For IP Tunnel";
Language.DestinationIPReq = "You must enter value for Destination IP";
Language.DistanceReq = "You must enter value for Distance";
Language.NotValidDistance ="You must enter valid value for Distance";
Language.MaxTTLValueMSG = "TTL must be between 0 and 255";
Language.MaxTOSValueMSG = "TOS must be between 0 and 99";
Language.MaxDistanceValueMSG = "Distance must be between 0 and 255";
Language.MaxNetmaskValueMSG = "Prefix must be between 1 and 128";
Language.RouteAddForTunnel_1 = "Static Unicast Route "; 
Language.RouteAddForTunnel_2 = "is added. Do you want to add more routes for Remote Network?";
Language.RouteAddForTunnel_3 = "Do you want to add routes for Remote Network?";
Language.OtherConfigurations = "Other Configurations";
Language.LocalRemoteSame = "Local End Point and Remote End Point could not be same";
Language.IPTunnelSettings = "IP Tunnel Settings";
Language.IP4Configuration = "IPv4 Configuration";
Language.IP6Configuration = "IPv6 Configuration";
Language.IPv4 = "IPv4";
Language.IPv6 = "IPv6";
Language.DNSQueryConfiguration = "DNS Query Configuration";
Language.SameDNSValue = "You must enter different value for IPv4 DNS";
Language.SameIPv6DNSValue = "You must enter different value for IPv6 DNS";
Language.EnterValidIPv6DNSValue = "Enter Valid value for IPv6 DNS";
Language.EnterValidDNSValue = "Enter Valid value for IPv4 DNS";
Language.dns1 = "DNS 1";
Language.dns2 = "DNS 2";
Language.dns3 = "DNS 3";
Language.DNSConfigWizard = "DNS Configuration Wizard";
Language.DNSConfigurationForIPv4 = "IPv4 Configuration";
Language.DNSConfigurationForIPv6 = "IPv6 Configuration";
Language.Serverbasedrequest = "Choose server based on incoming requests record type";
Language.IPv6overIPv4 = "Choose IPv6 DNS server over IPv4";
Language.IPv4overIPv6 = "Choose IPv4 DNS server over IPv6";
Language.IPv6OriginatorAddress = "Choose IPv6 if request originator address is IPv6, else IPv4";
Language.MultipleDestIPAddress = "You must enter unique Destination IP in Mapping List";
Language.DynamicRoute = "Dynamic Route";
Language.OSPF = "OSPF";
Language.GlobalConfiguration = "Global Configuration";
Language.RouterId = "Router ID";
Language.RouterIdEX = "(e.g. 12.34.5.66)"; 
Language.DefaultMetric = "Default Metric";
Language.DefaultMetricRange = "(0 - 16777214)";
Language.ABRType = "ABR Type";
Language.RefBandwidth = "Auto cost reference bandwidth (Mbits/s)";
Language.RefBandwidthRange = "(1 - 4294967)";
Language.DefaultInfoOriginate = "Default Information Originate";
Language.Regular = "Regular";
Language.Metric = "Metric";
Language.MetricType = "Metric Type";
Language.RedistributedConnected = "Redistribute Connected";
Language.RedistributedStatic = "Redistribute Static";
Language.RedistributedRIP = "Redistribute RIP";
Language.RedistributedBGP = "Redistribute BGP";
Language.InterfaceConfiguration = "Override Interface Configuration";
Language.AddInterfaceConfiguration = "Add Interface Configuration";
Language.EditInterfaceConfiguration = "Edit Interface Configuration";
Language.CISCO = "CISCO";
Language.IBM = "IBM";
Language.externaltype1 = "External Type 1";
Language.externaltype2 = "External Type 2";
Language.OSPFEnable = "OSPF Enable";
Language.Configuration = "Configuration";
Language.Area = "Area";
Language.Areas = "Areas";
Language.Networks = "Networks";
Language.VirtualLink = "Virtual Link";
Language.DefaultMetricOutOfRange = "Default Metric must be between 0 and 16777214.";
Language.RefBWOutOfRange = "Auto cost reference bandwidth must be between 1 and 4294967.";
Language.DefaultInfoMetricOutOfRange = "Default Information Originate Metric must be between 0 and 16777214.";
Language.RedistributedConnectedMetricOutOfRange = "Redistribute Connected Metric must be between 0 and 16777214.";
Language.RedistributedStaticMetricOutOfRange = "Redistribute Static Metric must be between 0 and 16777214.";
Language.RedistributedRIPMetricOutOfRange = "Redistribute RIP Metric must be between 0 and 16777214.";
Language.RedistributedBGPMetricOutOfRange = "Redistribute BGP Metric must be between 0 and 16777214.";
Language.AreaCostOutOfRange = "Area Cost must be between 0 and 16777215."
Language.DuplicateAreaExists = "Duplicate Area exists.";
Language.DuplicateNetworkExists = "Duplicate Network exists.";
Language.OSPFAreaAdd = "Add OSPF Area";
Language.OSPFAreaEdit = "Edit OSPF Area";
Language.Normal = "Normal";
Language.Shortcut = "Shortcut";
Language.Stub = "Stub";
Language.StubNoSummary = "Stub No-Summary";
Language.NSSA = "NSSA";
Language.NSSANoSummary = "NSSA No-Summary";
Language.MD5 = "MD5";
Language.AreaCost = "Area Cost"; 
Language.AreaCostRange = "(0 - 16777215)";
Language.uniqueVirtualLink = "Duplicate Virtual Link value found";
Language.BlankVirtualLinkValueMessage = "Virtual Link value cannot be blank.";
Language.InvalidVirtualLinkValueMessage = "You must enter a valid value for Virtual Link."
Language.VirtualLinks = "Virtual Links";
Language.selectOneField = "You must select any one field.";
Language.AreaAlreadyExists = "Same Area already exists.";
Language.HelloInterval = "Hello Interval";
Language.IntervalRange = "(1 - 65535 seconds)";
Language.DeadInterval = "Dead Interval";
Language.InterfaceCost = "Interface Cost";
Language.InterfaceCostRange = "(1 - 65535)";
Language.RouterPriority = "Router Priority";
Language.RouterPriorityRange = "(0 - 255)";
Language.OSPFConfiguration = "OSPF Configuration";
Language.RetransmitInterval = "Retransmit Interval"; 
Language.RetransmitIntervalRange = "(3 - 65535 seconds)";
Language.TransmitDelay = "Transmit Delay";
Language.TransmitDelayRange = "(1 - 65535 seconds)";
Language.KeyId = "Key Id";
Language.PriorityOutOfRange = "Router Priority must be between 0 and 255."; 
Language.InterfaceCostOutOfRange = "Interface Cost must be between 1 and 65535.";
Language.TransmitDelayOutOfRange = "Transmit Delay must be between 1 and 65535.";
Language.RetransmitIntervalOutOfRange = "Retransmit Interval must be between 3 and 65535.";
Language.DeadIntervalOutOfRange = "Dead Interval must be between 1 and 65535.";
Language.HelloIntervalOutOfRange = "Hello Interval must be between 1 and 65535."
Language.KeyIdOutOfRange = "Key Id must be between 1 and 255.";
Language.OSPFNetworkAdd = "Add OSPF Network";
Language.OSPFNetworkEdit = "Edit OSPF Network";
Language.NetworkAlreadyExists = "Same Network already exists.";
Language.NeighborAlreadyExists = "Same Neighbor already exists.";
Language.DefaultValuesExist = "All fields contain default values & default values need not be applied explicitly.";
Language.DefaultValuesExist1 = "All fields contain default values & to reset to default values please delete the interface using delete option.";
Language.selectOneField1 = "You must select atleast Type or Authenication.";
Language.selectOneField2 = "You must enter value for Virtual Links or select Authentication.";
Language.selectOneField3 = "You must select Authentication.";
Language.TypeNotAllowedBackbone = "You can't configure stub/nssa to backbone.";
Language.VLNotAllowedBackbone = "Configuring Virtual Links over the backbone is not allowed.";
Language.DeleteAreaConfirm = "Are you sure you want to delete OSPF Area?";
Language.DeleteNetworkConfirm = "Are you sure you want to delete OSPF Network?";
Language.DeleteIFConfigConfirm = "Are you sure you want to delete OSPF Interface Configuration?";
Language.MaxSubnetValueMSG = "Subnet must be between 0 and 128";
Language.IPFamily = "IP Family";
Language.IPv6Example = "E.g. 2002::1,2002::db";
Language.DestIPAndGatwayBothAreSame="Destination IP and Gateway IP both are same.";
Language.ICMPv6 = "ICMPv6";
Language.ICMPICMPv6Flood="ICMP/ICMPv6 Flood";
Language.InvdSourceIPNetMask="Invalid Source IP or Netmask, You must enter valid IP and Net mask.";
Language.InvdDestIPNetMask="Invalid Destination IP or Netmask, You must enter valid IP and Net mask.";
Language.InvdSourceIPNetMaskNetwork="Invalid Source Network, You must enter valid IP and Net mask.";
Language.InvdDestIPNetMaskNetwork="Invalid Destination Network, You must enter valid IP and Net mask.";
Language.InvdSourceIPPrefix="Invalid Source IP or Prefix, You must enter valid IP and Prefix.";
Language.InvdDestIPPrefix="Invalid Destination IP or Prefix, You must enter valid IP and Prefix.";
Language.NetworkProtocol= "Network Protocol";
Language.TunnelRouteAddLimit = "Maximum Limit for Static Route of Tunnel is 15.";
Language.TOSRange =  "(0 - 99)";
Language.InVdRangeForSubnetPrefix="Subnet prefix must be between 0 and 128.";
Language.TunnelType6to4Prefix = "6to4 Prefix";
Language.LCD = "LCD";
Language.ProvideEmailAddress = "You must provide Email Address.";
Language.LiveConnsIPv4 = "Live Connection IPv4";
Language.LiveConnsIPv6 = "Live Connection IPv6";
Language.CountryCode="Default Country Code";
Language.EnterTheText="Enter the text below";
Language.SelectedCountryCode="Selected country is displayed as default option in Cell Number selection at Guest User registration page.";
Language.CAPTCHAVerification="Select this option to enable CAPTCHA code verification in Guest User registration page.";
Language.DiagConfirmIPFamily = "Which IP Family should be used to resolve this Host Name?";
Language.PingIPv6Ping = "Ping/Ping6";
Language.TunnelNameContainChar="Tunnel name must contain alphanumeric characters and underscore only. However, it should not begin with numbers or underscore.";
Language.ChkIPAddrRangeMsg1="You must enter valid IP Range."
Language.EnableIP4Configuration = "IPv4 Configuration";
Language.EnableIP6Configuration = "IPv6 Configuration";
Language.IP4AndIP6GWNotSame = "IPv4 and IPv6 gateway name could not be same";
Language.AtLeaseOneIPFamily="You must configure at lease one IP Family";
Language.configureIPFamily="You must configure IP Family";
Language.IPv6GWUpdConfMsg = "By updating gateway configuration:<br/>1. Selected gateway will become active gateway.<br/>2. All other gateways will act as backup gateway.<br/>Are you sure you want to update gateway configuration?";
Language.InterfaceType = "Interface Type";
Language.Physical = "Physical";
Language.LAG = "LAG";
Language.AddLAG = "Add LAG";
Language.PhysicalBridgeMember = "Physical (Bridge Member)";
Language.PhysicalLAGMember = "Physical (LAG Member)";
Language.AdminUser = "Administrator Users";
Language.DefApplianceCertAlertMsg="Your appliance certificate expires on&nbsp;'{vrcertexpirydate}'&nbsp;. To ensure secured access to Web Admin Console, My Account & Captive Portal, it is recommended to regenerate or replace the certificate before it expires.";
Language.DefHTTPSCertAlertMsg="CA Certificate used for scanning the HTTPS traffic expires on&nbsp;'{vrhttpscertexpirydate}'&nbsp;. To ensure secured access, it is recommended to regenerate or replace the certificate.";
Language.DefAppCertExpireAlertMsg="Certificate used for secured access to Web Admin Console, My Account and Captive Portal is expired. It is recommended to regenerate or replace the certificate.";
Language.DefHTTPSCertExpireAlertMsg="CA Certificate used for scanning the HTTPS traffic is expired. It is recommended to regenerate or replace the certificate. Currently the default certificate is being used for HTTPS scanning to ensure security.";
Language.FTPS = "FTPS";
Language.SFTP = "SFTP";
Language.SMB = "SMB";
Language.VNC = "VNC";
Language.Width = "Width";
Language.Height = "Height";
Language.InitRemoteFolder = "Init Remote Folder";
Language.AcceptClipboard = "Accept Clipboard";
Language.SendClipboard = "Send Clipboard";
Language.ViewOnly = "View Only";
Language.scrResolution = "Screen Resolution";
Language.RIP = "RIP";
Language.AdminDistance = "Administrative Distance";
Language.RIPVersion = "RIP Version";
Language.Sendv2RecBoth = "Send V2 & Recieve both";
Language.Timers = "Timers";
Language.Update = "Update";
Language.Timeout = "Timeout";
Language.Garbage = "Garbage";
Language.v1 = "V1";
Language.v2 = "V2";
Language.TimersRange = "(5 - 2147483647)";
Language.RIPDefMetricRange = "(1 - 16)";
Language.RIPMetricRange = "(0 - 16)";
Language.RIPAdminDistanceRange = "(1 - 255)";
Language.RedistributeOSPF = "Redistribute OSPF";
Language.RIPConfiguration = "RIP Configuration";
Language.Receive = "Recieve";
Language.SplitHorizon = "Split Horizon";
Language.PoisonedReverse = "Poisoned Reverse";
Language.PassiveMode = "Passive Mode";
Language.DeleteRIPIFConfigConfirm = "Are you sure you want to delete RIP Interface Configuration?";
Language.RIPDefMetricOutOfRange = "Default Metric must be between 1 and 16."; 
Language.RIPAdminDistanceOutOfRange = "Administrative Distance must be between 1 and 255."; 
Language.RIPUpdateOutOfRange = "Update must be between 5 and 2147483647."; 
Language.RIPTimeoutOutOfRange = "Timeout must be between 5 and 2147483647."; 
Language.RIPGarbageOutOfRange = "Garbage must be between 5 and 2147483647."; 
Language.RIPReDistConnMetricOutOfRange = "Redistribute Connected Metric must be between 0 and 16."; 
Language.RIPReDistStaticMetricOutOfRange = "Redistribute Static Metric must be between 0 and 16."; 
Language.RIPReDistOSPFfMetricOutOfRange = "Redistribute OSPF Metric must be between 0 and 16."; 
Language.RIPReDistBGPMetricOutOfRange = "Redistribute BGP Metric must be between 0 and 16."; 
Language.DeleteRIPNetworkConfirm = "Are you sure you want to delete RIP Network?";
Language.RIPNetworkAdd = "Add RIP Network";
Language.RIPNetworkEdit = "Edit RIP Network";
Language.RIPAllTimers = "You must enter value for Timers."; 
Language.BGP = "BGP";
Language.LocalAs = "Local AS";
Language.LocalAsRange = "(1 - 4294967295)";
Language.LocalAsUpdateOutOfRange = "Local As must be between 1 and 4294967295";
Language.Neighbors = "Neighbors";
Language.Neighbor = "Neighbor";
Language.RemoteAs = "Remote AS";
Language.BGPNetworkAdd = "Add BGP Network";
Language.BGPNetworkEdit = "Edit BGP Network";
Language.BGPNeighborAdd = "Add Neighbor";
Language.BGPNeighborEdit = "Edit Neighbor";
Language.DeleteBGPIFConfigConfirm = "Are you sure you want to delete BGP Neighbor?";
Language.DeleteBGPNetworkConfirm = "Are you sure you want to delete BGP Network?";
Language.RemoteAsOutOfRange = "Remote As must be between 1 and 4294967295.";
Language.LocalAsRequired = "Prior to configuring Neighbors / Networks, it is mandatory to configure - Local As.";
Language.BGPConfigurationUpdCfm = "On updating the configuration of - Local As, all the existing configurations  of Neighbors / Network will be removed.<br><br>Do you want to continue?";
Language.HABridgePortPeerTooltip = "This Port will be made as Administration Port on the peer appliance when HA gets disabled.";
Language.DataTransferExhausted = "Data Transfer Exhausted";
Language.IPv4Address = "IPv4 Address";
Language.IPv6Address = "IPv6 Address";
Language.passwordlength = "Password Length";
Language.passwordcomplexity = "Password Complexity";
Language.Numeric = "Numeric Password";
Language.Alphabetic = "Alphabetic Password";
Language.NumericAlphabetic = "Alphanumeric Password";
Language.MixCharacters = "Alphanumeric with Special Character Password";
Language.PasswordLengthMoreThen = "Password length should be between 3 to 50 Characters.";
Language.LAGContainChar="Interface Name must contain alphanumeric characters and underscore only. However, it should not begin with numbers or underscore.";
Language.EmailListHelp="Use a comma to separate multiple Email Addresses.";
Language.spaceNotallowed = " cannot contain whitespace.";
Language.ErrorRouteMsg1 = "Some of the Unicast Routes could not be created due to following reasons:";
Language.SourceIPv4Addr="Source IPv4 Address";
Language.MulticastIPv4Addr="Multicast IPv4 Address";
Language.NotValidIPv4 ="Please enter valid IPv4 Address/Domain.";
Language.DomainIPv4Address = "Domain Name/IPv4 Address ";
Language.CreatWebServer = "You can't add Exception, First you have to create Web Server.";
Language.MaxTTL4in6ValueMSG = "TTL must be between 1 and 255";
Language.DHCPv6Server="DHCPv6 Server";
Language.SLAACService="Router Advertisement Service";
Language.LIPAndRIPNotSame = "Local IP and Remote IP can not be same.";
Language.MaxPrefixValueMSG = "Prefix must be between 1 and 32";
Language.LocalEndPointHelp = "Enter IP Address of the Local End Point, preferably IP Address of interface which will act as Local End of the Tunnel. <br />IP Address should be IPv4 Address for 6to4, 6in4 and 6rd Tunnels. <br />IP Address should be IPv6 Address for 4in6 Tunnel.";
Language.RemoteEndPointHelp = "Enter IP Address of the Remote End Point, preferably IP Address of interface which will act as Remote End of the Tunnel.<br />IP Address should be IPv4 Address for 6in4 Tunnel.<br />IP Address should be IPv6 Address for 4in6 Tunnel.";
Language.Prefix6rdHelp = "Enter IPv6 Address of the 6rd Prefix. Example: 2001:db8::/32 or 2001::/16<br />Prefix Length must be between 1 and 32.";
Language.DHCPRelayAlreadyConfiguredIPv4 = "You cannot configure both DHCP Relay and Server for IPv4.";
Language.L2TPAndPPTPConfigurationMsg="If the option \"Allow leasing IP Address from Radius server\" is enabled and if user is authenticated with Radius Server,<br/>the configured IP Address (static and the IP Address range) is overridden with the IP Address provided by the Radius Server.<br/><br/>If no IP Addresses are configured on the Radius Server, the Static IP Address configured for the user will be assigned, <br/>else IP Address will be leased from configured IP Address Range.";  
Language.IPv4Gateway="IPv4 Gateway";
Language.IPv6Gateway="IPv6 Gateway";
Language.invalid_address={};
Language.invalid_address[500]="You must enter valid IP for ";
Language.invalid_address[501]="You cannot enter unspecified IP for ";
Language.invalid_address[502]="You cannot enter multicast IP for ";
Language.invalid_address[503]="You cannot enter loopback IP for ";
Language.invalid_address[504]="You cannot enter link-local IP for ";
Language.invalid_address[505]="You cannot enter broadcast IP for ";
Language.invalid_address[506]="You cannot enter reserved IP for ";
Language.invalid_address[507]="You cannot enter network broadcast IP for ";
Language.invalid_address[508]="You cannot enter network IP for ";
Language.invalid_address[509]="You cannot enter IPv4 Mapped IP for ";
Language.SameValidityDate="\"Valid From\" date must not be same as \"Valid Upto\" date.";
Language.ICMPv6Type="ICMPv6 Type";
Language.ICMPv6Code="ICMPv6 Code";
Language.IncorrectPassword = "Incorrect Password.";
Language.PeerAdminIPNotInSubnetRanage="Peer administrator IP is not within selected Peer Administration Port Subnet Range.";
Language.PeerHAIPNotInSubnetRanage=" Peer HA link IP is not within selected  Peer HA link Port Subnet Range.";
Language.IPv4UnicastRoute="IPv4 Unicast Route";
Language.IPv6UnicastRoute="IPv6 Unicast Route";
Language.IPv4SourceRoute="IPv4 Source Route";
Language.IPv6SourceRoute="IPv6 Source Route";
Language.PreferredTimeGreaterThanValid = "Preferred Time cannot be greater than Valid Time.";
Language.UserAccounting = "Exclude traffic from data accounting for selected user(s)";
Language.UserAccountingManage = "Bypass User Accounting";
Language.OBSpamDetected = "Mail detected as OUTBOUND SPAM";
Language.OBProSpamDetected = "Mail detected as OUTBOUND PROBABLE SPAM";
Language.TestMail = "Test Mail";
Language.Body = "Body";
Language.SendTestMail = "Send Test Mail";
Language.NotificationMailSubject = "Test Mail";
Language.ValideCertiReq = "Validate Server Certificate";
Language.loginCaptionValidation = "You cannot enter single quote( ' ) value for ";
Language.IPv6List = "IPv6 Entity Configurations List";
Language.Entity = "Entity";
Language.TotalRecords = "Total Records";
Language.IPv6EnableMsg = "You must remove all IPv6 Configurations to disable IPv6 Display Settings.";
Language.CertificateEncryption = "Certificate Encryption";
Language.PerUserCertificateEncryption = "Per User Certificate Encryption";
Language.UseEncryptedCerificateFor = "Use encrypted certificate for ";
Language.IntervalRangeLabel = "(5 - 65535 seconds)";
Language.TimeOutRangeLabel = "(1 - 10 seconds)";
Language.RetriesRangeLabel = "(1 - 10)";
Language.HTTPSCertExpired = "The Certificate has either expired, or is not yet valid.";
Language.InvalidCertificate = "Your Certificate has expired or is now invalid and so the SMTPS Scanning is using Cyberoam Default Certificate ";
Language.InvalidCertificateDefault = "Your Certificate has expired or is now invalid and so the {module} Scanning is using Cyberoam Default Certificate ";
Language.InvalidIPRange = "Range can have maximum of 255 IP Addresses";
Language.InvalidAdminLogoutZero = "Logout Admin Session Inactivity time should be between 1-120 minutes";
Language.Time1To120Minutes = "(1-120 Minutes)";
Language.AVMailNotifySenderToolTip = "The sender will receive the notification only if the Receiver Action is configured as Don&apos;t Deliver.";
Language.MTURangeForIPv6="(1280 - 1500)";
Language.MTUValueForIPv6="MTU value should be between 1280 and 1500";
Language.IPSecNotUpdated="This IPSec VPN connection is a member of the Failover Group, hence you cannot select Manual policy ,cannot configure its Remote Endpoint as * (Any) and cannot change its connection type to Remote Access.";
Language.CountrySelection="You must select Country Code";
Language.ViewDetail="View Detail";
Language.LeaseDetail="Lease Detail";
Language.FirmwareBuild = "Firmware Build";
Language.UserIPv4= "(IPv4 Address)";
Language.V6DistanceOutOfRange = "Distance must be between 1 and 255.";
Language.EnterValidValue = "Please enter valid value";
Language.ActiveSince="Valid From";
Language.ExpiryPeriod="Expiry Period";
Language.CreateDate="Create Date";
Language.Multiple="Multiple";
Language.Print="Print";
Language.GuestRegiSetting="Guest User Registration Settings";
Language.GuestGenaralSetting="Guest User General Settings";
Language.DisclaimerToolTip="This disclaimer message will be printed below every user's login credentials. <br/> It can be used by the organization to inform the user about the legal liabilities and charges, if any, while using the Internet service.";
Language.DefaultUsernameNote="If Guest Username checkbox option is not selected, by default, <br/>the new user name will be generated with the value specified in Username Prefix.";
Language.AutoGenerated="Auto-Generated";
Language.ValidityStart="Validity Start";
Language.Immediate="Immediately";
Language.AfterFirstLogin="After First Login";
Language.NumberOfUsers = "Number of Users";
Language.DisclaimerMessageLength="Disclaimer cannot be greater than 500 characters.";
Language.MaxGuestUser="You cannot add more than 100 Guest Users together.";
Language.GuestUserManagement="Guest Users Management";
Language.OtherGuestUserSettings="Other Guest User Settings";
Language.MustNumeric="You must enter numeric value for ";
Language.Disclaimer="Disclaimer";
Language.ConnectionSecurity="Connection Security";
Language.StartTLS="STARTTLS";
Language.SSLTLS="SSL/TLS";
Language.LAGXmitHashPolicyToolTip = "Layer2 - Based on Mac Address<br />Layer2+3 - Based on MAC Address and IP Address<br />Layer3+4 - Based on IP Address and Port";
Language.OSPFUpdateConform = "OSPF process will be reset as router-id is changed.";
Language.ConfirmSpamAction = "Confirm Spam Action";
Language.ProbableSpamAction = "Probable Spam Action";
Language.ResetAccounting = "Are you sure you want to Reset User Accounting?";
Language.Advance_Setting_IPv6_MSG = "(QoS, Routing Policy, Log Traffic)";
Language.MustConfigureGeneralSetting="Guest Users cannot be added. Guest User General Settings are not configured.";
Language.CertificateExpiredMsg="Certificate has expired or is not yet valid";
Language.SelectCertificate = "Select Certificate";
Language.SelectedCertificateExpired = "Selected Certificate has been expired.";
Language.AVMailNotifyAdminToolTip = "Action to Notify Administrator will be applicable only if Connection Security mode is set to None in Mail Server Settings.";
Language.CCCManagmentAVIPServerLabel = "Getting AV, IPS, and Web categorization update only";
Language.CCCApplianceManagementLabel = "Appliance Management";
Language.SyslogNameValidation = "You cannot enter \\  \"  |  ,  \' value for Name";
Language.CertificateExpired="'{certificatename}' Certificate has expired or is not yet valid";
Language.HBICSecure="Secure Communication";
Language.AddrEmailMaxLimitExceed = "Maximum 10 Email Addresses are allowed.";
Language.DHCPRelayMaxIPExceed = "Maximum '{number}' server can be configured.";
Language.DHCPRelayValidIP="You must enter valid IP Address.";
Language.EnterDHCPRelayName="Name";
Language.NeighborIPv4Cache="IPv4 Neighbor Cache";
Language.NeighborIPv6Cache="IPv6 Neighbor Cache";
Language.ARPNDPMenu = "ARP - NDP";
Language.SelectIPv4OrIPv6OrDHCP="Either enter at least one IP Address (IPv4 / IPv6), or enable DHCP.";
Language.Flush="Flush";
Language.IPv4Association="IPv4 Association";
Language.IPv6Association="IPv6 Association";
Language.AssociateIP = "Associate IP";
Language.PreservedCaptivePortal = "Preserve captive portal after login";
Language.PreferredIpNetmask="Preferred IP";
Language.IdleTimeout="Idle Timeout";
Language.DefaultMinute="Minute ( 1 - 60 )";
Language.ScheduleTimeForAutoStart="Schedule Time For Reconnect";
Language.IdleTimeoutMessage="Idle Timeout should be between 1 to 60";
Language.ConnectNow="Connect Now";
Language.DisconnectNow="Disconnect Now";
Language.Deactive = "Deactive";
Language.PartiallyConnected = "Partially Connected";
Language.ConnectionDetail = "Connection Detail";
Language.Detail = "Detail";
Language.NeighbourFlushConfirm = "Are you sure you want to flush Neighbor cache?";
Language.connectPPPOEConfirmmsg = "Are you sure you want to connect PPPoE?";
Language.disconnectPPPOEConfirmmsg = "Are you sure you want to disconnect PPPoE?";
Language.ExternalAuthentication = "External Authentication";
Language.AddressMoreThenLimit = "You can not enter more then 8 Address.";
Language.MaxTTL4in6ValueDNS = "TTL must be between 1 and 604800";
Language.ChkWeightForDNS = "&nbsp;Weight must be between 1 - 255";
Language.ApplicableOnWAN = "Publish on WAN";
Language.Routes = "Routes";
Language.BorderRouters = "Border Routers";
Language.Database = "Database";
Language.Platform = "Platform";
Language.Target = "Target";
Language.IpsFilterRuleDelConfirm = "Are you sure you want to delete the selected Ips Policy rule(s)?";
Language.RecommendedActionForIps = "Recommended Action";
Language.AVIPSSig="AV & IPS Signature Updates";
Language.Override = "Use Gateway Specific Default NAT Policy";
Language.OverrideNATforGateway= "Override default NAT policy for specific Gateway";
Language.DefaultGatewayPolicy="Default Gateway NAT Policy";
Language.NoGatewayFound="No Gateway Found";
Language.OverridenGatewayPolicy="Overriden Gateway NAT Policy";
Language.GatewaySpecificNAT = "Gateway specific Default NAT Policy";
Language.OverridenNAT = "Overriden NAT Policy";
Language.DHCPRelayAlreadyConfiguredIPv6 = "You cannot configure both DHCP Relay and Server for IPv6.";
Language.DHCPServerAlreadyConfiguredIPv6 = "You cannot configure both DHCP Relay and Server for IPv6. To configure IPv6 DHCP Relay, remove all the IPv6 DHCP servers.";
Language.InterFaceGateWayNetwokMsgFor="Interface IP & Gateway IP Address must be in same network for ";
Language.ListOfSig = "List of Matching Signature";
Language.HotFixesUsageStatistics = "Over-the-air Hotfix and Product Improvement Program";
Language.AcceptHotFixes = "Allow Over-the-air Hotfix";
Language.SendUsageStatistics = "Participate in the Product Improvement Program";
Language.ScrollDownMsgSig = "* Scroll down to view more Signature.";
Language.IpsFilterSettings = "Signature Filter Criteria";
Language.RuleType = "Rule Type";
Language.IPSDefaultSignature = "Default Signature";
Language.DefaultNATPolicy= "Default NAT Policy";
Language.DefaultNATPolicyINFW="This policy will be used as default policy when Gateway Specific NAT is configured in firewall rule page";
Language.InvalidNetmaskFor = "You must enter valid Netmask for ";
Language.RunningConf = "Routing Information";
Language.ClickhereforNAT="Click here if you want to override Gateway Specific NAT Policy";
Language.StaticNAT="Static NAT Policy";
Language.EnableFullCustomization="Use Custom HTML Template";
Language.PageHTMLText="HTML Text";
Language.FullCustomization="Custom HTML Template";
Language.AndroidWebClient="Android Web Client";
Language.SelectTemplate = "Select Template";
Language.IPSSettings = "Signature Criteria";
Language.selIndividualSig = "Select Individual Signature";
Language.SelectOneSigMessage = "You must select at least one Signature.";
Language.HostEntryType = "Entry Type";
Language.NATPolicy="NAT Policy";
Language.SpamRuleIPBelongForToolTip = "From IP Belongs To ";
Language.SpamRuleIPBlackListByForToolTip = "Sender IP Address Black Listed By ";
Language.SpamRuleMsgGreaterThanForToolTip = "Message size is greater than ";
Language.SpamRuleMsgLessThanForToolTip = "Message size is less than ";
Language.SpamRuleMessageHeaderForToolTip = "Message Header ";
Language.SpamRuleForToolTip = "Spam Rule";
Language.ConfigureCategory = "Configure Category";
Language.ExternalURLDB = "External URL Database";
Language.ExternalURLLabel = "URL (HTTP or FTP)";
Language.ExterURLDBHelp = "URL from where Appliance fetches list of custom URLs";
Language.AtLeastOneURL = "You must enter at least one URL.";
Language.NotvalidURL="You must enter valid URL.";
Language.MustSelectValidNetmask = "You must select valid Netmask.";
Language.vrInvalidDomainNameForDNSHost=" can contain only alphanumeric characters, '-' and '.'";
Language.ChangePasswordQuries="Change Password feature is not applicable. Please contact your network administrator for authentication related queries.";
Language.Unplugged = "Unplugged";
Language.HAPeerInterfaceSame="Peer HA Link IP & Interface IP Address must be in same network.";
Language.HAPeerAdminInterfaceSame="Peer Administration IP & Interface IP Address must be in same network.";
Language.ImportOU="If you import OU, OU will also be imported as a Group in the appliance.";
Language.IPSecUsers="IPSec Users";
Language.L2TPUsers="L2TP Users";
Language.PPTPUsers="PPTP Users";
Language.SSLVPNUsers="SSL VPN Users";
Language.SSOVPN="Single Sign On For VPN Users";
Language.EnableSSO="Enable Single Sign On For";
Language.ShowEncryptPass="Show Encrypted Password";
Language.EncryptedPassword="Encrypted Password";
Language.NTLMHTTPRedirect = "HTTP challenge redirect on Intranet Zone";
Language.TmpReject = "Tmp Reject";
Language.GeneralAuthClient="General Authentication Client";
Language.PIM = "PIM-SM";
Language.EnablePIM = "Enable PIM";
Language.StaticRPIP = "Static RP IP";
Language.CandidateRP = "Candidate RP";
Language.CandidateRPPriority = "Candidate RP Priority";
Language.PIMInterface = "PIM Enabled Interface";
Language.CandidateRPPriorityRange = "Candidate RP Priority should be between 1 and 255";
Language.PIMDuplicateEntry = "Duplicate entry not allowed for Static RP IP";
Language.MulRouting = "MultiCasting Routing Table";
Language.RPSet = "RP SET";
Language.RadiusClientIP="Radius Client IPv4";
Language.SharedSecret="Shared Secret";
Language.SSOUsingRadius="SSO using radius accounting request";
Language.VPNSSOConfMsg="Are you sure you want to configure SSO-based authentication for <IPSec/L2TP/PPTP/SSL> VPN users?";
Language.FWSSOUsingRadiusConfirmMessage="Are you sure you want to use RADIUS Accounting messages for RADIUS SSO Authentication?";
Language.BackupPrefix = "Backup Prefix";
Language.FTPPath = "FTP Path";
Language.XMLParseDate = "XML Parse Data";
Language.DownloadXMLParseDate = "Do you want to download XML Parse Data?";
Language.APIInterface = "API Explorer";
Language.RequestXmlString = "Request XML String";
Language.SelectAttachmentFile = "Attachment 1";
Language.SelectsecondattachmentFile = "Attachment 2";
Language.XMLContentUPloadandParse = "Parse and Apply";
Language.Selective = "Export selective configuration";
Language.ExportDendentEntity = "Include dependent entity";
Language.FTPPathNotStartWith="FTP Path cannot start with '\\' or '/'";
Language.MulticastRouting = "You cannot configure both PIM and Multicast Forwarding concurrently. To configure PIM, disable Multicast Forwarding.";
Language.PIMEnabled = "You cannot configure both Multicast Forwarding and PIM concurrently. To configure Multicast Forwarding, disable PIM.";
Language.WANCanNotBeTwice="You can set only one zone as a WAN.";
Language.ImportFile="Import File";
Language.ImportType="Import Type";
Language.ImportwithExistingUser="Preserve existing configuration";
Language.ImportwithFactoryReset="Overwrite existing configuration";
Language.ExporFulltConfig = "Export full configuration";
Language.SelectiveEntity = "Selective entity";
Language.L2TPVPN = "L2TP VPN";
Language.IPSecVPN = "IPSec VPN";
Language.PPTPVPN = "PPTP VPN";
Language.SSLVPN = "SSL VPN";
Language.RadiusSSO = "Radius SSO";
Language.InterfaceTable = "Interface Table";
Language.DebugPim = "Unable to display debug information as PIM daemon is not running.";
Language.PIMInterfaceMsg = "You must select atleast one PIM Enabled Interface.";
Language.StaticRPIPDesc="Static rendezvous point IP address for all the multicast groups.";
Language.CandidateRPDesc="Allow PIM Router to participate in RP election process.";
Language.CandidateRPPriorityDesc="Priority of PIM Router in RP election process.";
Language.PIMEnabledInterfaceDesc="List of interface(s) on which PIM service will be enabled.";
Language.UpdateNow = "Update Now";
Language.AutoUpdatelbl = "Auto Update";
Language.CommunicationDetails = "Communication Details";
Language.SignatureDistribution = "Signature Distribution";
Language.SignatureDistributionPort = "Signature Distribution Port";
Language.SynchronizationMode = "Synchronization Mode";
Language.SelectCCCFunctionMode = "Please select at least one functional mode";
Language.RadiusAccounting="Radius SSO";
Language.Export_selective_configuration = "Please select selective entity";
Language.DownloadExportConf = "Are you sure you want to download export configuration file?";
Language.LogoutAlert = "Logout Notification";
Language.SSMTP = "SMTPS";
Language.SSMTPConf  = "SMTPS Configuration";
Language.SSMTPCA ="SMTPS Scanning CA";
Language.ShowSharedSecret = "Show Shared Secret";
Language.MaxIPListLimitMsg = "Maximum 1000 IP Addresses are allowed in IP List.";
Language.MaxMACListLimitMsg = "Maximum 1000 MAC Addresses are allowed in MAC List.";
Language.CISCOIPDesc="This IP Address will be leased to user for CISCO access. ";
Language.DisconnectTunnel="Disconnect when tunnel is Idle";
Language.IdelSession="Idle session time interval ";
Language.ExportConnection="Export Connection";
Language.HTTPRuleForToolTip = "HTTP Rule";
Language.WifiSSO="WiFi SSO";
Language.BackupPrifixNameilligalCharMsg="Backup Prefix Name cannot contain '/', '\\', ':', '*', '?', '\"', '<', '>', '|' ";
Language.APIResponse="API Response";
Language.ICAP = "ICAP";
Language.ICAPServer = "ICAP Server";
Language.ICAPServerUpdateTitle = "Edit ICAP Server";
Language.ICAPServerDelMsg = "Are you sure you want to delete ICAP Server?";
Language.ICAPServerAddTitle = "Add ICAP Server";
Language.PolicyAddTitle = "Add ICAP Policy";
Language.PolicyUpdateTitle = "Edit ICAP Policy";
Language.PolicyDelMsg = "Are you sure you want to delete Policy?";
Language.ContentLimit = "Content Limit";
Language.ReqServer = "Request Server";
Language.ResServer = "Response Server";
Language.ReqServerMsg = "Please select request server";
Language.ResServerMsg = "Please select response server";
Language.ReqModifications = "Request Modifications";
Language.ResModifications = "Response Modifications";
Language.StreamByPass = "Streaming Media Bypass";
Language.OnlyPost = "DLP Mode";
Language.ByPassError = "Bypass Error";
Language.SelServer = "Select Server";
Language.SelMessage = "Please select atleast any one ICAP server";
Language.MaxConnRangeLbl = "({startmaxconn}-{endmaxconn})";
Language.MaxConnMessage = "Value for maximum connections must be between {startmaxconn} and {endmaxconn}";
Language.CLKB = "(0-51200 KB,Enter 0 for default 25600 KB)";
Language.GenralRangeLimitMsg="{name} should be between {start} and {end}";
Language.BandwidthMaxlimit="Bandwidth maximum limit";
Language.AllocationBehavior="Allocation Behavior";
Language.DefaultPolicy="Default Policy";
Language.Guaranteed="Guaranteed";
Language.Between_1_10240000_KB="(1-10240000 KB)";
Language.Burstable="Burstable";
Language.Guarantee="Guarantee";
Language.Enforced="Enforced";
Language.Lenient="Lenient";
Language.ShowTotalGuaranteedBW = "Show Bandwidth Usage";
Language.QoSSettings="QoS Settings";
Language.QoSSettingBrustMsg="Burstable should less than Guaranteed.";
Language.PasswordEncryption="Password Encryption";
Language.GeneratePassword=" Get Encrypted Password";
Language.APIConfiguration = "The configuration, as defined in the XML string will be applied to the Appliance. Do you want to proceed?";
Language.ConcurrentUsers = "Concurrent Users";
Language.IntraSSIDTraffic="Intra SSID Traffic";
Language.AddBridge="Add Bridge";
Language.APIClient = "API";
Language.APIRequest="API Request";
Language.FromandToIPNotSame = "\"From IP\" and \"To IP\" must not be same.";
Language.Reorder = "Reorder";
Language.ReOrderGroup = "Reorder Groups";
Language.ActivationInstruction="Appliance gets activated automatically. If it is not activated automatically check configuration from AWS Management Console and then click the Activate button given below OR contact support at {OEM.WC_SUPPORT_MAILID}.";
Language.ActivateAppliance="Activate Appliance";
Language.RegisterAppliance="Register Appliance";
Language.PleaseRegisterAppliane="Please register the below appliance key at ";
Language.PleaseRegisterAppliane="Appliance is not registered. Please register appliance at <a href={OEM.customer_url}  target='_blank' > {OEM.customer_url} </a> with below given appliance key:";
Language.AlreadyRegistered="If you have already registered appliance, click Synchronize.";
Language.MicroApp = "Enable Micro App Discovery";
Language.Max16IPv4Address="You can not enter more than 16 IPv4 Addresses.";
Language.Max16IPv6Address="You can not enter more than 16 IPv6 Addresses.";
Language.ServerTag = "Server Tag";
Language.XInfo = "X-Info";
Language.NoChange = "No Change";
Language.HeaderModified = "Header Modified";
Language.BodyModified = "Body Modified";
Language.FourXError = "4xx_Error";
Language.FiveXError = "5xx_error";
Language.Request = "Request";
Language.Response = "Response";
Language.PeerAdminIPv6="Peer Administration IPv6";
Language.StartLeaseIPReqandEndLeaseIP="Start Lease IP and End Lease IP required.";
Language.LeaseIPorMacList="You must enter Lease IP Range or IP Mac Mapping List.";
Language.LeaseIPorDUIDList="You must enter Lease IP Range or IP DUID Mapping List.";
Language.NatPolicy = "NAT ";
Language.ContentLimitMsg = "Content limit cannot be greater than 51200";
Language.APIconfiguration="API Configuration";
Language.APIconfNotEnable="You need to enable the API Configuration.";
Language.MaximumTenIPAPIConfig="You are not allowed to enter more than 10 IP Address.";
Language.AgentIPAddress="Requester IP Address" ;
Language.Rule="Rule";
Language.APIRequestFail="API request failed.";
Language.APIIPAdressNotAllowed="API operations are not allowed from the requester IP address.";
Language.ValidAPIConfiguration ="You must enable API Configuration.";
Language.PIMConf = "PIM-SM Configuration";
Language.RPSettings = "RP Settings";
Language.StaticRP = "Static RP";
Language.CandidateRPIP = "Candidate RP IP";
Language.RPIP = "RP IP";
Language.MultGrpList = "Multicast Group List";
Language.Timer = "Timer";
Language.CandidatePriorityLbl = "(1-255)";
Language.GrpPrefixTitle = "Enter Group IP, Network or * for any Group";
Language.TimerRange = "(30-180)";
Language.TimerRangeMsg = "Timer should be between 30 and 180";
Language.PIMEnblInterfaceMsg = "Atleast single interface is required to start PIM.";
Language.PIMMulticastValidIP = "Invalid multicast group list IP as '{ipaddress}' is a part of reserved multicast address list used for different routing protocols";
Language.DataTblLimit = "Maximum 8 RP IPs are allowed";
Language.MaxGrpAddressMsg = " Maximum 8 Multicast group address are allowed for single RP IP.";
Language.RPIPMsg = "Please enter different RP IP, same IP is not allowed.";
Language.RPIPNotNullMsg = "Atleast single RP IP is required for static RP configuration";
Language.MulticastNotNullMsg = "Please enter valid multicast group address or enter * to allow all group addresses";
Language.MulticastIPMsg = "Same multicast IP with same netmask is not allowed for more than once, Please provide a different group address";
Language.MulticastMsg = "You cannot enter multicast IP with '*' more than once.";
Language.StaticToolTip = "Add a unicast IP Address for static RP.<br>Add comma separated multicast Group Addresses or Networks for Group IP Address that will be served by a given RP.<br> An RP supports a maximum of 8 RP IP Addresses and 8 Group IP Addresses per RP.<br>Use * in Group IP Addresses to use it as default RP";
Language.DynamicToolTip = "Add comma separated multicast Group Addresses or Networks for Group IP Address which will be served by this router when it becomes a RP.<br>A maximum 8 multicast Group IP Addresses / Networks are allowed.<br>Use * in Group IP Address to allow this RP to serve all the groups";
Language.APIXMLParsingValidationFail = "Only LiveUserLogin and LiveUserLogout XML Tags are allowed.";
Language.IdelTimeRange = "Seconds (Between 120-999)";
Language.IdelSessionTimeRange = "Idle session time interval range must be between 120 and 999.";
Language.CandidateRPToolTip = "Select interface which will be used as a RP IP when this router becomes a RP.";
Language.BackupFTPPathIllegalCharMsg="Backup FTP path cannot contain ':', '*', '?', '\"', '<', '>', '|' ";
Language.ReviewAmazonApplainceForAccess="IP address to this Interface is assigned by DHCP.  Log on to AWS Management Console and check the assigned IP address.";
Language.EnableAccounting = "Enable Accounting";		
Language.AccountingPort = "Accounting Port";
Language.RadiusClientIPv4Msg="You must enter valid IPv4 for Radius Client IP.";
Language.HAPeerAdminInterfaceSameForIPv6="Peer Administration IPv6 & Interface IP Address must be in same network.";
Language.LAGBridgeMember="LAG (Bridge Member)";
Language.ManualPolicyValidation = "Manual Keying method is configured in the policy you have selected. Select a policy which is configured for Automatic Keying method.";
Language.Netflow="Netflow";
Language.NetflowServer="Netflow Server IP/Domain";
Language.NetflowPort="Netflow Server Port";
Language.NetflowConfiguration="Netflow Configuration";
Language.Max5NetServer="You can add maximum 5 Netflow Server.";
Language.TAPMode= " (TAP)";
Language.ResetCiscoVPNMsg = "Are you sure you want to reset Cisco VPN client configuration?";
Language.SMTPActionRules = "SMTP/S";
Language.WirelessProtection = "Wireless Protection";
Language.WirelessProtectionCaps = "WIRELESS PROTECTION";
Language.WirelessNetworks = "Wireless Networks";
Language.Grouping="Grouping";
Language.WirelessMeshNetworks = "Mesh Networks";
Language.WirelessMeshNetworksRole = "Mesh Network Role";
Language.TimeoutInMin = "Timeout (in minutes)";
Language.EnableWirelessProtection = "Enable Wireless Protection";
Language.BridgetoVLANid= "Bridge to VLAN id";
Language.ClientVLANid= "Client VLAN id";
Language.FrequencyBand= "Frequency Band";
Language.ClientIsolation= "Client Isolation";
Language.HideSSID="Hide SSID";
Language.WPSeetingdisableConfirmUpdate = "The configuration change will be applicable only when Wireless Protection is enabled. Are you sure you want to save the configuration?";
Language.WPSeetingConfUpd = "Are you sure want to update Global Settings Configuration?";
Language.WPNetworkContainChar="Wireless Network name must contain alphanumeric characters and underscore only. However, it should not begin with numbers or underscore.";
Language.ActiveInactiveAccessPoint="Active/Inactive Access Point";
Language.PendingAccessPoint="Pending Access Point";
Language.Group="Group";
Language.Label="Label";
Language.SelectScanTime="Select Scan-Time";
Language.APVLANID="AP VLAN ID";
Language.WPAccessPointUpdatePageTitle = "Edit Access Point";
Language.WPAccessPointAcceptPageTitle = "Accept Access Point";
Language.MeshID="Mesh-ID";
Language.AddMeshNetwork="Add Mesh Network";
Language.EditMeshNetwork="Edit Mesh Network";
Language.ValidForTimeout="You must enter a valid value for Timeout (in minutes)";
Language.IPorLast = "IP/Last Seen";
Language.AccessPointExists = "Access Point already exists";
Language.MeshExists = "Mesh already exists";
Language.signal="Signal";
Language.lasttxrate="Last-TX Rate";
Language.Frequency="Frequency";
Language.APReq = "You must select the Access Point.";
Language.ConnectionTime="Connection Time";
Language.MaxLimitForWP="Maximum 8 Wireless Networks are allowed.";
Language.HTMLTemplate = "You must enter value for HTML Template.";
Language.CPCustomizationHELPPoint1="For customization to work properly, it is compulsory to have one &lt;div&gt; element with id '__loginbox' in html text. i.e &lt;div id=' __loginbox'&gt;.";
Language.CPCustomizationHELPPoint2="System will render necessary user input elements in above mention div. You can customize those elements using CSS and JavaScript.";
Language.CPCustomizationHELPPoint3="While seeing preview it may be the case that you may not find it completely as per the html due to JavaScript not executing.";
Language.IPv4ParentProxy="IPv4 Parent Proxy";
Language.IPv6ParentProxy="IPv6 Parent Proxy";
Language.DomainIPv6Address = "Domain Name/IPv6 Address";
Language.IPv6RBLGroup="RBL(IPv6)";
Language.DuplicateEntity="{entity} already exists.";
Language.VLANtagging = "VLAN Tagging";
Language.AllowedZone = "Allowed Zone";
Language.CheckValidDomainIPv6Msg = "You must enter valid Domain/IPv6 Address.";
Language.DHCPOnly='DHCP Only';
Language.StateLess='Stateless';
Language.DHCPRapidCommit='DHCP Rapid Commit';
Language.acceptotherconfig='Accept Other Configuration from DHCP';
Language.dadattempts='DAD Attempts';
Language.RAServerAddress='Allowed RA Servers';
Language.DADRange="(0 - 8)";
Language.DADValueForIPv6='DAD value should be between 0 and 8';
Language.LeaseMode="Lease Mode";
Language.LeaseIPv4Only="IPv4 only";
Language.LeaseIPvBoth="IPv4 and IPv6 both";
Language.TACACSPlusServer = "TACACS+ Server";
Language.DNSIPv4="IPv4 DNS";
Language.DNSIPv6="IPv6 DNS";
Language.WINSIPv4="IPv4 WINS";
Language.WINSIPv6="IPv6 WINS";
Language.Primary="Primary";
Language.Secondary="Secondary";
Language.ClientConfigurationforWindows="Client Configuration for Windows - ";
Language.ClientConfigurationforMACTunnelblick="Client Configuration for MAC Tunnelblick - ";
Language.Installer="Installer";
Language.Channel24GHz = "Channel 2.4 GHz";
Language.DynChan = "Dyn Chan";
Language.TimeBasedScan = "Time-based scan";
Language.Channel5GHz = "Channel 5 GHz";
Language.Clienttraffic="Client traffic";
Language.SelectedOneZone = "You must select atleast one Allowed Zone.";
Language.releaseIPConfirmmsg="Are you sure you want to release IP?";
Language.renewIPConfirmmsg="Are you sure you want to renew IP?";
Language.releaseIP="Release IP";
Language.renewIP="Renew IP";
Language.RadiusForEnterprise="Using Enterprise Authentication requires a configured Radius server. Please configure a Radius server on the 'Wireless Protection -> Global Settings' page. Are you sure you want to configure Wireless Network ?";
Language.TXPower = "TX Power";
Language.TXPower5GHz ="TX Power 5GHz";
Language.EncryptionMode = "Encryption Mode";
Language.NotificationTimeout = "Notification Timeout";
Language.EnterpriseAuthentication="Enterprise Authentication";
Language.DownloadFirmware="Download Firmware";
Language.DownloadAPFirmware="Download AP Firmware";
Language.SMTPDoS = "SMTP DoS Settings";
Language.MaxConnectionPerHost="Maximum Connections/Host";
Language.MaxMailsPerConnection="Maximum Emails/Connection";
Language.MaxRCPTPerMail="Maximum Recepients/Email";
Language.MaxMailsPerHostTime="Emails Rate";
Language.MaxConnectionPerHostTime="Connections Rate";
Language.InvalidValueSMTPDoS="Invalid value of {fieldname}, it should be between {minvalue} to {maxvalue}";
Language.MaxConnGreaterThanMaxConnPerHost = "Maximum Connections/Host should not be greater than Maximum Connections.";
Language.MaximumConnections = "Maximum Connections";
Language.POPsIMAPsConfig = "POPS/IMAPS Configurations";
Language.POPsIMAPsScanCA ="POPS/IMAPS Scanning CA";
Language.GreaterThanZero = "{fieldname} must be greater than zero.";
Language.PerMinute = "Per Minute";
Language.PerSecond = "Per Second";
Language.PerHost = "Per Host";
Language.IMAPS = "IMAPS";
Language.POP3S = "POPS";
Language.PrimaryAV="Primary Anti-Virus";
Language.SingleAV = "Single Anti-Virus (Maximum Performance)";
Language.DualAV="Dual Anti-Virus (Maximum Security)";
Language.RequiredTLSHost = "Require TLS Negotiation Hosts/Nets";
Language.RequredTLSSenderDomain="Require TLS Negotiation Sender Domains";
Language.SkipTLSHost = "Skip TLS Negotiation Hosts/Nets";
Language.SelectHostFQDN = "Select Host/FQDN Host";
Language.SSOSimultaneousLoginLimit="For SSL VPN and SSO to work simultaneously in dual stack network,<br/>set login limit of all the SSL VPN users to more than 1.";
Language.LOCAndRIPNotSame = "Local IP and Remote IP can not be same.";
Language.BindWithInterface="Bind With An Interface";
Language.MaxLANSubnet="When Bind With An Interface option is Enabled, only one subnet can be added.";
Language.MIMEWhiteList = "MIME White List";
Language.TimeBaseAccess = "Time-based Access";
Language.Vendor = "Vendor";
Language.SelectMACAddress = "You must select a valid list of MAC Addresses for MAC filtering.";
Language.AdvancedThreatProtection="Advanced Threat Protection";
Language.EnableATP="Enable Advanced Threat Protection";
Language.ThreatExceptions="Threat Exceptions";
Language.MaxRequiredTLSHost = "You can not select Require TLS Negotiation Hosts/Nets more than 512 Host/Domain.";
Language.MaxRequiredTLSDomain = "You can not select Require TLS Negotiation Sender Domains more than 512 Host/Domain.";
Language.MaxRequiredTLSSkip = "You can not select Skip TLS Negotiation Hosts/Nets more than 512 Host/Domain.";
Language.ScheduleSelection= "At least one schedule has to be selected.";
Language.FastTransition = "Fast Transition";
Language.SPXEncryption = "SPX Encryption";
Language.SPXTemplates = "SPX Template";
Language.PasswordSettings="Password Settings";
Language.SPXPassEmailOneTime = "Generated one-time password for every email";
Language.SPXPassStoreRecpt = "Generated and stored for recipient";
Language.SPXPassSpecSender = "Specified by sender";
Language.SPXPassSpecRecpt = "Specified by recipient";
Language.PasswordType = "Password Type";
Language.PDFEncryption="PDF encryption";
Language.PageSize = "Page Size";
Language.DataProtectionPolicy = "Data Protection Policy";
Language.SelectSignature = "At select least one signature.";
Language.SelectDLP = "Please select Data Protection Policy.";
Language.DLPRejection = "DLP Rejection";
Language.Caching="Enable caching";
Language.forced_caching_status="Force caching for Endpoint updates"
Language.Warn="Warn";
Language.Heartbeat = "Heartbeat";
Language.SourceNetwork = "Source Network";	
Language.DestNetwork = "Destination Network";
Language.SelectIpOrNetwork = "Select IP Address / Network";
Language.AcceptWithSPX="Accept With SPX";
Language.SelectSPXPolicy="Please select SPX Policy.";
Language.AllowSMTPAuth = "Only Allow Authenticated Relay";
Language.SelectSourceIP = "Please select Source IP/Network.";
Language.SelectDestiIP = "Please select Destination IP/Network.";
Language.SourceIPRejection="Source IP Address Rejection";
Language.DestiIPRejection="Destination IP Address Rejection";
Language.SMTPAuthRelayRejection="Authenticated Relay Rejection";
Language.SounrceIPSMTP="Source IP Address / Network";
Language.DestiIPSMTP="Destination IP Address / Network";
var Message = new Object();
Message.BootWithFactory="The firmware will boot the Appliance with factory default configuration. Are you sure, you want to continue?";
Message.ATPAddSuccess= "Access Time Policy '{accesspolicyname}' has been created successfully.";	
Message.ATPAddFailure= "Access Time Policy '{accesspolicyname}' could not be created.";	
Message.ATPRecordExists= "Access Time Policy could not be created. Access Time Policy with same name as '{accesspolicyname}' already exists, choose a different name.";	
Message.ATPEditFailure= "Access Time Policy '{accesspolicyname}' could not be updated.";	
Message.ATPEditSuccess= "Access Time Policy '{accesspolicyname}' has been updated successfully.";	
Message.ATPRecordInUse= "Policy could not be deleted. Policy is already assgined to one or more User or User Group.";
Message.ATPDeleteSuccess= "Access Time Policy has been deleted successfully.";
Message.ATPDeleteFailed= "Access Time Policy could not be deleted.";
Message.ACLNotInserted = "Profile '{txtRoleName}' could not be created.";
Message.ACLRoleNameExisted = "Profile could not be created. Profile with the same name as '{txtRoleName}' already exists, choose a different name.";
Message.ACLNotUpdated = "Profile '{txtRoleName}' could not be updated.";
Message.ACLUpdated = "Profile '{txtRoleName}' has been updated successfully.";
Message.ACLInserted = "Profile '{txtRoleName}' has been created successfully.";
Message.ACLDeleted = "Profile has been deleted successfully";
Message.ACLNotDeleted = "Profile could not be deleted.";
Message.ACLChildExist = "Profile could not be deleted. Profile is already assigned to a User.";
Message.ADAddSuccess= "AD server '{srvname}' has been added successfully.";
Message.ADUpdateSuccess= "AD server '{srvname}' has been updated successfully.";
Message.ADAddFail= "AD Server '{srvname}' could not be added.";
Message.ADUpdateFail= "AD Server '{srvname}' could not be updated.";
Message.ADRecordExists= "AD Server could not be added. AD server with the same Domain Name already exists, choose a different Domain Name.";
Message.ADRecordNameExists= "AD Server could not be added. Authentication Server with the same name already exists, choose a different name.";
Message.ADRecordNameIPExists= "AD Server could not be added. AD server with the same Domain Name or IP already exists.";
Message.ADTestConnectionSuccess= "Appliance - AD server connectivity test successful.";
Message.ADTestConnectionFailed= "Appliance - AD server connectivity test failed.";
Message.ADDeleteSuccess= "AD Server has been deleted successfully.";
Message.ADDeleteFailed= "AD Server could not be deleted.";
Message.ADUpdateFailDetail="AD server could not be updated. Server with same name already exists.";
Message.ADServerDown="Test Connection failed as server is down or unreachable.";
Message.ADWrongCredential="Test Connection failed due to incorrect credential.";
Message.AdminAuthServerSuccess= "Authentication Settings for admin has been updated successfully.";
Message.AdminAuthServerFail= "Authentication Settings for admin could not be updated.";
Message.Failed= "Configuration message could not be updated.";
Message.UpdateSuccess= "Configuration message has been updated successfully.";
Message.ResetFailed= "Configuration message Reset failed.";
Message.ResetSuccess= "Configuration message has been reset successfully.";
Message.AdminSettingsApplySuccessful="Administrator Settings have been applied successfully. Please wait for Web Service to reinitialize.";
Message.AdminSettingsApplyFailed="Administrator Settings could not be updated.";
Message.AdminSettingsHTTPPortConflict = "Service is already configured on the specified port, choose another HTTP Port.";
Message.AdminSettingsHTTPSPortConflict = "Service is already configured on the specified port, choose another HTTPS Port.";
Message.AdminSettingsSSLVPNPortConflict = "Service is already configured on the specified port, choose another SSL VPN port.";
Message.AliasAddFailed= "Interface Alias '{interface}' could not be added.";
Message.AliasRecordExists = "Alias could not be added. Alias with same IP Address already exists, choose different IP Address.";
Message.AliasUpdateFail= "Interface Alias '{interfacename}' could not be updated.";
Message.AliasTooManyAlias = "Alias could not be added for '{interface}'. Only 256 Aliases can be added for an IPv4 Interface.";
Message.AliasTooManyAliasIP6 = "Alias could not be added for '{interface}'. Only 64 Aliases can be added for an IPv6 Interface.";
Message.AliasIntBasedVHExist = "Interface based Virtual Host with same IP Address already exists, choose different IP Address for the Virtual Host.";
Message.AFPAddRuleSuccess= "Application Filter Policy Rule has been created successfully.";
Message.AFPUpdateRuleSuccess= "Application Filter Policy Rule has been updated successfully.";
Message.AFPAddRuleFail= "Application Filter Policy Rule could not be created.";
Message.AFPUpdateRuleFail= "Application Filter Policy Rule could not be updated.";
Message.AFPRuleExists= "Policy Rule could not be created. A Policy Rule with the same application and schedule already exists.";
Message.AFPAddSuccess= "Application Filter Policy '{name}' has been created successfully.";
Message.AFPUpdateSuccess= "Application Filter Policy '{name}' has been updated successfully.";
Message.AFPAddFail= "Application Filter Policy '{name}' could not be created.";
Message.AFPUpdateFail= "Application Filter Policy '{name}' could not be updated.";
Message.AFPRecordExists= "Policy could not be created. Application Filter Policy with the same name as '{name}' already exists, choose a different name.";
Message.AFPDeleteDetailFail= "Application Filter Policy Rule could not be deleted.";
Message.AFPDeleteDetailSuccess= "Application Filter Policy Rule has been deleted successfully.";
Message.AFPUpdateRuleOrderSuccess= "Application Filter Policy Rule order has been updated successfully.";
Message.AFPUpdateRuleOrderFail= "Application Filter Policy Rule order could not be updated.";
Message.AFPDeleteSuccess= "Application Filter Policy has been deleted successfully.";
Message.AFPDeleteFail= "Application Filter Policy could not be deleted.";
Message.AFPForeignKeyExists = "Application Filter Policy could not be deleted. Policy is already assigned to one or more users or user groups.";
Message.AFPMaxLimit= "Application Filter Policy could not be created. You can create a maximum of {maxAppFilterCount} policies.";
Message.AppQosPolicyEditFailed= "QoS Policy could not be applied.";
Message.AppQosPolicyEditSuccess= "QoS Policy has been applied successfully.";
Message.ARPAddSuccess= "Neighbor has been added successfully.";
Message.ARPUpdateSuccess= "Neighbor has been updated successfully.";
Message.ARPDeleteSuccess= "Neighbor has been deleted successfully.";
Message.ARPDeleteFailed= "Selected Neighbor Entries could not be deleted.";
Message.ARPAddFailed= "Neighbor could not be added.";
Message.ARPUpdateFailed= "Neighbor could not be updated.";
Message.ARPRecordExists="Neighbor could not be added. Neighbor entry already exists, choose a different IP Address.";
Message.ARPGatewayExists="Static Neighbor entry could not be added for Gateway IP Address, choose a different IP Address.";
Message.ARPMax16Address="Maximum 16 IP Addresses can be bounded with a single MAC Address. Please verify the number of IP Addresses bounded.";
Message.ARPTrustedEntryConfilct="Neighbor could not be added. Trusted entry with same IP Address already exists, choose a different IP Address.";
Message.ARPIPTypeConfilct="Conflict found with IP association of existing trusted entry. Please verify.";
Message.ARPUpdateConfigSuccess="Neighbor Configuration has been updated successfully.";
Message.ARPUpdateConfigFailed="Neighbor Configuration could not be updated.";
Message.ARPTrustedListNotEmpty="Trusted MAC List cannot be empty if MAC Filtering is enabled.";
Message.ARPARPCacheDeleted="Neighbor Cache deleted successfully.";
Message.ARPARPCacheNotDeleted="Neighbor Cache could not be deleted.";
Message.ASConfigUpdateSuccess ="Anti Spam Configuration has been updated successfully.";
Message.ASConfigUpdateFail ="Anti Spam Configuration could not be updated.";
Message.ASConfigSubOperationFail ="Sub Operation could not be completed while updating configuration.";
Message.AuthServerSucc="Authentication Server has been deleted successfully.";
Message.AuthServerFail="Authentication Server could not be deleted.";
Message.AuthServerServerInUse="Authentication Server could not be deleted. Authentication Server is used as Primary or Secondary Authentication Server.";
Message.AVFTPConfigUpdateSuccess= "FTP Configuration has been updated successfully.";
Message.AVFTPConfigUpdateFail= "FTP Configuration could not be updated.";
Message.AVGeneralConfUpdateSuccess= "Configuration has been updated successfully.";
Message.AVGeneralConfUpdateFail= "Configuration could not be updated.";
Message.AVHTTPConfUpdateSuccess= "HTTP Configuration has been updated successfully.";
Message.AVHTTPConfUpdateFail= "HTTP Configuration could not be updated.";
Message.BackResScheduleBackupSuccess = "Backup schedule settings have been updated successfully.";
Message.BackResScheduleBackupFailed = "Update backup schedule settings failed.";
Message.BackResError="Failed to restore";
Message.BackResSucc="Appliance has been restored successfully.";							   
Message.BackResErrorInvalidBackup="Invalid backup file.";
Message.BackResErrorCrossModelNotSupported="Backup cannot be restored on current Appliance.";
Message.BackResErrorVersionNotSupported="Backup cannot be restored on current Firmware.";
Message.BookMarkInserted = "Bookmark '{bookmarkname}' has been added successfully.";
Message.BookMarkUpdated = "Bookmark '{bookmarkname}' has been updated successfully.";
Message.BookMarkRecordExists = "Bookmark could not be added. Bookmark Name: {bookmarkname} or Bookmark URL: '{bookmarkurl}' already exists, choose a different Name or URL.";
Message.BookMarkNotInserted = "Bookmark '{bookmarkname}' could not be added.";
Message.BookMarkNotUpdated = "Bookmark '{bookmarkname}' could not be updated.";
Message.BookMarkGroupInserted = "Bookmark group '{bookmarkgroupname}' has been created successfully.";
Message.BookMarkGroupUpdated = "Bookmark group '{bookmarkgroupname}' has been updated successfully.";
Message.BookMarkGroupRecordExists = "Bookmark group could not be created. Bookmark group with name as '{bookmarkgroupname}' already exists, choose a different name.";
Message.BookMarkGroupNotInserted = "Bookmark group '{bookmarkgroupname}' could not be created.";
Message.BookMarkGroupNotUpdated = "Bookmark group '{bookmarkgroupname}' could not be updated.";
Message.BookMarkGroupDeleteSuccess= "Bookmark Group has been deleted successfully.";
Message.BookMarkGroupDeleteFailed= "Bookmark Group could not be deleted.";
Message.BookMarkGroupDeleteRelationExists= "Bookmark Group could not be deleted. SSL VPN Policy exists for the Bookmark group.";
Message.BookMarkDeleteSuccess= "Bookmark has been deleted successfully.";
Message.BookMarkDeleteFailed= "Bookmark could not be deleted.";
Message.BookMarkDeleteRelationExists= "Bookmark could not be deleted. SSL VPN Policy exists for Bookmark.";
Message.BrPairEditAddBridgePairFailed = "Bridge Pair could not be added.";
Message.BrPairEditBridgePairNameConflict = "Choose a different name for bridge pair.";
Message.BrPairEditEditBridgePairFailed = "Bridge Pair could not be updated.";
Message.BrPairEditMemInterfaceAlreadyPaired = "Bridge Pair with same member interface already exists,choose a different member interface.";
Message.BrPairEditGWBasedRuleExist = "Interface could not be updated. Gateway Based firewall rule exists.";
Message.BrPairEditOnlyOneZoneCanbeWAN = "WAN zone can have only one member Interface.";
Message.CCCUpdateSuccess="Central Management Settings has been applied successfully.";
Message.CCCUpdateFail="Central Management Settings could not be updated.";
Message.CAEditCreateFailed="Certificate Authority details could not be updated or Certificates could not be regenerated."; 
Message.CAEditRecordAlreadyExists="Certificate Authority (CA) could not be added. CA with the same name already exists, choose a different name.";
Message.CAEditUpdateFailed="Certificate Authority details could not be updated.";
Message.CAEditUploadedFileCurrupted="Certificate Authority file may be corrupted.";
Message.CAEditUploadCAFailed="Certificate Authority could not be uploaded.";
Message.CAManageUploadedSuccessFully="Certificate Authority has been uploaded successfully.";
Message.CAManageUpdatedSuccessFully="Certificate Authority details have been updated successfully.";
Message.CAManageCreatedSuccessFully="Certificate Authority has been generated successfully.";
Message.CAManageRewriteConfFailed="Certificate Authority has been added successfully.\nYou need to restart VPN Services from CLI console.";
Message.CAManageChangePasswordSuccess="Certificate Authority Password has been changed successfully.";
Message.CAManageChangePasswordFail="Certificate Authority Password could not be changed.";
Message.CAManageDeleteSuccess= "Certificate Authority has been deleted successfully.";
Message.CAManageDeleteFailed= "Certificate Authority could not be deleted.";
Message.CertEditRecordAlreadyExists="Certificate could not be uploaded. Certificate already exists, choose a different certificate.";
Message.CertEditGenerateFailed="Certificate could not be generated.";
Message.CertEditUpdateCertFailed="Certificate could not be updated.";
Message.CertEditKeyCertMismatch="Certificate could not be uploaded due to invalid private key or passphrase. Choose a proper key.";
Message.CertEditCSRRecordAlreadyExists="Certificate Signing Request could not be generated. Certificate already exists, choose a different certificate.";
Message.CertEditSelfSignedRecordAlreadyExists="Certificate could not be generated. Certificate already exists, choose a different certificate.";
Message.CertManageUpdatedSuccessFully="Certificate has been updated successfully.";
Message.CertManageDeleteSuccess= "Certificate has been deleted successfully.";
Message.CertManageDeleteFailed= "Certificate could not be deleted.";
Message.CertManageChildExists= "Certificate could not be deleted. Certificate is already used in IPSec, L2TP or SSL VPN connection.";
Message.CertManageRevokeSuccess= "Certificate has been revoked successfully.";
Message.CertManageRevokeFailed= "Certificate could not be revoked as it is already revoked.";
Message.CertManageGenerateSuccess="Certificate has been generated successfully.";
Message.CertManageRevokeChildExists = "Certificate cannot be revoked. It is already being used either in IPSec, L2TP, SSL VPN or Web Admin Console.";
Message.AdminPasswdSucc="Password has been changed successfully.";
Message.AdminPasswdFail="Password change for Default Admin failed.";
Message.AdminPasswdWrongPasswd="Password could not be changed. Invalid current Password.";
Message.AdminPasswdResetFail="Default Admin Password Reset failed.";
Message.AdminPasswdResetSucc="Default Admin Password has been reset successfully.";
Message.ChangePasswdUpdateFail="Password could not be changed.";
Message.ClientlessUserAddFailed= "Some of Clientless Users could not be registered.";
Message.ClientlessUserRecordExists="User could not be registered. User or User group with the same name already exists, choose a different name.";
Message.ClientlessUserUpdateFailed= "User details could not be updated.";
Message.ClientlessUserRecordExistsWithSameIP="Clientless User with the same IP Address already exists, choose a different IP Address.";
Message.ClientlessUserAddSuccess= "One or more clientless users have been registered successfully.";
Message.ClientlessUserUpdateSuccess= "Clientless User '{username}' details has been updated successfully.";
Message.ClientlessUserDeleteSuccess= "Clientless User has been deleted successfully.";
Message.ClientlessUserDeleteFailed= "Clientless User could not be deleted.";
Message.ClientlessUserForeignKeyExists = "Clientless User could not be deleted. Firewall rule exists for the User.";
Message.ClientlessUserAddMultipleClientLessUsers="All the Users have been added successfully";
Message.ConfBackSucc="Backup has been taken successfully";
Message.ConfBackFail1="Backup process could not be completed.";
Message.ConfBackFail2="Database Backup Failed";
Message.ConfBackFail3="Certificate Backup Failed";
Message.ConnCaptureDeleteSuccess= "Connection has been deleted successfully.";
Message.ConnCaptureDeleteFailed= "Connection could not be deleted.";
Message.ConnGrpNotInserted = "Connection group '{connectiongroupname}' could not be created";
Message.ConnGrpRecordExist = "Connection group could not be created. Connection group with the same name as '{connectiongroupname}' already exists, choose a different name.";
Message.ConnGrpNotUpdated = "Connection group '{connectiongroupname}' could not be updated.";
Message.CorpSpamDigestUpdateSucc="Spam Quarantine Digest Settings has been updated successfully.";
Message.CorpSpamDigestUpdateFail="Spam Quarantine Digest Settings could not be updated.";
Message.CRLCreateFailed="CRL '{crlname}' could not be uploaded.";
Message.CRLRecordAlreadyExists="CRL could not be uploaded. CRL with same name as '{crlname}' already exists, choose a different name.";
Message.CRLUpdateFailed="CRL '{crlname}' could not be updated.";
Message.CRLUpdatedSuccessFully="CRL '{crlname}' has been updated successfully.";
Message.CRLDeleteSuccess= "CRL has been deleted successfully.";
Message.CRLDeleteFailed= "CRL could not be deleted.";
Message.CTRDeleteSuccess = "Consolidated Troubleshooting Report has been deleted successfully.";
Message.CTRDeleteFailure = "Consolidated Troubleshooting Report could not be deleted.";
Message.dashboardReorderSuccessfull = "Reordering Successful.";
Message.dashboardReorderFail = "Reordering Failed";
Message.DTPAddSuccess= "Data Transfer Policy '{dtpolicyname}' has been created successfully.";
Message.DTPAddFailed= "Data Transfer Policy '{dtpolicyname}' could not be created.";
Message.DTPUpdateSuccess= "Data Transfer Policy '{dtpolicyname}' has been updated successfully.";
Message.DTPUpdateFailed= "Data Transfer Policy '{dtpolicyname}' could not be updated.";
Message.DTPRecordExists= "Data Transfer Policy could not be created. Data Transfer Policy with the same name as '{dtpolicyname}' already exists, choose a different name.";
Message.DTPRecordInUse= "Policy could not be deleted. Policy is already assigned to one or more Users or User Groups.";
Message.DTPDeleteSuccess= "Policy has been deleted successfully.";
Message.DTPDeleteFailed= "Policy could not be deleted.";
Message.DialInAddSuccess="DialIn Members have been added successfully.";
Message.DialInAddFailure="DialIn Members could not be added.";
Message.DialInDeleteFailed = "DialIn user could not be deleted.";
Message.DialInDeleteSuccess = "DialIn user has been deleted successfully.";
Message.DeAnonymizeSuccess= "Deanonymization has been done successfully.";
Message.DeAnonymizeFailure= "Deanonymization could not be done.";
Message.DeAnonymizeAuthorizationFailed= "Deanonymization could not be done because authorization has been failed.";
Message.DeAnonymizeDuplicateDeanonymization = "Deanonymization already done.";
Message.DeAnonymizeAuthFailedDueToSc = "Deanonymization could not be done due to schedule restriction.";
Message.DeAnonymizeAuthorizationFailedDueToIP = "Deanonymization could not be done due to IP restriction.";
Message.DeAnonymizeUpdateSuccess= "De-Anonymization Settings have been updated successfully.";
Message.DeAnonymizeUpdateFailed= "De-Anonymization Settings could not be updated.";
Message.DeAnonymizeAuthorizationSettingFailed= "De-Anonymization Settings could not be updated because authorization has been failed.";
Message.DeAnonymizeAuthFailedDueToSchedule = "De-Anonymization Settings could not be updated due to schedule restriction.";
Message.DeAnonymizeAuthSettingFailedDueToIP = "De-Anonymization Settings could not be updated due to IP restriction.";
Message.DGDAddFail= 'Gateway Failover Rule could not be updated.';
Message.DGDAddSuccess= 'Gateway Failover Rule has been updated successfully';
Message.DGDDeleteSuccess= 'Gateway Failover Rule has been deleted successfully';
Message.DHCPRelayAddSuccess= "DHCP Relay Configuration has been added successfully.";
Message.DHCPRelayAddFailed= "DHCP Relay Configuration could not be added.";
Message.DHCPRelayRecordAlreadyExists= "DHCP Relay Configuration could not be added. DHCP Relay Configuration already exists, choose a different configuration.";
Message.DHCPRelayEditSuccess= "DHCP Relay Configuration has been updated successfully.";
Message.DHCPRelayEditFailed= "DHCP Relay Configuration could not be updated.";
Message.DHCPRelayDHCPServerIPCanNotBeInterfaceIP = "Interface IP Address could not be configured as DHCP Server IP.";
Message.DHCPRelayDeleteSuccess= "DHCP Relay Configuration has been deleted successfully.";
Message.DHCPRelayDeleteFailed= "DHCP Relay Configuration could not be deleted.";
Message.DHCPServerAddSuccess= "DHCP Server Configuration has been added successfully.";
Message.DHCPServerAddFailed= "DHCP Server Configuration could not be added.";
Message.DHCPServerRecordAlreadyExists= "DHCP Server Configuration could not be added. DHCP Server Configuration already exists, choose a different server.";
Message.DHCPServerEditSuccess= "DHCP Server Configuration has been updated successfully.";
Message.DHCPServerEditFailed= "DHCP Server Configuration could not be updated.";
Message.DHCPServerDeleteSuccess= "DHCP Server Configuration has been deleted successfully.";
Message.DHCPServerDeleteFailed= "DHCP Server Configuration could not be deleted.";
Message.DHCPServerRecUpdAlreadyExists = "DHCP Server Configuration could not be updated. DHCP Server Configuration already exists, choose a different server.";
Message.DHCPServerChildExists = "DHCP Server Configuration is in use.";
Message.DHCPServerDHCPServerIPCanNotBeInterfaceIP = "Interface IP cannot be configured as DHCP Lease IP.";
Message.DHCPServerLease_IP_Not_Fall_In_Range = "Lease IP Range is not within selected Interface Subnet Range.";
Message.DHCPServerLease_IP_Already_Assigned = "Leased IP Range with the same IP Addresses already assigned for this Interface, choose different IP Addresses.";
Message.DHCPServerGateway_IP_Not_Fall_In_Range = "Configured Gateway IP Address is not within Lease IP's Subnet Range.";
Message.DHCPServerCanNotBeAuxiliaryInterfaceIP = "Auxiliary Interface IP cannot be configured as DHCP Lease IP.";
Message.DHCPServerStacicLeaseEntryNotUnique = " DHCP Configuration with same Hostname/MAC Address/DUID Address already exists, choose different Hostname/MAC Address/DUID Address.";
Message.DHCPServerRecordExists = "DHCP server with the same name already exists. Please choose a different name.";
Message.DNSDNS_Configuration_Success_="DNS Configuration has been applied successfully.";
Message.DNSDNS_Configuration_Fail_="DNS Configuration could not be applied.";
Message.DoSAddSuccess= "DoS Bypass Rule has been created successfully.";
Message.DoSAddFailed= "DoS Bypass Rule could not be created.";
Message.DoSRecordExists= "DoS Bypass Rule could not be created. DoS Bypass Rule already exists, choose a different source or destination IP Address.";
Message.DoSEditSuccess= "DoS Bypass Rule has been updated successfully.";
Message.DoSEditFailed= "DoS Bypass Rule could not be updated.";
Message.DoSDeleteSuccess= "DoS Bypass Rule has been deleted successfully.";
Message.DoSDeleteFailed= "DoS Bypass Rule could not be deleted.";
Message.DoSApplySuccess="DoS Settings has been applied successfully.";
Message.DoSApplyFail="DoS Settings could not be applied.";
Message.DDNSCreateFailed="DDNS '{hostname}' account could not be created.";
Message.DDNSRecordAlreadyExists="DDNS account could not be created. DDNS account with the same name as {hostname} already exists, choose a different name.";
Message.DDNSUpdateFailed="DDNS '{hostname}' account could not be updated.";
Message.DDNSCreatedSuccessFully="DDNS account '{hostname}' has been created successfully.";
Message.DDNSUpdatedSuccessFully="DDNS account '{hostname}' has been updated successfully.";
Message.DDNSDeleteSuccess= "Dynamic DNS has been deleted successfully.";
Message.DDNSDeleteFailed= "Dynamic DNS could not be deleted.";
Message.EmailArchiverAddSuccess= "Email Archiver '{name}' has been created successfully.";	
Message.EmailArchiverAddFailure= "Email Archiver '{name}' could not be created.";	
Message.EmailArchiverRecordExists= "Email Archiver could not be created. Email Archiver with same name as '{name}' already exists, choose a different name.";	
Message.EmailArchiverEditFailure= "Email Archiver '{name}' could not be updated.";	
Message.EmailArchiverEditSuccess= "Email Archiver '{name}' has been updated successfully.";	
Message.EmailArchiverDeleteSuccess= "Email Archiver has been deleted successfully.";
Message.EmailArchiverDeleteFailed= "Email Archiver could not be deleted.";
Message.SrcRouteAddSuccess= "Explicit Source Route '{network}' has been added successfully.";
Message.SrcRouteAddFailed= "Explicit Source Route '{network}' could not be added.";
Message.SrcRouteRecordExists= "Explicit Source Route could not be added. Explicit Source Route for the '{network}' already exists, choose a different Network.";
Message.SrcRouteDeleteSuccess= "Explicit Source Route has been deleted successfully.";
Message.SrcRouteDeleteFailed= "Explicit Source Route could not be deleted.";
Message.FileTypeSameDetailRecordExists = "File type category contain duplicate file extensions.";
Message.FileTypeAddExtensionSuccess="Extension has been added successfully.";
Message.FileTypeAddExtensionFailed="Add Extension failed.";
Message.FileTypeAddExtensionAlreadyExists="Extension already exists.";
Message.FileTypeAddMIMEHeaderSuccess="MIME Header has been added successfully.";
Message.FileTypeAddMIMEHeaderFailed="Add MIME Header failed.";
Message.FileTypeAddMIMEHeaderAlreadyExists="MIME Header already exists.";
Message.FileTypeDelExtensionSuccess="Extension has been deleted successfully.";
Message.FileTypeDelExtensionFailed="Delete extension failed.";
Message.FileTypeDelMIMEHeaderSuccess="MIME Header has been deleted successfully.";
Message.FileTypeDelMIMEHeaderFailed="Delete MIME header failed.";
Message.FileTypeOneExtMIMEHeaderRequired="At least one extension or MIME header is required.";
Message.FileTypeAddSuccess= "File type '{name}' has been added successfully.";
Message.FileTypeUpdateSuccess= "File type '{name}' has been updated successfully.";
Message.FileTypeDeleteSuccess= "File type has been deleted successfully.";
Message.FileTypeDeleteFailed= "File type could not be deleted.";
Message.FileTypeAddFailed= "File type could not be added.";
Message.FileTypeUpdateFailed= "File type could not be updated.";
Message.FileTypeForeignKeyExists = "Some File types could not be deleted. Web Filter Policy/SMTP Scanning Rule exists for the File Type.";
Message.FileTypeRecordExists="File type could not be added. File type '{name}' already exists, choose a different name.";
Message.FWAuthSettingsSuccess= "Firewall Authentication Settings has been updated successfully.";
Message.FWAuthSettingsFail= "Firewall Authentication Settings could not be updated.";
Message.FWAuthSettingsUserSessionSuccess= "User Global Settings has been updated successfully.";
Message.FWAuthSettingsUserSessionFail= "User Global Settings could not be updated.";
Message.FWAuthSettingsCapPortalSuccess= "Captive Portal Settings has been updated successfully.";
Message.FWAuthSettingsCapPortalFail= "Captive Portal Settings could not be updated.";
Message.FWRuleAddSuccess= "Firewall Rule has been created successfully.";
Message.FWRuleAddFail= "Firewall Rule could not be created.";
Message.FWRuleEditSuccess= "Firewall Rule has been updated successfully.";
Message.FWRuleEditFail= "Firewall Rule could not be updated.";
Message.FWRuleDeleteFail= "Firewall Rule could not be deleted.";
Message.FWRuleRecordExists = "Firewall rule with same name already exists.";
Message.FWRuleenableSuccess= "Firewall Rule has been enabled successfully.";
Message.FWRuleenableFailed= "Firewall Rule could not be enabled.";
Message.FirmwareUploadSuccess = "Firmware applied successfully.";
Message.FirmwareUploadFail = "New Firmware could not be uploaded. Please refer online help for possible reasons.";
Message.FirmwareMismatchLoader = "Firmware could not be uploaded with this firmware loader version.";
Message.FirmwareMismatchAppliance = "Firmware could not be uploaded, choose a proper firmware for this appliance. ";
Message.FirmwareReboot = "On reboot, Firmware version '{number}' will be applied to the System.";
Message.FirmwareDryrunSuccess = "Firmware validated successfully. Applying Firmware....please wait";
Message.FirmwareDryRunFailInAuxiliary="When HA is configured, Firmware upgrade is not allowed on the Non-Primary machine.";
Message.FirmwareLoadNewSuccessFailInAuxiliary="HA is disabled as firmware was upgraded successfully on Primary machine but failed on the Auxiliary machine.";
Message.FirmwareSetDefaultFailInAuxiliary="When HA is configured, booting the Non-Primary Appliance with upgraded firmware is not allowed.";
Message.FirmwareSetDefaultNotAllowedInHA="When HA is configured, booting Cluster Appliance(s) with the non-active firmware is not allowed.";
Message.FirmwareFactoryResetFailInAuxiliary="When HA is configured, booting Non-Primary Appliance with factory default configuration from the upgraded firmware is not allowed.";
Message.FirmwareFactoryResetNotAllowedInHA="When HA is configured, booting Cluster Appliance(s) with factory default configuration from the non-active firmware is not allowed.";
Message.FirmwareUploadSuccessReboot="This firmware upgrade will automatically reboot your appliance after upload. Press \"OK\" to continue or \"Cancel\" to stop upgrade process.";
Message.FourEyeAuthUpdateSuccess= "4-Eye Authentication Settings have been updated successfully.";
Message.FourEyeAuthUpdateFailed= "4-Eye Authentication Settings could not be updated.";
Message.FourEyeAuthAuthorizationFailed= "4-Eye Authentication Settings could not be updated because authorization has been failed.";
Message.FourEyeAuthAuthFailedDueToSchedule = "4-Eye Authentication Settings could not be updated due to schedule restriction.";
Message.FourEyeAuthAuthorizationFailedDueToIP = "4-Eye Authentication Settings could not be updated due to IP restriction.";
Message.FQDNAddSuccess= "FQDN Host '{hostname}' has been added successfully.";
Message.FQDNAddFailed= "FQDN Host '{hostname}' could not be added.";
Message.FQDNRecordExists = "FQDN Host '{hostname}' could not be added.";
Message.FQDNUpdateSuccess= "FQDN Host '{hostname}' has been updated successfully.";
Message.FQDNUpdateFailed= "FQDN Host '{hostname}' could not be updated.";
Message.FQDNHGFirewallRuleExists= "FQDN Host Group could not be deleted. Firewall Rule exists for the FQDN Host Group.";
Message.FQDNHGDeleteSuccess= "FQDN Host Group has been deleted successfully.";
Message.FQDNHGDeleteFailed= "FQDN Host Group could not be deleted.";
Message.FQDNFirewallRuleExists= "FQDN Host could not be deleted. Firewall Rule exists for the FQDN Host.";
Message.FQDNHostgroupExists= "FQDN Host could not be deleted. Host is the member of a FQDN Host Group.";
Message.FQDNDeleteSuccess= "FQDN Host has been deleted successfully.";
Message.FQDNDeleteFailed= "FQDN Host could not be deleted.";
Message.GatewayUpdateFail= "Gateway '{gatewayname}' could not be updated.";
Message.GatewayUpdateSuccess= "'{gatewayname}' Gateway has been updated successfully.";
Message.GatewayTimeoutConfUpdateSuccess="Gateway Failover Timeout updated Successfully.";
Message.GatewayTimeoutConfUpdateFail="Gateway Failover Timeout could not be updated.";
Message.UserGroupAddFail= "Group could not be created.";
Message.UserGroupUpdateFail= "Group Details could not be updated.";
Message.UserGroupRecordExists= "Group could not be created. User or Group with same name already exists, choose a different name.";
Message.UserGroupDuplicateIPInLoginRestriction="Duplicate IP in Login Restriction.";
Message.UserGroupAddSuccess= "User Group '{groupname}' has been created successfully.";
Message.UserGroupUpdateSuccess= "User Group '{groupname}' has been updated successfully.";
Message.UserGroupDeleteSuccess= "Group has been deleted successfully.";
Message.UserGroupDeleteFailed= "Group could not be deleted.";
Message.UserGroupIMRuleExists= "Group could not be deleted. IM rules exists for the Group.";
Message.UserGroupMoveSuccess="Group order has been updated successfully.";
Message.UserGroupFirewallRuleExists="Group could not be deleted. Firewall Rule exists for the Group.";
Message.UserGroupL2TPUsersExists="Group could not be deleted. L2TP/PPTP Users exists for the Group.";
Message.UserGroupXAUTHUsersExists="Group could not be deleted. XAUTH Users exists for the Group.";
Message.UserGroupExternalAuthSelected="Group could not be deleted. Group is selected as a Default group for External Authentication.";
Message.UserGroupGuestUserDefGrp="Group could not be deleted. Group is selected as a Default group for Guest Users.";
Message.UserGroupUsersExists="Group could not be deleted. User exists in the Group.";
Message.UGMemberAddSuccess="Group Members have been added successfully.";
Message.UserGroupAddFailure="Group Members could not be added.";
Message.SMSAuthAddSuccess = "Registration Successful. Your credentials have been sent to your registered mobile number, The SMS would get delivered shortly.<br/><a onclick='window.close();' style='cursor:pointer;'>Close the window</a>";
Message.SMSAuthRecordAlreadyExists = "User already exists. Your credentials have been sent to your registered mobile number, The SMS would get delivered shortly.<br/><a onclick='window.close();' style='cursor:pointer;'>Close the window</a>";
Message.SMSAuthInvalidCode = "Please Enter a valid code.";
Message.SMSAuth= "Access details SMS has been sent to guest user.";
Message.SMSAuthSMSGWNotConnected = "Failed to send Access details SMS to guest user.Please check SMS Gateway connectivity.";
Message.SMSAuthSettingsAddSuccess= "Guest User Settings updated successfully.";
Message.SMSAuthSettingsAddFailed= "Guest User Settings could not be updated.";
Message.HAEnableHASuccess="HA has been enabled Successfully";
Message.HADisableHASuccess="HA has been disabled successfully";
Message.HAEnableHAFail="HA Could not be enabled";
Message.HADisableHAFail="HA Could not be disabled";
Message.HASanityChk="Sanity check for HA is failed";
Message.HAAppActiveFail="Appliance is not activated";
Message.HAInterfaceDown="One or some of monitored interfaces are down";
Message.HAPeerAppConnectFailed="Not able to connect with peer appliance";
Message.HAPeerAppActiveFailed="Peer appliance is not activated";
Message.HAPeerInterfaceDown="One or some of monitored interfaces are down on peer appliance.";
Message.HAFirmwareMismatch="Firmware version mismatch with peer appliance";
Message.HAPortDiffer="Number of ports are different on peer appliance";
Message.HADedicatedPortDown="Dedicated interface is down";
Message.HAPeerDedicatedPortDown="Peer dedicated interface is down";
Message.HASyncSuccess="Manual sync started successfully.";
Message.HASyncFailed="Manual sync Failed.";
Message.HADedicatedLinkWithVLAN="HA is not allowed when VLAN/Alias is configured on Dedicated HA Link Port";
Message.HAPeerIPClashWithSysIP="Peer Administration IP is clashing with current system`s interfaces IPs.";
Message.HAPeerSysRunningInHA="Peer system is already running in HA, so can`t configure HA again.";
Message.HAApplianceStabdBySucc="Operation started successfully. Primary Appliance will be restarted.";
Message.HAApplianceStabdByFail="Operation failed.";
Message.HAPeerHAIPConflict = "Peer HA link IP is clashing with current system's interfaces IPs.";
Message.HAAlreadyDisabledHA="HA is already disabled.";
Message.HAHAStateTransition="HA state transition is going on. Please try after a while.";
Message.HAHAAuxSync="Auxiliary syncing is going on. Please try after a while.";
Message.HAOverrideMACOnDedicatedPort="Override MAC is configured on dedicated port, so can't configure HA.";
Message.HAOverrideMACOnPeerDedicatedPort="Override MAC is configured on peer dedicated port, so can't configure HA.";
Message.HAEnableHASuccessCheckPeer="HA has been enabled Successfully, but it is recommended to check the physical connectivity of peer monitoring ports.";
Message.HGAddSuccess= "{grouptypename} '{hostgroupname}' has been created successfully.";
Message.HGAddFail= "Host Group '{hostgroupname}' could not be created.";
Message.HGUpdateSuccess= "{grouptypename} '{hostgroupname}' has been updated successfully.";
Message.HGUpdateFail= "Host Group '{hostgroupname}' could not be updated.";
Message.HGFirewallRuleExists= "Host Group could not be deleted. Firewall Rule exists for the Host Group.";
Message.HGDeleteSuccess= "Host Group has been deleted successfully.";
Message.HGDeleteFailed= "Host Group could not be deleted.";
Message.HostFirewallRuleExists= "Host could not be deleted. Firewall Rule exists for the Host.";
Message.HostHostgroupExists= "Host could not be deleted. Host is the member of a Host Group.";
Message.HostVirtualHostExists= "Host could not be deleted. Virtual Host exists for Host.";
Message.HostNATPolicyExists= "Host could not be deleted. NAT Policy exists for Host.";
Message.HostDeleteSuccess= "Host has been deleted successfully.";
Message.HostDeleteFailed= "Host could not be deleted.";
Message.HTTPRuleAddFail= "HTTP Scan Rule could not be created.";
Message.HTTPRuleRecordExists= "HTTP Scanning Rule could not be added. HTTP Scanning Rule with the same name already exists, choose a different name.";
Message.HTTPRuleFailedDelete = "HTTP Scan Rule could not be deleted.";
Message.HTTPRuleUpdateFailMessage= "HTTP Scan Rule '{rulename}' could not be updated.";
Message.HTTPRuleSuccessDelete =  "HTTP Scan Rule has been deleted successfully.";
Message.HTTPRuleAddSuccess= "HTTP Scan Rule '{rulename}' has been created successfully.";
Message.HTTPRuleUpdateRuleOrderSuccess= "HTTP Scan Rule Order has been updated successfully.";
Message.HTTPRuleUpdateRuleOrderFail= "HTTP Scan Rule Order could not be updated.";
Message.HTTPRuleUpdateSuccess= "HTTP Scan Rule '{rulename}' has been updated successfully.";
Message.HTTPSAddSuccess= "HTTPS Exception '{name}' has been created successfully.";	
Message.HTTPSAddFailure= "HTTPS Exception '{name}' could not be created.";	
Message.HTTPSRecordExists= "HTTPS Exception could not be created. HTTPS Exception with same name as '{name}' already exists, choose a different name.";	
Message.HTTPSEditFailure= "HTTPS Exception '{name}' could not be updated.";	
Message.HTTPSEditSuccess= "HTTPS Exception '{name}' has been updated successfully.";
Message.HTTPSDeleteSuccess= "HTTPS Exception has been deleted successfully.";
Message.HTTPSDeleteFailed= "HTTPS Exception could not be deleted.";
Message.IMContactDuplicateRecord="IM Contact could not be created. IM Contact already exists, choose a different IM username.";
Message.IMContactError="IM Contact could not be created";
Message.IMContactSucc="IM Contact has been created successfully.";
Message.IMContactUpdateError="IM Contact details could not be updated.";
Message.IMContactUpdateSucc="IM Contact has been updated successfully.";
Message.IMContactGrpDuplicateRecord="IM Contact Group could not be created. IM Contact Group already exists, choose a different group name.";
Message.IMContactGrpError="IM Contact Group could not be created";
Message.IMContactGrpSucc="IM Contact Group has been created successfully.";
Message.IMContactGrpUpdateError="IM Contact Group could not be updated.";
Message.IMContactGrpUpdateSucc="IM Contact Group has been updated successfully.";
Message.IMContactGrpDeleteSucc="IM Contact Group has been deleted successfully.";
Message.IMContactGrpDeleteFailGen="IM Contact Group could not be deleted.";
Message.IMContactGrpIMRuleExists="IM Contact Group could not be deleted. IM rules exist for the IM Contact Group.";
Message.IMContactDeleteSucc="IM Contact has been deleted successfully.";
Message.IMContactDeleteFailGen="IM Contact could not be deleted.";
Message.IMContactIMRuleExists="IM Contact could not be deleted. IM rule exists for the IM Contact.";
Message.IMContactDeleteFailSpec="IM Contact could not be deleted. IM Contact Group exists for the IM Contact.";
Message.IMFilterEditSuccess="IM Content Filter Configuration has been updated successfully.";
Message.IMFilterEditFailed="IM Content Filter Configuration could not be updated.";
Message.IMRule1AddFailed= "IM Conversation Rule could not be created.";
Message.IMRule1UpdateFailed= "IM Conversation Rule could not be updated.";
Message.IMRule1AddSuccess= "IM Conversation Rule has been Added successfully.";
Message.IMRule1UpdateSuccess= "IM Conversation Rule has been Updated successfully.";
Message.IMRule1DeleteSuccess= "IM Conversation Rule(s) has been deleted successfully.";
Message.IMRule1DeleteFailed= "IM Conversation Rule(s) could not be deleted.";
Message.IMRuleUpdateRuleOrderSuccess= "IM Rule order has been updated successfully.";
Message.IMRuleUpdateRuleOrderFailed= "IM Rule order could not be updated.";
Message.IMRuleRecordExists= "IM Rule with the same name already exists. Rule Name across Conversation, File Transfer and Webcam cannot be same.";
Message.IMRule2AddFailed= "IM File Transfer Rule could not be created.";
Message.IMRule2UpdateFailed= "IM File Transfer Rule could not be updated.";
Message.IMRule2AddSuccess= "IM File Transfer Rule has been created successfully.";
Message.IMRule2UpdateSuccess= "IM File Transfer Rule has been updated successfully.";
Message.IMRule2DeleteSuccess= "IM File Transfer Rules has been deleted successfully.";
Message.IMRule2DeleteFailed= "IM File Transfer Rules could not be deleted.";
Message.IMRule3AddFailed= "IM Login Rule could not be Added.";
Message.IMRule3UpdateFailed= "IM Login Rule could not be Updated.";
Message.IMRule3RecordAlreadyExists = "IM Login Rule already exists for selected User/IM contact.";
Message.IMRule3AddSuccess= "IM Login Rule has been Added successfully.";
Message.IMRule3UpdateSuccess= "IM Login Rule has been Updated successfully.";
Message.IMRule3DeleteSuccess= "IM Login Rule(s) has been deleted successfully.";
Message.IMRule3DeleteFailed= "IM Login Rule(s) could not be deleted.";
Message.IMRule3UpdateRuleOrderSuccess= "IM Login Rule order has been updated successfully.";
Message.IMRule3UpdateRuleOrderFailed= "IM Login Rule order could not be updated.";
Message.IMRule4AddFailed= "IM Webcam Rule could not be Added.";
Message.IMRule4UpdateFailed= "IM Webcam Rule could not be Updated.";
Message.IMRule4AddSuccess= "IM Webcam Rule has been Added successfully.";
Message.IMRule4UpdateSuccess= "IM Webcam Rule has been Updated successfully.";
Message.IMRule4DeleteSuccess= "IM Webcam Rule(s) has been deleted successfully.";
Message.IMRule4DeleteFailed= "IM Webcam Rule(s) could not be deleted.";
Message.InterfaceUpdateFail= "Interface '{interfacename}' could not be updated.";
Message.InterfaceGatewayAlreadyExists = "Gateway with the same name already exists. Please choose a different name.";
Message.InterfaceIPAlreadyInUsed = "IP Address is assigned to some other interface.";
Message.InterfaceOneWANRequired = "There has to be at least one interface in WAN zone.";
Message.InterfaceGWBasedRuleExist = "Interface could not be updated. Gateway Based firewall rule exists.";
Message.InterfaceIntBaseVHExist = "Virtual Host with the same IP Address already exists, choose a different IP Address for Interface based Virtual Host.";
Message.InterfaceFailedWhileUnbinding= "Update interface failed while unbinding interface.";
Message.InterfaceFailedWhileDeleteDHCPServer= "Update interface failed while deleting DHCP server.";
Message.InterfaceFailedWhileDeleteDHCPRelay= "Update interface failed while deleting DHCP relay.";
Message.InterfaceFailedWhileDeletePPPoE= "Update interface failed while deleting PPPoE information.";
Message.InterfaceFailedWhileDeleteGateway= "Update interface failed while deleting gateway information.";
Message.InterfaceFailedToUnbindInterface= "Failed to unbind interface.";
Message.InterfaceFailedToUnbindInterfaceRunConfig= "Failed to unbind interface (All configuration part updated).";
Message.InterfaceIPAssignedToPeerAdminIP = "This IP Address is assigned to either peer administration port or peer dedicated port of HA cluster.";
Message.InterfaceEditBridgeMemFailed = "Member Interface {interfacename} could not be updated.";
Message.InterfaceInvalidMACAddress="Invalid MAC address.";
Message.InterfaceMACConflictWithSystemMAC="Configured MAC address is conflicting with system MAC address.";
Message.InterfaceMACChangeFailedDueToPPPOE="MAC address change is not allowed. PPPoE is configured on VLAN or physical Interface.";
Message.InterfaceIPAssignmentChangeNotAllowed = "Cannot change the IP Assignment from Static to PPPoE/DHCP when VLAN is configured";
Message.InterfaceMACConflictwithReservedHAMAC = "Configured MAC address is conflicting with reserved list of Virtual MAC addresses used in HA.";
Message.InterfaceAddVLANSuccess= "VLAN Interface '{txtInterface}.{txtVLANId}' has been added successfully.";
Message.InterfaceUpdateAliasSuccess= "Interface Alias '{interfacename}' has been updated successfully.";
Message.InterfaceAddAliasSuccess= "Interface Alias '{interface}' has been added successfully.";
Message.InterfaceUpdateSuccess= "Interface '{interfacename}' has been updated successfully.";
Message.InterfaceFAIL_BINDED_ZONE="Interface is bound to the Zone, remove the Interface-Zone binding and try again";
Message.InterfaceFAIL_HOST_IN_FIREWALL="Firewall rule exists for Host, remove firewall rule and try again";
Message.InterfaceFAIL_HOST_IN_GROUP="Interface based host bound to a Host Group.";
Message.InterfaceFAIL_ARP_EXIST="Neighbor Entry exists for Interface, remove Neighbor Entry and try again.";
Message.InterfaceFAIL_DHCP_SERVER_EXIST="Interface could not be deleted. Interface is configured as DHCP Server.";
Message.InterfaceFAIL_VIRTUAL_HOST_EXIT="Interface could not be deleted. Interface based host is bound to a Virtual Host.";
Message.InterfaceFAIL_NAT_POLICY_EXIST="Interface could not be deleted. Interface based host is bound to a NAT Policy.";
Message.InterfaceFAIL_UNICAST_ROUTE_EXIST="Interface could not be deleted. Unicast route exists for the selected Interface.";
Message.InterfaceFAIL_MULTICAST_ROUTE_EXIST="Interface could not be deleted. Multicast route exists for the selected Interface.";
Message.InterfaceFAIL_DHCP_RELAY_EXIST="Interface could not be deleted. DHCP Relay is configured on the selected Interface.";
Message.InterfaceDELETE_FAIL="Interface could not be deleted.";
Message.InterfaceDELETE_SUCCESS="Interface has been deleted successfully.";
Message.InterfaceAddBridgePairSuccess = "Bridge Pair has been added successfully.";
Message.InterfaceEditBridgePairSuccess = "Bridge Pair has been updated successfully.";
Message.InterfaceEditBridgeMemSuccess = "Member Interface {interfacename} has been updated successfully.";
Message.IPHostAddSuccess= "Host '{hostname}' has been added successfully.";
Message.IPHostAddFailed= "Host '{hostname}' could not be added.";
Message.IPHostRecordExists = "Host with same name already exists.";
Message.IPHosthostUpdateSuccessfully = "Host '{hostname}' has been updated successfully.";
Message.IPHostupdateFail= "Host '{hostname}' could not be updated.";
Message.IPHostFAIL_VIRTUL_HOST_CONFLICT="Host with same Virtual Host IP Address already exists, choose a different IP Address."; 
Message.IPHostRecordExistsWithSameDetail = "Host with the same detail already exists.";
Message.CustomSigAddFailed= "Custom Signature could not be added.";
Message.CustomSigUpdateFailed= "Custom Signature could not be updated.";
Message.CustomSigRecordExists="Custom Signature could not be added. Custom Signature with the same name as '{idpCustSignName}' already exists, choose a different name.";
Message.CustomSigRecordNotExists="IPS Custom signature could not be updated. Custom signature does not exists.";
Message.CustomSigInvalidSignatureRule="Custom signature could not be created. Custom Signature Rule is not valid.";
Message.CustomSigCustomSignatureCheck1="IPS Custom Signature Rule is not valid.";
Message.CustomSigAddSuccess= "Customer Signature '{idpCustSignName}' has been added successfully.";
Message.CustomSigUpdateSuccess= "Custom Signature '{idpCustSignName}' has been updated successfully.";
Message.CustomSigDeleteSuccess= "Custom Signature has been deleted successfully.";
Message.CustomSigDeleteFailed= "Custom Signature could not be deleted.";
Message.IPSecNotUpdated = "IPSec Connection '{connectionname}' could not be updated.";
Message.IPSecNotInserted = "IPSec Connection could not be added.";
Message.IPSecRecordExist = "Connection with the same name already exists. Connection name across IPSec,L2TP,CISCO VPN Client cannot be same.";
Message.IPSecPSKNOTSAME = "Preshared key mismatch. All the connections shared between end-points must have the same preshared key.";
Message.IPSecRewriteFailed = "IPSec Connection '{connectionname}' could not be rewritten.";
Message.IPSecNetworkConflict = "IPSec Connection '{connectionname}' network conflict.";
Message.IPSecInserted = "IPSec Connection '{connectionname}' has been added successfully.";
Message.IPSecUpdated = "IPSec Connection '{connectionname}' has been updated successfully.";
Message.IPSecDeleteSuccess="IPSec Connection has been deleted successfully.";
Message.IPSecDeleteFail="IPSec Connection could not be deleted.";
Message.IPSecConnInUse = "Minimum two IPSec connection(s) required for Failover Group.";
Message.IPSecFailedExport = "IPSec Connection could not be exported";
Message.IPSecSuccessExport = "IPSec Connection has been exported successfully";
Message.IPSecFailedConnection = "IPSec connnection could not be established";
Message.IPSecSuccessConnection = "IPSec connection has been established successfully.";
Message.IPSecFailedDisconnect = "IPSec connection could not be disconnected";
Message.IPSecSuccessDisconnect = "IPSec connection has been disconnected successfully.";
Message.IPSecFailedActivate = "IPSec connection could not be activated";
Message.IPSecSuccessActivate = "IPSec connection has been activated successfully.";
Message.IPSecFailedDeactive = "IPSec connection could not be deactivated";
Message.IPSecSuccessDeactive = "IPSec connection has been deactivated successfully.";
Message.IPSecGrpGroupInserted = "Failover Group '{connectiongroupname}' has been created successfully.";
Message.IPSecGrpGroupUpdated = "Failover Group '{connectiongroupname}' has been updated successfully.";
Message.IPSecGrpGroupDeleteSuccess = "Failover Group has been deleted successfully.";
Message.IPSecGrpGroupDeleteFailed = "Failover Group could not be deleted.";
Message.IPSecGrpGroupFailedActivate = "Failover Group could not be activated";
Message.IPSecGrpGroupSuccessActivate = "Failover Group has been activated successfully.";
Message.IPSecGrpGroupFailedDeactive = "Failover Group could not be deactivated";
Message.IPSecGrpGroupSuccessDeactive = "Failover Group has been deactivated successfully.";
Message.IPSecGrpLocalServerHaveNotIP = "IP Address is not available for configured Local WAN interface.";
Message.IPSecGrpActivationFailure="All the connections shared between end points must have the same authentication methods and credentials.";
Message.IPSpolicyAddFailed= "IPS policy could not be created.";
Message.IPSpolicyUpdateFailed= "IPS policy could not be updated.";
Message.IPSpolicyRecordExists="IPS policy could not be created. IPS policy with the same name '{idppolicyname}' already exists, choose a different name.";
Message.IPSpolicyEngineRestartFail="Custom signature could not be created. IPS Service could not restart.";
Message.IPSpolicyRecordNotExists="IPS policy could not be updated.IPS policy does not exists.";
Message.IPSpolicyRuleUpdateSuccess= "IPS Signature has been updated successfully.";
Message.IPSpolicyRuleUpdateFailed= "IPS Signature could not be updated.";
Message.IPSpolicyAddSuccess= "IPS Policy '{idppolicyname}' has been created successfully.";
Message.IPSpolicyUpdateSuccess= "IPS Policy '{idppolicyname}' has been updated successfully.";
Message.IPSpolicyDeleteSuccess= "IPS Policy has been successfully deleted.";
Message.IPSpolicyDeleteFailed= "IPS Policy could not be deleted.";
Message.IPSpolicyDeleteFailedChildExists= "Policy could not be deleted. Firewall Rule exists for the IPS Policy.";
Message.IPSpolicyMaxLimit= "IPS Policy could not be created. You can create a maximum of {maxipsCount} policies.";
Message.L2TPSubOpFailed = "L2TP sub operation could not be completed.";
Message.L2TPConfigUpdated = "L2TP Configuration has been updated successfully.";
Message.L2TPConfigNotUpdated = "L2TP Configuration could not be updated.";
Message.L2TPUserDeleteFailed = "L2TP user could not be deleted.";
Message.L2TPUserDeleteSuccess = "L2TP user has been deleted successfully.";
Message.L2TPUserUserAdded = "L2TP member(s) successfully added";
Message.L2TPNotUpdated = "L2TP Connection '{connectionname}' could not be updated.";
Message.L2TPNotUpdatedInvalidIPRange = "Failed to configure the L2TP. IP Address range is not valid";
Message.L2TPNotInserted = "L2TP Connection '{connectionname}' could not be added.";
Message.L2TPRecordExist = "Connection with the same name already exists. Connection name across IPSec,L2TP,CISCO VPN Client cannot be same.";
Message.L2TPPSKNOTSAME = "Preshared key mismatch. All the connections shared between end-points must have the same preshared key.";
Message.L2TPRewriteFailed = "L2TP Connection '{connectionname}' could not be rewritten.";
Message.L2TPNetworkConflict = "L2TP Connection '{connectionname}' has a network conflict.";
Message.L2TPInserted = "L2TP Connection '{connectionname}' has been added successfully.";
Message.L2TPUpdated = "L2TP Connection '{connectionname}' has been updated successfully.";
Message.L2TPFailedConnection = "L2TP connnection could not be established";
Message.L2TPSuccessConnection = "L2TP connection has been established successfully.";
Message.L2TPFailedDisconnect = "L2TP connection could not be disconnected";
Message.L2TPSuccessDisconnect = "L2TP connection has been disconnected successfully.";
Message.L2TPFailedActivate = "L2TP connection could not be activated";
Message.L2TPSuccessActivate = "L2TP connection has been activated successfully.";
Message.L2TPFailedDeactive = "L2TP connection  could not be deactivated";
Message.L2TPSuccessDeactive = "L2TP connection has been deactivated successfully.";
Message.L2TPDeleteSuccess="L2TP Connection has been deleted successfully.";
Message.L2TPDeleteFail="L2TP Connection could not be deleted.";
Message.L2TPConnInUse="L2TP connection(s) could not be deleted. It is member of failover group(s).";
Message.L2TPL2TPdisableAdd="L2TP connection '{connectionname}' has been added successfully. The modification will be applicable only when L2TP is enabled.";
Message.L2TPL2TPdisableEdit="L2TP connection '{connectionname}' has been updated successfully. The modification will be applicable only when L2TP is enabled.";
Message.LDAPAddSuccess= "LDAP server '{srvname}' has been added successfully.";
Message.LDAPUpdateSuccess= "LDAP server '{srvname}' has been updated successfully.";
Message.LDAPAddFail= "LDAP server could not be added.";
Message.LDAPUpdateFail= "LDAP server could not be updated.";
Message.LDAPRecordExist= "LDAP server could not be added. Authentication Server already exists.";
Message.LDAPRecordNameIPExists= "LDAP Server could not be added. LDAP server with the same Name or IP already exists.";
Message.LDAPTestConnectionFail= "Appliance-LDAP server connectivity test failed.";
Message.LDAPTestConnectionSuccess= "Appliance-LDAP server connectivity test was successful.";
Message.LDAPDeleteSuccess= "LDAP Server has been deleted successfully.";
Message.LDAPDeleteFailed= "LDAP Server could not be deleted.";
Message.LDAPUpdateFailDetail="LDAP server could not be updated. Server already exists.";
Message.AddrGrpAddFail= "Address Group '{listname}' could not be added.";
Message.AddrGrpRecordExists = "Address Group could not be added. Address Group '{listname}' already exists, choose a different name.";
Message.AddrGrpUpdateFail= "Address Group '{listname}' could not be updated.";
Message.AddrGrpEmptyFile1 = "Address Group '{listname}' could not be added because uploaded file was empty.";
Message.AddrGrpImportFailed = "Address Group '{listname}' could not be added because all Email Addresses/Domains are invalid in uploaded file.";
Message.AddrGrpAddSuccess= "Address Group '{listname}' has been added successfully.";
Message.AddrGrpUpdateSuccess= "Address Group '{listname}' has been updated successfully.";
Message.AddrGrpDeleteSuccess= "Address Group has been deleted successfully.";
Message.AddrGrpDeleteFail= "Address Group could not be deleted.";
Message.AddrGrpForeignKeyExists = "Address Group could not be deleted. Address Group is used in SMTP Policy.";
Message.AddrGrpUploadFailed= "Email Address/Domain file could not be uploaded.";
Message.AddrGrpUploadSuccess= "Email Addresses/Domains has been imported successfully.";
Message.AddrGrpEmptyFile2 = "Uploaded file was empty. Please select a non empty file.";
Message.AddrGrpMaxLimitExceed = "Maximum 400 Email Addresses/Domains are allowed.";
Message.AddrGrpSomeEmailNotImported = "Some Email Addresses/Domains could not be imported";
Message.AddrGrpAllEmailNotImported = "All Email Addresses/Domains could not be imported.";
Message.LiveUserSuccessDisconnect = "Live users have been disconnected successfully.";
Message.LiveUserFailDisconnect = "Live users could not be disconnected.";
Message.LocalACLUpdateSuccess= "Appliance Access has been updated successfully.";
Message.LocalACLUpdateFail= "Appliance Access could not be updated.";
Message.LocalACLAddSuccess= "Trusted Domain has been added successfully.";
Message.LocalACLAddFail= "Trusted Domain could not be added.";
Message.LocalACLDeleteSuccess= "Trusted Domain has been deleted successfully.";
Message.LocalACLDeleteFail= "Trusted Domain could not be deleted.";
Message.MACAddSuccess= "MAC Host '{hostname}' has been added successfully.";
Message.MACAddFail= "MAC Host '{hostname}' could not be added.";
Message.MACUpdateSuccess= "MAC Host '{hostname}' has been updated successfully.";
Message.MACUpdateFail= "MAC Host '{hostname}' could not be updated.";
Message.MACRecordExists = "MAC Host could not be added. MAC Host with same name as '{hostname}' already exists, choose a different name.";
Message.MACFirewallRuleExists= "Host could not be deleted. Firewall Rule exists For Host.";
Message.MailScanRuleAddFailed= "Mail Scanning Rule '{policyname}' could not be added.";
Message.MailScanRuleRecordExists = "Mail Scanning Rule could not be added. Mail Scanning Rule with the same name as '{policyname}' already exists, choose a different name.";
Message.MailScanRuleUpdateFail= "Mail Scanning Rule '{policyname}' could not be updated.";
Message.MailScanRuleFailed = "Email scanning rule could not be deleted.";
Message.MailScanRuleSuccess = "Email scanning rule has been deleted successfully.";
Message.MailScanRuleAddSuccess= "Mail Scanning Rule '{policyname}' has been added successfully.";
Message.MailScanRuleUpdateSuccess= "Mail Scanning Rule '{policyname}' has been updated successfully.";
Message.MailScanRuleUpdateRuleOrderSuccess= "Mail Scanning Rule Order has been updated successfully.";
Message.MailScanRuleUpdateRuleOrderFail= "Mail Scanning Rule Order could not be updated.";
Message.MailServerApplySuccessful="Notification Setting has been applied successfully.";
Message.MailServerApplyFailed="Notification Setting could not be updated.";
Message.MulticastAddSuccess= "Multicast Route has been added successfully.";
Message.MulticastUpdateSuccess= "Multicast Route has been updated successfully.";
Message.MulticastAddFailed= " Multicast Route could not be added.";
Message.MulticastUpdateFailed= "Multicast Route could not be updated.";
Message.MulticastAddRouteEffectLater= "Multicast Route has been added successfully. It will be in effect when corresponding interface gets an IP Address.";
Message.MulticastUpdateRouteEffectLater= "Multicast Route has been updated successfully. It will be in effect when corresponding interface gets an IP Address.";
Message.MulticastRecordExists= "A Multicast route with the same Source and Destination IP Addresses already exist.";
Message.MulticastDeleteSuccess= "Multicast Route has been deleted successfully.";
Message.MulticastDeleteFailed= "Multicast Route could not be deleted.";
Message.MulticastEnableSuccess= "Multicast Forwarding has been enabled successfully.";
Message.MulticastEnableFail= "Multicast Forwarding could not be enabled.";
Message.MulticastDisableSuccess= "Multicast Forwarding has been disabled successfully.";
Message.MulticastDisableFail= "Multicast Forwarding could not be disabled.";
Message.MulticastRouteDoesNotExist = "Multicast route does not exist.";
Message.ClientlessUserRecordExists1 = "Clientless user is already exists with the same name.";
Message.ClientlessUserRecordExistsWithSameIP1 = "Clientless user is already exists with the same IP.";
Message.RangeClientlessUserAddFailed= "Add clientless user failed.";
Message.NATAddSuccess= "NAT Policy '{natprofilename}' has been added successfully.";
Message.NATAddFailed= "NAT Policy '{natprofilename}' could not be created.";
Message.NATRecordExists= "NAT Policy with the same name as '{natprofilename}' already exists.Please choose a different name.";
Message.NATUpdateSuccess= "NAT Policy '{natprofilename}' has been updated successfully.";
Message.NATUpdateFailed= "NAT Policy '{natprofilename}' could not be updated.";
Message.NATFirewallRuleExists= "You cannot delete the NAT Policy. Firewall Rule Exists for the NAT Policy.";
Message.NATDeleteSuccess= "NAT Policy has been deleted successfully.";
Message.NATDeleteFailed= "NAT Policy could not be deleted.";
Message.MaxLimitReached = "Could not create the NAT policy. The number of NAT policies has reached its maximum limit.";
Message.ParentProxyApplySuccess="Parent Proxy Settings has been updated successfully.";
Message.ParentProxyApplyFailed="Parent Proxy Settings could not be updated.";
Message.PersonalInfoUpdateSuccess="Personal details have been updated successfully.";
Message.PersonalInfoUpdateFail="Personal details could not be updated.";
Message.PPTPSubOpFailed = "PPTP sub operation could not be completed.";
Message.PPTPUpdated = "PPTP connection configuration has been updated successfully.";
Message.PPTPNotUpdated = "PPTP connection configuration could not be updated.";
Message.PPTPNotUpdatedInvalidIPRange = "Failed to configure the PPTP. IP Address range is not valid";
Message.PPTPDeleteFailed = "PPTP user could not be deleted";
Message.PPTPDeleteSuccess = "PPTP user has been deleted successfully.";
Message.PPTPUserAdded = "PPTP member(s) successfully added";
Message.QOSscheduleAddSuccess= "Schedule wise QoS Policy Detail has been added successfully.";
Message.QOSscheduleAddFailed= "Schedule wise QoS Policy Detail could not be added.";
Message.QOSscheduleEditSuccess= "Schedule wise QoS Policy Detail has been updated successfully.";
Message.QOSscheduleEditFailed= "Schedule wise QoS Policy Detail could not be updated.";
Message.QOSscheduleRecordAlreadyExists= "Schedule wise QoS Policy Detail already exists.";
Message.QOSscheduleDeleteSuccess= "Schedule wise QoS Policy Detail has been deleted successfully.";
Message.QOSscheduleDeleteFailed= "Schedule wise QoS Policy Detail could not be deleted.";
Message.QOSAddFail= "QoS Policy '{policyname}' could not be created.";
Message.QOSRecordExist= "QoS Policy could not be created. QoS Policy with same name as '{policyname}' already exists, choose a different name.";
Message.QOSEditFail= "QoS Policy '{policyname}' could not be updated.";
Message.QOSDeleteSuccess= "QoS Policy has been deleted successfully.";
Message.QOSDeleteFailed= "QoS Policy could not be deleted.";
Message.QOSForeignKeyExists = "QoS Policies could not be deleted. QoS Policy is used with User/Firewall Rule/Web Category/App Category.";
Message.QOSAddSuccess= "QoS Policy '{policyname}' has been created successfully.";	
Message.QOSEditSuccess= "QoS Policy '{policyname}' has been updated successfully.";
Message.RadiusAddSuccess= "RADIUS Server '{txtServerName}' has been added successfully.";
Message.RadiusUpdateSuccess= "RADIUS Server '{txtServerName}' has been updated successfully.";
Message.RadiusAddFail= "RADIUS Server could not be added.";
Message.RadiusUpdateFail= "RADIUS Server could not be updated.";
Message.RadiusUpdateFailDetail= "RADIUS Server could not be updated. RADIUS Server already exists.";
Message.RadiusRecordExists= "Authentication Server already exists.";
Message.RadiusTestConnectionSuccess= "Appliance-RADIUS server connectivity test was successful.";
Message.RadiusTestConnectionFail= "Appliance-RADIUS server connectivity test failed.";
Message.RadiusDeleteSuccess= "RADIUS Server has been deleted successfully.";
Message.RadiusDeleteFailed= "RADIUS Server could not be deleted.";
Message.RadiusAddFailDetail="RADIUS Server could not be added. RADIUS Server with the same Name or IP already exists.";
Message.RogueAPScanAPScanSuccess="Successfully fetched details of all the discovered nearby Wireless Access Points and their MAC addresses and SSIDs.";
Message.RogueAPScanAPScanFailed="Wireless Access Point Scanning failed.";
Message.RogueAPScanUpdateScanSettingsSuccess="General Settings applied successfully.";
Message.RogueAPScanUpdateScanSettingsFailed="General Settings could not be applied.";
Message.ScheduleRecordExists = "Schedule could not be created. Schedule with the same name as '{schedulename}' already exists, choose a different name.";
Message.ScheduleAddFailed= "Schedule could not be created.";
Message.ScheduleUpdateFailed= "Schedule could not be updated.";
Message.ScheduleSchedule_Overlapping = "Schedule with the same Start and Stop Time already exists, choose different set of Start and Stop time.";
Message.ScheduleAddSuccess= "Schedule '{schedulename}' has been added successfully.";
Message.ScheduleUpdateSuccess= "Schedule '{schedulename}' has been updated successfully.";
Message.ScheduleDeleteSuccess= "Schedule has been deleted successfully.";
Message.ScheduleDeleteFailed= "Schedule could not be deleted.";
Message.ScheduleForeignKeyExists = "Schedule could not be deleted. Schedule already in use.";
Message.ServiceActionSuccess="Service has been successfully '{actionval}'.";
Message.ServiceActionFailed="Service could not be '{actionval}'. ";
Message.ServiceServiceUnregistered="Service could not be started because of improper configuration.";
Message.ServiceAddFail= "Service '{servicename}' could not be added.";
Message.ServiceRecordExist= "Service could not be added. Service or Service Group with same name as '{servicename}' already exists, choose a different name.";
Message.ServiceupdateFail= "Service '{servicename}' could not be updated.";
Message.ServiceGrpAddFail= "Service Group '{servicegroupname}' could not be added.";
Message.ServiceGrpRecordExist= "Service Group could not be added. Service or Service Group '{servicegroupname}' already exists, choose a different name.";
Message.ServiceGrpUpdateFail= "Service Group '{servicegroupname}' could not be updated.";
Message.ServiceGrpAddSuccess= "Service Group '{servicegroupname}' has been added successfully.";
Message.ServiceGrpFirewallRuleExists= "Service Group could not be deleted. Firewall Rule exists for Service Group.";
Message.ServiceGrpDeleteSuccess= "Service Group has been deleted successfully.";
Message.ServiceGrpDeleteFailed= "Service Group could not be deleted.";
Message.ServiceGrpUpdateSuccess= "Service Group '{servicegroupname}' has been updated successfully.";
Message.ServiceFirewallRuleExists= "Service could not be deleted. Firewall Rule exists for Service.";
Message.ServiceServiceGroupExists= "Service could not be deleted. Service Group exists for Service.";
Message.ServiceDeleteSuccess= "Service has been deleted successfully.";
Message.ServiceDeleteFailed= "Service could not be deleted.";
Message.ServiceUpdateSuccess= "Service '{servicename}' has been updated successfully.";
Message.ShutdownAppSuccess= "Operation successfull.";
Message.ShutdownAppRebootFailed= "Reboot failed.";
Message.ShutdownAppShutdownFailed= "Shutdown failed.";
Message.SMSGWAddFailed= "SMS Gateway Profile could not be added.";
Message.SMSGWRecordAlreadyExists = "SMS Gateway Profile with the same name already exists, choose a different name.";
Message.SMSGWEditFailed= "SMS Gateway Profile could not be updated.";
Message.SMSGWdeleteSuccess= "SMS Gateway Profile has been deleted successfully.";
Message.SMSGWDeleteFailed= "SMS Gateway Profile could not be deleted.";
Message.SMSGWEditSuccess= "SMS Gateway Profile has been updated successfully.";
Message.SMSGWAddSuccess= "SMS Gateway Profile has been added successfully.";
Message.SNMPApplySuccess="Agent Configuration changes has been applied successfully.";
Message.SNMPApplyFailed="Agent Configuration could not be applied.";
Message.SNMPPortConflict = "Client Port having same port number already exists, choose a different port number.";
Message.SNMPCommAddSuccess= "Community has been created successfully.";
Message.SNMPCommUpdateSuccess= "Community '{txtCommName}' has been updated successfully.";
Message.SNMPCommDeleteSuccess= "Community has been deleted successfully.";
Message.SNMPCommDeleteFailed= "Community could not be deleted.";
Message.SNMPCommAddFailed= "Community could not be created.";
Message.SNMPCommUpdateFailed= "Community could not be updated.";
Message.SNMPCommRecordExists="Community could not be created. Community with the same name as '{txtCommName}' already exists, choose a different name.";
Message.SNMPCommSNMPdisableAdd= "Community has been created successfully.The modification will be applicable only when SNMP is enabled.";
Message.SNMPCommSNMPdisableEdit= "Community '{txtCommName}' has been updated successfully.The modification will be applicable only when SNMP is enabled.";
Message.SNMPUserAddSuccess= "v3 user has been created successfully.";
Message.SNMPUserUpdateSuccess= "v3 user '{txtUserName}' has been updated successfully .";
Message.SNMPUserDeleteSuccess= "v3 user has been deleted successfully.";
Message.SNMPUserDeleteFailed= "v3 user could not be deleted.";
Message.SNMPUserAddFailed= "v3 user could not be created.";
Message.SNMPUserUpdateFailed= "v3 user could not be updated.";
Message.SNMPUserRecordExists="V3 user could not be created. v3 user with the same name as '{txtUserName}' already exists, choose a different name.";
Message.SNMPUserSNMPdisableAdd= "v3 user has been created successfully.The modification will be applicable only when SNMP is enabled.";
Message.SNMPUserSNMPdisableEdit= "v3 user '{txtUserName}' has been updated successfully .The modification will be applicable only when SNMP is enabled.";
Message.SpamDigestConfSucc="Configuration has been applied successfully.";
Message.SpamDigestConfFail="Configuration could not be applied.";
Message.SpamDigestUpdateSuccess="Spam digest has been updated successfully.";
Message.SpamDigestUpdateFailure="Spam digest could not be updated.";
Message.SpamRuleAddSuccess= "Spam Rule has been created successfully.";
Message.SpamRuleUpdateSuccess= "Spam Rule has been updated successfully.";
Message.SpamRuleRecordExists= "Spam Rule with the same name already exists, choose a different name.";
Message.SpamRuleAddFail= "Spam Rule could not be created.";
Message.SpamRuleUpdateFail= "Spam Rule could not be updated.";
Message.SpamRuleDeleteSuccess= "Spam Rule has been deleted successfully.";
Message.SpamRuleDeleteFail= "Spam Rule could not be deleted.";
Message.SpamRuleUpdateRuleOrderSuccess= "Spam Rule order has been updated successfully.";
Message.SpamRuleUpdateRuleOrderFail= "Spam Rule order could not be updated.";
Message.SpoofUpdateSuccess="Spoof Prevention Settings have been applied successfully.";
Message.SpoofUpdateFailed="Spoof Prevention Settings could not be applied.";
Message.SSLVPNConfNotValidRange = "Not a valid IP Lease Range";
Message.SSLVPNConfUpdated = "SSL VPN Global Configuration has been updated successfully.";
Message.SSLVPNConfNotUpdated = "SSL VPN global configuration could not be updated.";
Message.SSLVPNConfNetConflictStart = "Network with same IP Address as Start Lease IP already exists, choose a different IP Address.";
Message.SSLVPNConfNetConflictEnd = "Network Conflict by End Lease IP.";
Message.SSLVPNConfInvalidClientCert = "Certificate cannot be selected as Client Certificate.";
Message.SSLVPNuserDisconnectSuccess = "SSL VPN Live Users have been disconnected successfully.";
Message.SSLVPNuserDisconnectFailed = "SSL VPN Live Users could not be disconnected.";
Message.SSLVPNpolicyNotInserted = "SSL VPN Policy '{name}' could not be created.";
Message.SSLVPNpolicyNotUpdated = "SSL VPN Policy '{name}' could not be updated.";
Message.SSLVPNpolicyRecordExist = "SSL VPN Policy could not be created. Policy with same name as '{name}' already exists, choose a different name.";
Message.SSLVPNpolicyInserted = "SSL VPN Policy '{name}' has been inserted successfully";
Message.SSLVPNpolicyUpdated = "SSL VPN Policy '{name}' has been updated successfully";
Message.SSLVPNpolicyRelationExists= "SSL VPN Policy could not be deleted. SSL VPN Policy already in use.";
Message.SSLVPNpolicyDeleteSuccess= "SSL VPN Policy has been deleted successfully.";
Message.SSLVPNpolicyDeleteFailed= "SSL VPN Policy could not be deleted.";
Message.SSLVPNpolicyAddSuccess = "Selected Members have been added successfully.";
Message.SSLVPNpolicyAddFailure = "Selected Members could not be added.";
Message.SSLVPNpolicyUpdateSuccess = "Selected Members have been deleted successfully.";
Message.SSLVPNpolicyUpdateFailure = "Selected Members could not be deleted.";
Message.WebAccessUpdated = "Web Access settings has been updated successfully.";
Message.WebAccessNotUpdated = "Web Access settings could not be updated.";
Message.SQPAddSuccess= "Surfing Quota Policy '{policyname}' has been created successfully.";
Message.SQPAddFailed= "Surfing Quota Policy '{policyname}' could not be created.";
Message.SQPRecordExists = "Surfing Quota Policy could not be created. Surfing Quota Policy with the same name as '{policyname}' already exists, choose a different name.";
Message.SQPUpdateSuccess= "Surfing Quota Policy '{policyname}' has been updated successfully.";
Message.SQPUpdateFailed= "Surfing Quota Policy '{policyname}' could not be updated.";
Message.SQPFirewallRuleExists= "Policy could not be deleted. Policy is already assigned to one or more User or User Group.";
Message.SQPDeleteSuccess= "Surfing Quota Policy has been Deleted successfully.";
Message.SQPDeleteFailed= "Policy could not be deleted. Policy is already assigned to one or more User or User Group.";
Message.SyslogRecordExists="Syslog Server could not be added. Syslog Server already exists.";
Message.SyslogAddFailed= "Syslog Server could not be added.";
Message.SyslogUpdateFailed= "Syslog Server could not be updated.";
Message.SyslogAddSuccess= "Syslog Server '{syslogconfname}' has been created successfully.";
Message.SyslogUpdateSuccess= "Syslog Server '{syslogconfname}' has been updated successfully.";
Message.SyslogDeleteSuccess= "Syslog Server has been deleted successfully.";
Message.SyslogDeleteFailed= "Syslog Server could not be deleted.";
Message.SyslogMaxLimit= "Maximum Syslog Configuration have been created";
Message.SyslogConfUpdateSuccess= "Configuration has been updated successfully.";
Message.SyslogConfUpdateFailed= "Configuration could not be updated.";
Message.TimeConfUpdateSuccess="Time Settings has been applied successfully.";
Message.TimeConfUpdateFailed="Time Settings could not be applied.";
Message.TrustedMACAddSuccess="MAC address has been added successfully.";
Message.TrustedMACAddFail="MAC address could not be added.";
Message.TrustedMACRecordAlreadyExists="MAC address could not be added. MAC address already exists in Trusted MAC Entries.";
Message.TrustedMACMaximum_limit = "Maximum 16 IP Addresses can be bounded with a single MAC address.";
Message.TrustedMACIP_Already_Binded = "One or more IP Addresses from the specified IP Addresses are already bound to Trusted MAC Entries.";
Message.TrustedMACDeleteFailed = "Trusted MAC could not be deleted.";
Message.TrustedMACDeleteSuccess = "Trusted MAC has been deleted successfully.";
Message.TrustedMACFailed = "Trusted MAC address CSV file could not be uploaded";
Message.TrustedMACUploadSuccess = "Trusted MAC address CSV file has been uploaded successfully.";
Message.TrustedMACRecordExists="Few MAC addresses already exists.";
Message.TrustedMACInvalidData="Few IP/MAC Addresses are invalid or missing. Provide valid addresses or choose a diferent file.";
Message.UnicastAddSuccess= "Unicast Route '{destinationip}' has been added successfully.";
Message.UnicastUpdateSuccess= "Unicast Route '{destinationip}' has been upated successfully.";
Message.UnicastAddFailed= "Unicast Route '{destinationip}' could not be added.";
Message.UnicastUpdateFailed= "Unicast Route '{destinationip}' could not be updated.";
Message.UnicastRecordExists= "Unicast Route could not be added. Unicast Route '{destinationip}' already exists.";	
Message.UnicastDeleteFailed= "Unicast Route could not be deleted.";
Message.UnicastDeleteSuccess= "Unicast Route has been deleted successfully.";
Message.UnicastRunConfigFailed= "Unicast route '{destinationip}' cannot be applied.";
Message.UnicastRecordNotExists= "Record does not exist for route '{destinationip}' ";
Message.UpdatesIPSUpdateSucc="IPS Signature updated successfully.";
Message.UpdatesIPSUpdateFail="IPS Signature update failed.";
Message.UpdatesWebCatUpdateSucc="Web Category Database update started successfully.";
Message.UpdatesWebCatUpdateFail="Web Category Database update failed.";
Message.UpdatesApplySucc="Update Settings applied successfully.";
Message.UpdatesApplyFail="Update Settings could not be applied.";
Message.UpdatesAVUpdateSucc="Anti Virus Definition update started successfully.";
Message.UpdatesAVUpdateFail="Anti Virus Definition update failed.";
Message.URLgrpNotInserted="URL Group '{urlgroupname}' could not be added";
Message.URLgrpNotUpdated="URL Group '{urlgroupname}' could not be updated";
Message.URLgrpOneURLRegecxRequired="At least one URL is required.";
Message.URLgrpURLNotAdded="URL could not be added.";
Message.URLgrpURLDeleteSuccessfully="URL has been deleted successfully.";
Message.URLgrpURLDeleteFailed="URL could not be deleted";
Message.URLgrpRecordExist= "URL Group with the same name as '{urlgroupname}' already exists. Please choose a different name.";
Message.URLgrpDeleteSuccess= "URL Group has been deleted successfully.";
Message.URLgrpDeleteFailed= "URL Group could not be deleted.";
Message.URLgrpInsertedSuccessfully="URL Group '{urlgroupname}' added successfully.";
Message.URLgrpUpdatedSuccessfully="URL Group '{urlgroupname}' updated successfully.";
Message.URLgrpChildRecordExists="URL Group could not be deleted. Web Filter policy exists for URL Group.";
Message.UserAddFail= "User could not be registered.";
Message.UserUpdateFail= "User details could not updated.";
Message.UserRecordExists= "User could not be registered. User or User group with the same name already exists, choose a different name.";
Message.UserAtleastOneAdmin = "There must be atleast one user as 'Administrator'.";
Message.UserAtleastOneProfileAdmin = "There must be atleast one user with 'Administrator' profile.";
Message.UserResetSucc="User Accounting has been reset successfully.";
Message.UserResetFail="User Accounting could not be reset.";
Message.UserResetFailLiveUser="User Accounting could not be reset for Live Users.";
Message.UserAddIPaddressSuccess="IP Address has been added successfully.";
Message.UserAddIPaddressFailed="Add IP Address failed.";
Message.UserAddIPaddressAlreadyExists="IP Address already exists.";
Message.UserDelIPaddressSuccess="IP Address has been deleted successfully.";
Message.UserDelIPaddressFailed="IP Address extension failed.";
Message.UserOneIPAddressRequired="At least one IP Address is required.";
Message.UserFileNotExists="You must select a file";
Message.UsermaxAllowedLimit="(Maximum {maxCSVUserCount} Entries Allowed)";
Message.UsermaxAllowedLimitReached="User Not Imported, Maximum {maxCSVUserCount} Entries Allowed";
Message.UserAddSuccess= "User '{name}' has been registered successfully.";
Message.UserUpdateSuccess= "User '{name}' has been updated successfully.";
Message.UserDeleteSuccess= "User has been deleted successfully.";
Message.UserDeleteFailed= "User could not be deleted.";
Message.UserForeignKeyExists = "User could not be deleted. Firewall Rule/VPN Connection exists for the User.";
Message.UserIMRuleExists= "User could not be deleted. IM rule(s) exists for the User.";
Message.UserAdminOrCurrentUserNotDeleted="Administrator user could not be deleted. User is currently logged in or is the only Administrator user.";
Message.UserChangeStatusSuccess="Status has been changed successfully.";
Message.UserChangeStatusFail="Status could not be changed.";
Message.UserChangeStatusSuccessCurLog="Status of all the selected users except the currently logged in user has been changed successfully.";
Message.UserPortalUpdated = "User portal has been updated successfully.";
Message.UserPortalFailed = "User portal could not be updated.";
Message.VHAddSuccess= "Virtual Host '{virtualhostname}' has been added successfully.";
Message.VHAddFail= "Virtual Host '{virtualhostname}' could not be added.";
Message.VHIPConflict= "Virtual Host could not be added. Virtual Host/Webserver with same IP Address already exists, choose a different External IP Address.";
Message.VHIPRangeConflict= "Number of IP Addresses in External IP Range and Mapped IP Range do not match.";
Message.VHPortConflict= "Virtual Host could not be added. Virtual Host/Webserver with same Port/Port Range already exists. Please choose a different External Port/Port Range.";
Message.VHEditSuccess= "Virtual Host '{virtualhostname}' has been updated successfully.";
Message.VHEditFail= "Virtual Host '{virtualhostname}' could not be updated.";
Message.VHFirewallRuleExists= "Virtual Host could not be deleted. Firewall Rule exists for Virtual Host.";
Message.VHDeleteSuccess= "Virtual Host has been deleted successfully.";
Message.VHDeleteFailed= "Virtual Host could not be deleted.";
Message.VLANAddFailed= "VLAN Interface '{txtInterface}' could not be added.";
Message.VLANRecordExists = "VLAN Interface could not be added. IP Address or VLAN ID already exists.";
Message.VLANUpdateFail= "VLAN Interface '{txtInterface}' could not be updated.";
Message.VLANIntBasedVHExist = "Interface based Virtual Host with the same IP Address already exists, choose a different IP Address.";	
Message.VLANFailedWhileUnbinding= "Update VLAN failed while unbinding VLAN.";
Message.VLANFailedWhileDeleteDHCPServer= "Update VLAN failed while deleting DHCP server.";
Message.VLANFailedWhileDeleteDHCPRelay= "Update VLAN failed while deleting DHCP relay.";
Message.VLANFailedWhileDeletePPPoE= "Update VLAN failed while deleting PPPoE information.";
Message.VLANFailedWhileDeleteGateway= "Update VLAN failed while deleting gateway information.";
Message.VLANFailedToUnbindVLAN= "Failed to unbind VLAN.";
Message.VLANFailedToUnbindVLANRunConfig= "Failed to unbind VLAN (All configuration part updated).";
Message.VLANGWBasedRuleExist = "VLAN could not be updated. Gateway Based firewall rule exists.";
Message.VLANZoneRequired = "VLAN interface '{txtInterface}' could not be added. Zone is not selected.";
Message.VPNAuthSuccess= "VPN Authentication Settings has been updated successfully.";
Message.VPNAuthFail= "VPN Authentication Settings could not be updated.";
Message.SSLVPNAuthSuccess= "SSL VPN Authentication Settings has been updated successfully.";
Message.SSLVPNAuthFail= "SSL VPN Authentication Settings could not be updated.";
Message.VPNConnDisconnectSuccessful = "IPSec VPN Live Connections have been disconnected successfully.";
Message.VPNConnDisconnectFailed = "IPSec VPN Live Connections could not be disconnected.";
Message.VPNPolicyNotInserted = "VPN policy '{policyname}' could not be created.";
Message.VPNPolicyRecordExist = "VPN policy '{policyname}' could not be created. VPN policy with the same name as '{policyname}' already exists, choose a different name.";
Message.VPNPolicyNotUpdated = "VPN policy '{policyname}' could not be updated.";
Message.VPNPolicyRewriteConnectFail = "VPN policy '{policyname}' Rewrite connection could not be completed.";
Message.VPNPolicyInserted = "VPN policy '{policyname}' has been created successfully.";
Message.VPNPolicyUpdated = "VPN policy '{policyname}' has been updated successfully.";
Message.VPNPolicyDeleteSuccess= "VPN Policy has been deleted successfully.";
Message.VPNPolicyDeleteFailed= "VPN Policy could not be deleted.";
Message.VPNPolicyRelationExists= "VPN Policy could not be deleted. VPN Policy already in use.";
Message.WebClientPortalUpdated = "Web Client portal has been updated successfully.";
Message.WebClientPortalFailed = "Web Client portal could not be updated.";
Message.WebClientPortalsuccess="Web Client Login Template has been updated successfully.";
Message.WebClientPortalfail="Web Client Login Template could not be updated.";
Message.WFCAddSuccess= "Web Filter Category '{name}' has been created successfully.";
Message.WFCAddFailed= "Web Filter Category '{name}' could not be created.";
Message.WFCRecordExist= "Web Filter Category with the same name as '{name}' already exists. Please choose a different name.";
Message.WFCEditSuccess= "Web Filter Category '{webcategoryid}' has been updated successfully.";
Message.WFCEditFailed= "Web Filter Category '{webcategoryid}' could not be updated.";
Message.WFCMaxFiveURL = "You have exceeded the maximum limit for URLs.";
Message.WFCMaxFiveKeyword = "You have exceeded the maximum limit for Keywords.";
Message.WFCAddURLFailed = "Add URL failed.";
Message.WFCAddURLSuccess = "URL has been added successfully.";
Message.WFCAddKeywordFailed = "Add Keyword failed.";
Message.WFCAddKeywordSuccess = "Keyword has been added successfully.";
Message.WFCAddKeywordAlreadyExists = "Keyword already exists.";
Message.WFCDeleteKeywordSuccess = "Keyword has been deleted successfully.";
Message.WFCDeleteKeywordFail = "Delete keyword failed.";
Message.WFCDeleteURLSuccess = "Domain/URL has been deleted successfully.";
Message.WFCDeleteURLFail = "Delete Domain/URL failed.";
Message.WFCOneURLKeywordRequired = "At least one URL or keyword is required.";
Message.WFCDeleteSuccess= "Web Filter Category has been deleted successfully.";
Message.WFCDeleteFailed= "Web Filter Category could not be deleted.";
Message.WFCRelationExists= "Selected Web filter categories are deleted successfully but few of those categories, which are already assigned to a policy or HTTPS Exception, are not deleted.";
Message.WFCSomeCategoryCannotDeleted = "Selected Web filter categories are deleted successfully but few of those categories, which are already assigned to a policy or HTTPS Exception, are not deleted.";
Message.WFCCategoryDetailCannotAdded = "Web filter category created successfully without one or more invalid Domains or Keywords.";
Message.WFPAddSuccess= "Web Filter Policy '{securitypolicyname}' has been created successfully.";
Message.WFPAddFail= "Web Filter Policy '{securitypolicyname}' could not be created.";
Message.WFPRecordExists= "Web Filter Policy could not be created. Web Filter Policy with same name as '{securitypolicyname}' already exists, choose a different name.";
Message.WFPUpdateSuccess= "Web Filter Policy '{securitypolicyname}' has been updated successfully.";
Message.WFPUpdateFail= "Web Filter Policy '{securitypolicyname}' could not be updated.";
Message.WFPDeleteSuccess= "Web Filter Policy has been deleted successfully.";
Message.WFPDeleteRunConfigFail= "Web Filter Policy has been deleted successfully. Cannot udpate Runconfig.";
Message.WFPUpdateFailed= "Web Filter Policy could not be updated.";
Message.WFPRuleExists= "Web Filter Policy Rule could not be added. Web Filter Policy Rule already exists.";
Message.WFPAddRuleFailed= "Web Filter Policy Rule could not be added.";
Message.WFPAddRuleSuccess= "Web Filter Policy Rule has been added successfully.";
Message.WFPRuleMoveSuccess= "Rule order has been updated successfully.";
Message.WFPRuleMoveFaild= "Rule order could not be updated.";
Message.WFPEditRuleFailed= "Web Filter Policy Rule could not be updated.";
Message.WFPEditRuleSuccess= "Web Filter Policy Rule has been updated successfully.";
Message.WFPDeleteFailed= "Web Filter Policy could not be deleted.";
Message.WFPRecordInUse= "Web Filter Policy could not be deleted. Policy already in use.";
Message.WFSettingsUpdateSuccess="Web Filter Settings have been updated successfully.";
Message.WFSettingsUpdateFailed="Web Filter Settings could not be updated.";
Message.WebProxyApplySuccess="Web Proxy Settings has been updated successfully.";
Message.WebProxyApplyFailed="Web Proxy Settings could not be updated.";
Message.WebProxyCachePortInUse = "Web proxy port could not be updated. Web proxy port is already assigned.";
Message.WWANSettingSavedSuccessful = "Configuration saved successfully.";
Message.WWANSettingSavedFailed = "Wireless WAN settings configuration failed.";
Message.WWANDeviceNotSupported= "Not able to detect the current device as modem.";
Message.WWANDeviceNotFound= "Modem not found.";
Message.WWANConnectedSuccessfully = "Wait for a while. Trying to connect.";
Message.WWANConnectFailed = "Wireless WAN connect failed.";
Message.WWANDisconnectedSuccessfully = "Wait for a while. Trying to disconnect.";
Message.WWANDisconnectFailed = "Wireless WAN disconnect failed.";
Message.WLANAPIPAlreadyInUsed = "IP Address is assigned to some other interface/Access Point.";
Message.WLANAPIntBaseVHExist = "Virtual Host with the same IP Address already exists, choose a different IP Address for Access Point based Virtual Host.";
Message.WLANAPFailedWhileUnbinding= "Update Access Point failed while unbinding interface.";
Message.WLANAPFailedWhileDeleteDHCPServer= "Update Access Point failed while deleting DHCP server.";
Message.WLANAPFailedWhileDeleteDHCPRelay= "Update Access Point failed while deleting DHCP relay.";
Message.WLANAPFailedToUnbindInterface= "Failed to unbind Access Point.";
Message.WLANAPFailedToUnbindIfaceRCg= "Failed to unbind Access Point (All configuration part updated).";
Message.WLANAPWLAN1UnboundEditFaild= "Without unbinding other Wireless LAN Access Points, default Access Point cannot be unbounded. Please unbound all other Wireless LAN Access Points and then try again.";
Message.WLANAPOtherUnboundEditFaild= "Default Access Point is unbound so Access Point could not bound";
Message.WLANAPAddSuccessful= "Access Point has been added successfully, Configure DHCP Server for this access point.";
Message.WLANAPAddFailed= "Access Point could not be added.";
Message.WLANAPEditSuccessful= "Access Point has been updated successfully.";
Message.WLANAPEditFailed= "Access Point could not be updated.";
Message.WLANAPAddRunConfigFailed= "Access Point added successfully but failed to configure wireless Access Point";
Message.WLANAPEditRunConfigFailed= "Access Point updated successfully but failed to configure wireless Access Point";
Message.WLANAPDeleteFailed= "Access Point could not be deleted.";
Message.WLANApplySuccessful="Wireless LAN Settings have been applied successfully.";
Message.WLANApplyFailed="Wireless LAN Settings could not be updated.";
Message.WLANAccessPointUnbound="Default Wireless LAN Access Point is unbound. Please bind default Access Point and then try again.";
Message.ZoneAddFail="Zone could not be added.";
Message.ZoneAddFailMAXLimit="Zone could not be added. You can not create more then 100 Zone.";
Message.ZoneUpdateFail="Zone could not be updated.";
Message.ZoneRecordExist="Zone could not be added. Zone with same name already exists, choose a different name.";
Message.ZoneInterfaceExists= "Zone could not be deleted. Interface is bounded with the Zone.";
Message.ZoneFirewallRuleExists= "Zone could not be deleted. Firewall rule exists for selected Zone.";
Message.ZoneUpdateSuccess= "Zone has been updated successfully.";
Message.ZoneAddSuccess= "Zone has been added successfully.";
Message.ZoneDeleteSuccess= "Zone has been deleted successfully.";
Message.ZoneDeleteFailed= "Zone could not be deleted.";
Message.ZonePortConfSuccess= "Port configuration has been updated successfully.";
Message.ZonePortConfFailed= "Port configuration could not be updated.";
Message.CCCSyslogLimit="Unable to configure Central Management, Maximum Syslog Configuration have been created";
Message.HTTPRuleValidSrcIP = "Specify Valid Source IP Address";
Message.HTTPRuleValidDstIP = "Specify Valid Destination IP Address";
Message.HTTPRuleValidRegEx = "Specify Valid Reg Exp";
Message.HTTPRuleValidSrcNetMask = "Specify Valid Netmask for source";
Message.HTTPRuleValidDstNetMask = "Specify Valid Netmask for destination";
Message.AddCountryHostSuccMsg = "Country Host '{hostname}' has been added successfully.";
Message.AddCountryHostFailMsg = "Country Host '{hostname}' could not be added.";
Message.CountryHostExists = "Country Host '{hostname}' could not be added.";
Message.UpdateCountryHostSuccMsg = "Country Host '{hostname}' has been updated successfully.";
Message.UpdateCountryHostFailMsg = "Country Host '{hostname}' could not be updated.";
Message.CountryConflict="Host with same Country already exists, choose a different Country.";
Message.CountryHostFWRuleExist = "Country Host could not be deleted. Firewall Rule exists for the Country Host.";
Message.CountryHostHostgrpExist = "Country Host could not be deleted. Host is the member of a Country Host Group.";
Message.CountryHostDelSucc = "Country Host has been deleted successfully.";
Message.CountryHostDeleteFailed = "Country Host could not be deleted.";
Message.CountryGrpFWRuleExistsMessage = "Country Host Group could not be deleted. Firewall Rule exists for the Country Host Group.";
Message.CountryGrpDelSuccessMsg = "Country Host Group has been deleted successfully.";
Message.CountryGrpDelFailedMsg = "Country Host Group could not be deleted.";
Message.RecordIsInUse = "SMS Gateway could not be deleted. SMS Gateway is selected for Guest Users.";
Message.UpdateBridgePairConfirmMessage="Updating the Bridge-Pair details may affect one or more of its dependent configurations, including:<br/>1. Interface-Zone binding<br/>2. DHCP Server or Relay<br/>3. Interface based Firewall Rules<br/>4. ARP - NDP Static and Proxy<br/>5. Virtual Hosts and respective Firewall Rules <br/>6. Interface based Hosts and respective Host Groups <br/>7. Routes - Unicast and Multicast <br/>8. Interface based PPPoE configurations<br/>9. Gateway configurations<br/>10. VPN configurations<br/><br/>Are you sure, you want to update the Bridge-Pair details?";
Message.DGDDeleteFailMessage = 'Gateway Failover Rule could not be deleted.';
Message.CountryNotSelected = "You must select a country.";
Message.firmwareRebooting="Rebooting the Appliance. Please wait, this will take few minutes.";
Message.firmwareShutdown="Appliance shutdown was successful.";
Message.NotCompatibleLoader="This feature is not compatible with current Loader. Please upgrade Loader.";
Message.SomeEmailNotImported = "Some Email Addresses/Domains could not be imported.";
Message.DisconnectedSuccessfully = "Disconnect Successfully.";
Message.DisconnectFailed = "Disconnect failed.";
Message.ApplyFailed = "Dial In settings configuration failed.";
Message.ApplySuccessfully = "Dial In settings configured successfully.";
Message.AddURLAlreadyExists="URL already exists.";
Message.UserAddedFailed = "Member(s) could not be added";
Message.ThemeApplyFailMessage="Theme could not be applied.";
Message.ThemeApplySuccessMessage="Theme has been applied successfully.";
Message.ChangePasswordSuccess="Certificate Password has been changed successfully.";
Message.FWDelSuccess = "Firewall Rule has been deleted successfully.";
Message.RowUpdate = "Firewall Rule order has been updated successfully.";
Message.RowUpdateFail = "Unable to move firewall rule";
Message.CRLCreateSuccess="CRL '{crlname}' has been uploaded successfully.";
Message.UserImported="Users have been imported successfully.";
Message.SomeUsersNotImported = "Some Users could not be imported.";
Message.VLANUpdateSuccessMessage = "VLAN Interface '{txtInterface}' has been updated successfully.";
Message.ServiceAddSuccess = "Service '{servicename}' has been added successfully.";
Message.InvalidFormat1 = "Uploaded file is not in expected format.";
Message.APDelSuccess ="Access Point has been deleted successfully.";
Message.UploadSigSuccessMsg = "Update file is successfully uploaded.";
Message.UploadSigFailMsg = "Update file could not be uploaded.";
Message.InvalidSigFailMsg = "Update file is invalid.";
Message.InvalidContentSigFailMsg = "File corrupted, Signature update failed.";
Message.ApplianceMismatchSig = "Invalid update for this appliance.";
Message.AuthorizerExists = "User(s) cannot be deleted. The selected user(s) is/are member(s) of 4-Eye Authentication group.";
Message.validPPPoEUserName = "Enter valid value for PPPoE User Name";
Message.SystemServiceError = "You cannot select System Service.";
Message.processing="Processing...";
Message.VHRSuccess="Virtual Host rules has been created successfully.";
Message.VHRNotCreated = "Virtual Host rules creation failed.";
Message.VHRExist = "Virtual Host rules creation failed. Firewall rule '{rulename}' already exists.";
Message.VHRErrorCreatingFirewall = "Virtual Host rules creation failed. Found error in creating firewall rule '{rulename}'.";
Message.VHRNATpolicyExist = "Virtual Host rules creation failed. NAT policy to be used in Reflexive Rule of '{rulename}' already exists.";
Message.VHRNATpolicyMaxLimit = "Virtual Host rules creation failed. NAT policy using for Reflexive Rule of '{rulename}' could not be added, due to NAT policy maximum limit.";
Message.VHRNATpolicyNotAdded = "Virtual Host rules creation failed. NAT policy to be used in Reflexive Rule of '{rulename}' could not be added.";
Message.WAFGlobalSettingSuccess = "Web Application Firewall Settings have been applied successfully.";
Message.WAFGlobalSettingFail = "Web Application Firewall Settings could not be updated.";
Message.WAFExceptionAddSucc = "Web Application Firewall Exception '{txtException}' has been added successfully.";
Message.WAFExceptionAddFail = "Web Application Firewall Exception '{txtException}' could not be added.";
Message.WAFExceptionRecordExists = "Web Application Firewall Exception creation failed. Exception Name '{txtException}' already exists.";
Message.WAFExceptionUpdateSucc = "Web Application Firewall Exception '{txtException}' has been updated successfully.";
Message.WAFExceptionUpdateFail = "Web Application Firewall Exception '{txtException}' could not be updated.";
Message.WAFExceptionDeleteSucc = "Web Application Firewall Exception(s) has been deleted successfully.";
Message.WAFExceptionDeleteFail = "Web Application Firewall Exception(s) could not be deleted.";
Message.WebServerAddSucc = "Web Server '{webservername}' has been added successfully.";
Message.WebServerAddFail = "Web Server '{webservername}' could not be added.";
Message.WebServerRecordExists = "Host with the same name already exists. Host name across IP Host, IP Host Group, MAC Host,Virtual Host and Web Server cannot be same.";
Message.WebServerIPConflict = "Webserver could not be added. Webserver/Virtual Host with same IP Address already exists, choose a different Public IP Address.";
Message.WebServerPortConflict = "Webserver could not be added. Webserver/Virtual Host with same Port/Port Range already exists. Please choose a different  Public Port.";
Message.WebServerSamePorts = "Webserver could not be added. Both Public Ports are same. Please choose different Public HTTP and HTTPS port.";
Message.WebServerSamePublicIP = "Webserver could not be added. Webserver with same Public IP/Domain and same HTTP/S Port already exists, choose a different Public IP/Domain or Port.";
Message.WebServerUpdateIPConflict = "Webserver could not be updated. Webserver/Virtual Host with same IP Address already exists, choose a different Public IP Address.";
Message.WebServerUpdatePortConflict = "Webserver could not be updated. Webserver/Virtual Host with same Port/Port Range already exists. Please choose a different  Public Port.";
Message.WebServerUpdateSamePorts = "Webserver could not be updated. Both Public Ports are same. Please choose different Public HTTP and HTTPS port.";
Message.WebServerUpdateSamePublicIP = "Webserver could not be updated. Webserver with same Public IP/Domain and same HTTP/S Port already exists, choose a different Public IP/Domain or Port.";
Message.WebServerUpdateSucc = "Web Server '{webservername}' has been updated successfully.";
Message.WebServerUpdateFail = "Web Server '{webservername}' could not be updated.";
Message.WebServerDeleteSucc = "Web Server(s) has been deleted successfully.";
Message.WebServerDeleteFail = "Web Server(s) could not be deleted.";
Message.PasswdComplexityMisMatch="Invalid password. Password does not match with the complexity criteria.";
Message.DuplicateHostsModeDetail = "Host name across IP Host, IP Host Group, MAC Host, Virtual Host, FQDN Host, FQDN Host Group, Country Host, Country Host Group and Web Server cannot be same. Choose a different Host Name.";
Message.FQDNWebServerExists= "FQDN Host could not be deleted. Web Server exists for the FQDN Host.";
Message.HostWebServerExists= "Host could not be deleted. Web Server exists for the Host.";
Message.WebServerFwRuleExists= "Web Server could not be deleted. Firewall Rule exists for the Web Server.";
Message.IPHostUpdateWithRename = "Host '{hostname}' has been renamed to '{__newname}' and updated successfully.";
Message.MACUpdateWithRename = "MAC Host '{hostname}' has been renamed to '{__newname}' and updated successfully.";
Message.FQDNUpdateWithRename = "FQDN Host '{hostname}' has been renamed to '{__newname}' and updated successfully.";
Message.UpdateCountryHostWithRename = "Country Host '{hostname}' has been renamed to '{__newname}' and updated successfully.";
Message.HGUpdateWithRename= "Host Group '{hostgroupname}' has been renamed to '{__newname}' and updated successfully.";
Message.ServiceUpdateWithRename= "Service '{servicename}' has been renamed to '{__newname}' and updated successfully.";
Message.ServiceGrpUpdateWithRename = "Service Group '{servicegroupname}' has been renamed to '{__newname}' and updated successfully.";
Message.ScheduleUpdateWithRename = "Schedule '{schedulename}' has been renamed to '{__newname}' and updated successfully.";
Message.FileTypeUpdateWithRename= "File type '{name}' has been renamed to '{__newname}' and updated successfully.";
Message.FirewallRuleUpdateWithRename = "Firewall Rule '{rulename}' has been renamed to '{__newname}' and updated successfully.";
Message.VHUpdateWithRename = "Virtual Host '{virtualhostname}' has been renamed to '{__newname}' and updated successfully.";
Message.FWRuleUpdateRecordExist = "Firewall Rule could not be updated. Firewall Rule '{__newname}' already exists, choose a different name.";
Message.FQDNUpdateRecordExists =  "FQDN Host '{hostname}' could not be updated.";
Message.CountryHostUpdateExists = "Country Host '{hostname}' could not be updated.";
Message.ServiceRecordUpdateExist = "Service could not be updated. Service or Service Group with same name as '{__newname}' already exists, choose a different name.";
Message.ServiceGrpUpdateRecordExist= "Service Group could not be updated. Service or Service Group '{__newname}' already exists, choose a different name.";
Message.ScheduleUpdateRecordExists = "Schedule could not be updated. Schedule with the same name as '{__newname}' already exists, choose a different name.";
Message.FileTypeUpdateRecordExists ="File type could not be updated. File type '{__newname}' already exists, choose a different name.";
Message.AFPForeignKeyFWExists = "Application Filter Policy could not be deleted. Policy is already assigned to one or more firewall rule.";
Message.AdminaccessAuxiliaryDevice = "Only Administrator can access the Auxiliary Device.";
Message.DNSStaticRecordExists = "Failed to add DNS Host Entry.DNS Host Entry with same host/domain  name already exist. Provide a different host/domain name.";
Message.DNSStaticAddFail = "Failed to add DNS Host Entry. One or more parameters ( Host/Domain Name/TTL/IP Address ) is missing or invalid.";
Message.DNSStaticAddFailSpe = "Failed to add DNS Host Entry. Contact support.";
Message.DNSStaticAddSuccess = "DNS Host Entry '{fqdn}' is added successfully.";
Message.DNSStaticUpdateFail = "Failed to update DNS Host Entry. One or more parameters ( Host/Domain Name/TTL/IP Address ) is missing or invalid.";
Message.DNSStaticUpdateFailSpe = "Failed to update DNS Host Entry. Contact support.";
Message.DNSStaticUpdateSuccess = "DNS Host Entry '{fqdn}' is updated successfully.";
Message.DNSStaticDelFail = "Failed to delete DNS Host Entry. Domain name does not given.";
Message.DNSStaticDelFailSpe = "Failed to delete DNS Host Entry. Contact support.";
Message.DNSStaticDelSuccess = "DNS Host Entry has been deleted successfully.";
Message.DNSStaticRecordNotExists = "Failed to delete DNS Host Entry.No record with such domain/host name exists.";
Message.CTASSettingSuccessMsg="CTAS Settings has been applied successfully.";
Message.CTASSettingFailMsg="CTAS Settings could not be applied.";
Message.NTLMSettingSuccessMsg="NTLM Settings has been applied successfully.";
Message.NTLMSettingFailMsg="NTLM Settings could not be applied.";
Message.IOSSettingSuccessMsg="Web Client Settings ( iOS and Android ) has been applied successfully.";
Message.IOSSettingFailMsg="Web Client Settings ( iOS and Android ) could not be applied.";
Message.DNSStaticFailReverseResolve = "Failed to add/update DNS Host Entry. Identical configuration '{domainName}' already exists.";
Message.DNSStaticAddFailMaximum = "Failed to add DNS Host Entry. Maximum 1024 DNS Host entries are allowd.";
Message.WebCatURLAddFail = "URL could not be added. A Keyword already exist for the provided domain.";
Message.AppCriteriaNotAvail  = "Invalid parameter and hence could not be added/updated";
Message.AppServiceAddRunFail= "Application Filter Policy has been successfully added, but the service failed to restart.";
Message.AppServiceUpdateRunFail= "Application Filter Policy has been successfully updated, but the service failed to restart.";
Message.InvalidFileExtensionCharacter="File Extension cannot contain comma, single quotes and double quotes characters.";
Message.InvalidFileExtCharSize="File Extension size cannot be greater than 255.";
Message.RecordNotExists= "Record does not exist";
Message.FWRuleFailMaxService = "Failed to Create/Update the firewall rule as more than 1024 objects have been selected simultaneously. Please unselect a few Users/User Groups.";
Message.FWRuleFailMaxSourceHost = "Failed to Create/Update the firewall rule as more than 1024 objects have been selected simultaneously. Please unselect a few Source Hosts/Host Groups.";
Message.FWRuleFailMaxDestHost = "Failed to Create/Update the firewall rule as more than 1024 objects have been selected simultaneously. Please unselect a few Destination Hosts/Host Groups.";
Message.FWRuleFailMaxUser = "Failed to Create/Update the firewall rule as more than 1024 objects have been selected simultaneously. Please unselect a few Services/Service Groups.";
Message.SysServerReservedName = "The name \"Central_Management\" is reserved for \"Syslog Servers\". Choose another name.";
Message.RegenerateCASuccess="Certificate Authority has been regenerated successfully";
Message.RegenerateCAFail="Certificate Authority could not be regenerated";
Message.CAKeyNotProper="Failed to upload Certificate Authority. Invalid private key file or password.";
Message.CertSubjectExists="Failed to generate the certificate. Certificate with identical Identification Attributes already exist.";
Message.SomeRoutesNotDeleted="One or more Multicast Routes) could not be deleted.";
Message.SrcInterfaceNotVerified="Configuration is saved successfully but could not be applied to system; It is recommended to verify the status of Source Interface.";
Message.SrcInterfaceNotFetch="Configuration is saved successfully but could not be applied to system. Internal error.";
Message.DstInterfaceNotCheck="Configuration is saved successfully but could not be applied to system; It is recommended to verify the status of Destination Interface(s).";
Message.ConfSavedSuccessfully="Configuration is saved successfully but could not be applied to system; Internal error.";
Message.InvalidSrcIDAddr="Invalid Source IP Address. Source IP Address must not be in the range of 224.0.0.0  to  239.255.255.255.";
Message.InvalidDstIDAddr="Invalid Destination IP Address. Destination Address must be in the range of 224.0.2.0 to 239.255.255.255.";
Message.DiffInputInterfaceForSameSrcDst="Provided Input Interface conflicts with an existing Multicast Route's Input Interface having same Source and Destination IP Addresses .";
Message.RouteExistsMsg="Multicast Route could not be updated. Multicast Route with similar configuration already exists.";
Message.RouteNotAdded="Multicast Route could not be updated. Internal error occured while saving the configuration.";
Message.FailedToRemoveOldRoute="Existing configuration could not be updated. Internal error.";
Message.FailedToAddNewRoute="Multicast route could not be added. Internal error.";
Message.WFCCategoryDetailCannotUpdated = "Web filter category created successfully without one or more invalid Domains or Keywords.";
Message.PurgeADUsersSucess = "AD Purge users proccess started successfully.";
Message.PurgeADUsersFail =  "AD Purge users proccess failed.";
Message.IPSecConnFailoverGrpSuccess="Failover group with defined connections added successfully.";
Message.IPSecConnFailoverGrpFail="Operation failed. An error occurred during the operation.";
Message.IPSecConnAlreadyExist="Connection name(s) already exists. Choose another name.";
Message.IPSecLocalRemoteSubnetSame="Failed to create the connection. Local Subnet and Remote LAN Network must be different.";
Message.IPSecPSKNotSame1="Failed to create the connection.All the connections with Authentication Type 'Preshared Key' between a pair of End Points must have same Pre-shared keys.";
Message.IPSecPSKNotSame2="Multiple connections with same end points but different Preshared keys exists. You must modify preshared keys to be same.";
Message.FailoverGroupExist="Failed to create the connection. Failover Group Name '{connectiongroupname}' already exist.";
Message.IPSecConnectionSaveFail="Failed to save the configuration for Connection(s).An error occurred while saving the configuration.";
Message.FailoverGroupSaveFail="Failed to save the configuration for Connection '{connectiongroupname}'.An error occurred while saving the failover configuration.";
Message.DHCPServerNotConfWANSubnet = "DHCP Server cannot be configured for WAN subnet.";
Message.CAKeyMustSupport = "Failed to update Certificate Authority (CA). Since CA is used in HTTPS scanning, you must update all its parameters.";
Message.CAManageDeleteFailCAisUsed = "Failed to delete the Certificate Authority (CA). CA is already in use for HTTPS scanning.";
Message.UserNotImported="Users not imported.";
Message.CertWebServerChildExists= "Certificate could not be deleted. Certificate is already used in Web Server.";
Message.CertWebServerRevokeChildExists = "Certificate cannot be revoked. It is already being used in Web Server.";
Message.GatewayUpdateWithRename = "Gateway Name '{gatewayid}' has been renamed to '{gatewayname}' and updated successfully.";
Message.FailedSSLVPNUpdation="Failed to update Administrator Settings. Initial configuration should be done from VPN -> SSL -> Tunnel Access.";
Message.ConfSuccessModemFail = "Configuration saved successfully, but Modem not found.";
Message.DialupNotSupport = "Current modem does not support the configured Dial-up(PPP) method.";
Message.NetworkAdapterNotSupport = "Current modem does not support the configured Network Adapter(DHCP) method.";
Message.ModemPortNotResponding = "No response from the configured modem port.";
Message.ModemNotConnect = "Modem is not able to connect.";
Message.PasswordGenerated="This passphrase is required to establish the SSL VPN tunnel after logging into the client.<br/>Passphrase: {password}";
Message.PasswordNotGenerated="Download the client/client configuration to view the passphrase. ";
Message.EmailNotConfigured="Failed to send the Passphrase. Email Address is not configured.";
Message.PassphraseEmailSent="The Passphrase has been successfully sent to the configured Email Address.";
Message.FailToSentPassphrase="Failed to send the Passphrase.";
Message.L2TPConflictWithPPTP="IP Address range could not be added. One or more IP Address(s) already configured for PPTP.";
Message.PPTPConflictWithL2TP="IP Address range could not be added. One or more IP Address(s) already configured for L2TP.";
Message.InvalidCertificateFile="Certificate file may be corrupted.";
Message.LanguageUpdateFail="Default Configuration Language updated successfully.";
Message.LanguageUpdateSuccess="Default Configuration Language could not be updated.";
Message.RegenerateCertSuccess="Certificate has been regenerated successfully";
Message.RegenerateCertFail="Certificate could not be regenerated";
Message.BondAddSuccess = "LAG interface added successfully.";
Message.BondExists = "LAG interface already exists.";
Message.BondMemberMinRequired = "Atleast 2 member interfaces required.";
Message.BondMemberMaxRequired = "Maximum 4 member interfaces allowed.";
Message.BondMemberNotPhysical = "Member interface is not physical interface.";
Message.BondMemberAlreadyEnslaved =  "Member interface already enslaved.";
Message.BondMemberUnbound = "Member interface should be unbound.";
Message.AddLinkAggFail = "Add link aggregation failed.";
Message.BondAddFailed= "LAG interface could not be Added.";
Message.CanNotUnbindInterface = "Cannot unbind all interfaces.";
Message.BondUpdateSuccess = "LAG interface update successfully.";
Message.BondUpdateFailed = "LAG interface could not be updated.";
Message.MACHostDeleteSuccess= "MAC Host has been deleted successfully.";
Message.MACHostDeleteFailed= "MAC Host could not be deleted.";
Message.WebAdminSettingSuccess = "Web Admin Setting has been updated successfully";
Message.WebAdminSettingFail = "Web Admin Setting update failed";
Message.SSLVPNSettingSuccess = "SSL VPN Setting has been updated successfully";
Message.SSLVPNSettingFail =  "SSL VPN Setting update failed";
Message.LoginSecuritySuccess = "Login Security Setting has been updated successfully";
Message.LoginSecurityFail = "Login Security Setting update failed";
Message.AdminPasswordComplexitySettingSuccess = "Admin Password Complexity Setting has been updated successfully";
Message.AdminPasswordComplexitySettingFail = "Administrator Password Complexity Setting update failed";
Message.LoginDisclaimerSettingSuccess = "Login Disclaimer Setting has been updated successfully";
Message.LoginDisclaimerSettingFail = "Login Disclaimer Setting update fail";
Message.IPv6SettingSuccess = "Display Settings has been updated successfully";
Message.IPv6SettingFail = "Display Settings update fail";
Message.PasswordNotGeneratedEmail="Download the client/client configuration to receive passphrase through Email. ";
Message.SLAACADDEditSuccess="Router Advertisement configuration has been applied successfully";
Message.SLAACADDEditUnsuccess="Router Advertisement configuration fail";
Message.SLAACDeleteSuccess="Router Advertisement configuration has been deleted successfully";
Message.SLAACDeleteUnsuccess="Router Advertisement configuration delete fail";
Message.IPTunnelAddSuccess = "IP Tunnel '{name}' has been created successfully.";
Message.IPTunnelAddFail = "IP Tunnel '{name}' could not be created.";
Message.IPTunnelRecordExists = "IP Tunnel could not be created. IP Tunnel with same name as '{name}' already exists, choose a different name.";
Message.IPTunnelSameLocalRemoteAdd = "IP Tunnel could not be created. A Tunnel with the same End Point(s) already exists.";
Message.IPTunnelUpdateSucc = "IP Tunnel '{tunnelid}' has been updated successfully.";
Message.IPTunnelUpdateFail = "IP Tunnel '{tunnelid}' could not be updated.";
Message.IPTunnelTypeChange = "IP Tunnel could not be updated. Change in Tunnel Type is not allowed.";
Message.IPTunnelSameLocalRemoteUpdate = "IP Tunnel could not be updated. A Tunnel with the same End Point(s) already exists.";
Message.IPTunnelDeleteSucc = "IP Tunnel(s) has been deleted successfully.";
Message.IPTunnelDeleteFail = "IP Tunnel(s) could not be deleted.";
Message.IPTunnelUnicastAddSucc = "Static Unicast Routes has been created successfully.";
Message.IPTunnelUnicastAddFail = "Static Unicast Routes could not be created.";
Message.GWNotInterfaceRange= "Invalid Gateway IP Address. It must be in the Interface IP Address range.";
Message.OSPFGlobalConfiguarionSuccess = "OSPF Global Configuration has been updated successfully.";
Message.OSPFGlobalConfiguarionFail = "OSPF Global Configuration could not be updated.";
Message.OSPFAreaAddSuccess = "OSPF Area '{id}' has been added successfully.";
Message.OSPFAreaAddFail = "OSPF Area could not be added.";
Message.OSPFAreaUpdateSuccess = "OSPF Area '{id}' has been updated successfully.";
Message.OSPFAreaUpdateFail = "OSPF Area could not be updated.";
Message.OSPFAreaDeleteSuccess = "OSPF Area has been deleted successfully.";
Message.OSPFAreaDeleteFail = "OSPF Area could not be deleted.";
Message.OSPFNetworkAddSuccess = "OSPF Network '{network}' has been added successfully."; 
Message.OSPFNetworkAddFail = "OSPF Network could not be added.";
Message.OSPFNetworkUpdateSuccess = "OSPF Network '{network}' has been updated successfully.";
Message.OSPFNetworkUpdateFail = "OSPF Network could not be updated.";
Message.OSPFNetworkDeleteSuccess = "OSPF Network has been deleted successfully.";
Message.OSPFNetworkDeleteFail = "OSPF Network could not be deleted.";
Message.OSPFInterfaceConfAddSuccess = "OSPF Interface Configuration of '{interfacename}' has been added successfully.";
Message.OSPFInterfaceConfAddFail = "OSPF Interface Configuration could not be added.";
Message.OSPFInterfaceConfUpdateSuccess = "OSPF Interface Configuration of '{interfacename}' has been updated successfully.";
Message.OSPFInterfaceConfUpdateFail = "OSPF Interface Configuration could not be updated.";
Message.OSPFInterfaceConfDeleteSuccess = "OSPF Interface Configuration of '{interfacename}' has been deleted successfully.";
Message.OSPFInterfaceConfDeleteFail = "OSPF Interface Configuration could not be deleted.";
Message.OSPFReadConfFail = "Unable to read OSPF Configuration.";
Message.OSPFContentOnFail = "Unable to read OSPF Configuration.";
Message.OSPFReadIFConfFail = "Unable to read Interface Configuration.";
Message.GWNotPrefixRange = "Gateway And Prefix Not In Range";
Message.MaximumRangeOfExternalAdd = "Virtual Host could not be created. External IP Address Range can have a maximum of 128 IP Addresses.";
Message.MaximumRangeOfExternalUpdate = "Virtual Host could not be updated. External IP Address Range can have a maximum of 128 IP Addresses.";
Message.MaximumRangeOfMappedAdd = "Virtual Host could not be created. Mapped IP Address Range can have a maximum of 128 IP Addresses.";
Message.MaximumRangeOfMappedUpdate = "Virtual Host could not be updated. Mapped IP Address Range can have a maximum of 128 IP Addresses.";
Message.L2TPPPTPIPAddressAlreadyExistUserAdd = "User could not be created. A user with same L2TP/PPTP IP Address already exist.";
Message.L2TPPPTPIPAddressAlreadyExistUserUpdate = "User could not be updated. A user with same L2TP/PPTP IP Address already exist.";
Message.HostIPSecConnectionExists= "Host could not be deleted. IPSec Connection exists for the Host.";
Message.RIPGlobalConfiguarionSuccess = "RIP Global Configuration has been updated successfully.";
Message.RIPGlobalConfiguarionFail = "RIP Global Configuration could not be updated.";
Message.RIPNetworkAddSuccess = "RIP Network '{network}' has been added successfully."; 
Message.RIPNetworkAddFail = "RIP Network could not be added.";
Message.RIPNetworkUpdateSuccess = "RIP Network '{network}' has been updated successfully.";
Message.RIPNetworkUpdateFail = "RIP Network could not be updated.";
Message.RIPNetworkDeleteSuccess = "RIP Network has been deleted successfully.";
Message.RIPNetworkDeleteFail = "RIP Network could not be deleted.";
Message.RIPInterfaceConfAddSuccess = "RIP Interface Configuration of '{interfacename}' has been added successfully.";
Message.RIPInterfaceConfAddFail = "RIP Interface Configuration could not be added.";
Message.RIPInterfaceConfUpdateSuccess = "RIP Interface Configuration of '{interfacename}' has been updated successfully.";
Message.RIPInterfaceConfUpdateFail = "RIP Interface Configuration could not be updated.";
Message.RIPInterfaceConfDeleteSuccess = "RIP Interface Configuration of '{interfacename}' has been deleted successfully.";
Message.RIPInterfaceConfDeleteFail = "RIP Interface Configuration could not be deleted.";
Message.RIPReadConfFail = "Unable to read RIP Configuration.";
Message.RIPContentOnFail = "Unable to read RIP Configuration.";
Message.RIPReadIFConfFail = "Unable to read Interface Configuration.";
Message.BGPGlobalConfiguarionSuccess = "BGP Global Configuration has been updated successfully.";
Message.BGPGlobalConfiguarionFail = "BGP Global Configuration could not be updated.";
Message.BGPNetworkAddSuccess = "BGP Network '{network}' has been added successfully."; 
Message.BGPNetworkAddFail = "BGP Network could not be added.";
Message.BGPNetworkUpdateSuccess = "BGP Network '{network}' has been updated successfully.";
Message.BGPNetworkUpdateFail = "BGP Network could not be updated.";
Message.BGPNetworkDeleteSuccess = "BGP Network has been deleted successfully.";
Message.BGPNetworkDeleteFail = "BGP Network could not be deleted.";
Message.BGPNeighborAddSuccess = "Neighbor '{ip}' has been added successfully.";
Message.BGPNeighborAddFail = "Neighbor could not be added.";
Message.BGPNeighborUpdateSuccess = "Neighbor '{ip}' has been updated successfully.";
Message.BGPNeighborUpdateFail = "Neighbor could not be updated.";
Message.BGPNeighborDeleteSuccess = "Neighbor '{ip}' has been deleted successfully.";
Message.BGPNeighborDeleteFail = "Neighbor could not be deleted.";
Message.BGPReadConfFail = "Unable to read BGP Configuration.";
Message.BGPContentOnFail = "Unable to read BGP Configuration.";
Message.HALoadBalanceDisabled = "HA has been successfully configured. Traffic Load Balancing is disabled.";
Message.HALoadBalanceDisabledMore = "The number of ports is different on both the nodes of the cluster, so Traffic Load Balancing is disabled.";
Message.TestMailSuccess = "Test Mail has been sent successfully.";
Message.TestMailFail = "Failed to send the Test Mail on the Email Address. For more details, refer Log Viewer.";
Message.GuestUserAddSuccess="Guest User has been added successfully.";
Message.GuestUserAddFail="Guest User could not be added .";
Message.FailToConnectMailServer="Failed to connect to the Mail Server. For more information please check the Log Viewer.";
Message.SMTPServerFailed="SMTP Server failed to respond. Please try after some time.";
Message.SMTPPasswordMismatch="Password Mismatch. Please key-in the correct password.";
Message.SMTPAuthMismatch="Authentication method mismatch. Please confirm the authentication method support for LOGIN or PLAIN on the Mail Server.";
Message.ConnectSecurityMethodNotSupported="Connection security method STARTTLS not supported by the server. Please check the mail notification configuration.";
Message.MailServerRefuseCommunicate="Mail Server refused to communicate. For more information please check the Log Viewer.";
Message.CertSMTPChildExists= "Certificate could not be deleted. Certificate is already used in Notification.";
Message.AddBridgePairHAConfigured='Bridge-pair could not be configured. One of the selected interface is either configured as HA Dedicated Link or Peer Administration port.';
Message.AddBridgePairAddMonitorPort='Bridge-pair could not be configured. One or both of the bridge interfaces are configured as Monitoring Port in HA.';
Message.UpdateBridgePairHAConfigured='Bridge-pair could not be updated. One of the selected interface is either configured as HA Dedicated Link or Peer Administration port.';
Message.UpdateBridgePairUpdateMonitorPort='Bridge-pair could not be updated. One or both of the bridge interfaces are configured as Monitoring Port in HA.';
Message.BridgePairDeleteMonitorPort='Bridge-pair could not be deleted. One or both of the bridge interfaces are configured as Monitoring Port in HA.';
Message.BridgePairDeleteAdministrationLink='Bridge-pair could not be deleted. One of the bridge interfaces is configured as Peer Administration port in HA.';
Message.IPConflictWithSSLVPNOnADD="Alias could not be created. The given IP address is already a part of IP Lease Range in SSL VPN.";
Message.IPConflictWithSSLVPNOnEdit="Alias could not be updated. The given IP address is already a part of IP Lease Range in SSL VPN.";
Message.AddrGrpEmailArcKeyExists = "Address Group could not be deleted. Address Group is used in Email Archiver.";
Message.VHZoneNotBind="Virtual Host could not be created. The selected Zone is not bound to any Interface.";
Message.CheckBookmarkUrl = "Bookmarked URL '{LongURL}' will be saved as '{ShortURL}'.";
Message.DisableIPv6 = "Display Settings for IPv6 configuration could not be disabled.";
Message.InterfaceIPExists = "Can not configure the local system as Neighbor";
Message.FQDNHostLimit = "Host could not be added. The maximum creation limit exceeded.";
Message.BGPConfigurationFail = "Disable \"bgp multiple-instance\" from CLI to do configuration from GUI";
Message.CACertAlreadyExist = "Certificate Authority (CA) could not be uploaded. CA Certificate already exists, choose another CA.";
Message.DHCPSERverNotConfwithDiffSubnet="The IP Lease Range should be from the same subnet";
Message.LAGNameConflict = "Duplicate interface with same name already exists. Please select a new name.";
Message.ASpamTestMailSuccess="Email has been sent successfully.";
Message.ASpamTestMailFail="Email could not be sent.";
Message.InterfaceDELETE_LAST_IFACE = "You cannot delete this Interface as Appliance is accessible only through this Interface.";
Message.DHCPRelayOneIPRequired = "At least one IP is required.";
Message.DHCPRelayAddIPAlreadyExists="DHCP Server IP already exists.";
Message.NeighbourFlushSuccess = "Neighbor Cache has been flushed successfully.";
Message.NeighbourFlushFailed = "Neighbor Cache flush failed.";
Message.TrustedMACUpdateSuccess="Trusted MAC has been updated successfully.";
Message.TrustedMACUpdateFail="Trusted MAC could not be updated.";
Message.PPPoEConnectSuccess="PPPoE interface \"{interfacename}\" connect initialize successfully.";
Message.PPPoEConnectFail="PPPPoE interface \"{interfacename}\" connect fail.";
Message.PPPoEDisconnectSuccess="PPPoE interface \"{interfacename}\" disconnected successfully.";
Message.PPPoEDisConnectFail="PPPoE interface \"{interfacename}\" disconnect fail.";
Message.DynDebugFail = "Unable to read routing information.";
Message.LAGMemberInterfaceUpdateFail="LAG Interface is part of HA configuration so change in members interface is not allowed.";
Message.LAGInterfaceDeleteFail="The Interface could not be deleted. Selected Interface is part of the HA configuration.";
Message.DuplicatesNotAllowed="Duplicate entries of Gateway is not allowed.";
Message.NoMoreRows="You can not add more rows.";
Message.NotNone="You can not set any value as None.";
Message.IPSDetailSuccess= "IPS Policy Rule \"{rulename}\" has been created successfully.";
Message.IPSDetailFail= "IPS Policy Rule \"{rulename}\" could not be created.";
Message.IPSDetailUpdateSuccess= "IPS Policy Rule \"{rulename}\" has been updated successfully.";
Message.IPSDetailUpdateFail= "IPS Policy Rule \"{rulename}\" could not be updated.";
Message.IPSDeleteDetailSuccess= "IPS Policy has been deleted successfully.";
Message.IPSDeleteDetailFail= "IPS Policy Rule could not be deleted.";
Message.IPSUpdateOrderSuccess= "IPS Policy order has been updated successfully.";
Message.ADTestConnectionFailedLogViewer= "Appliance - AD server connectivity test failed. For more details, refer Log Viewer.";
Message.LDAPTestConnectionFailedLogViewer= "Appliance - LDAP server connectivity test failed. For more details, refer Log Viewer.";
Message.AuxRunningConf = "Please check primary appliance for routing information.";
Message.NATPolicyGatewayExists="NATPolicy could not be deleted. NATPolicy is assigned to the Gateway.";
Message.RebootingPeerFirst="Firmware applied successfully. Now peer appliance is rebooting with '{version}'. ";
Message.RebootingPeerFirstMoreInfo="After peer appliance reboots successfully, this appliance will reboot and peer appliance will become Primary appliance.";
Message.HARebootSimultaneously="All the appliances in the HA cluster will reboot simultaneously. Do you want to continue?";
Message.UpgradeFinish="Upgrade process is finished. Please check the appliance firmware version and HA status.";
Message.HACommunicationProtoMismatch="As the communication protocol for the HA cluster is upgraded in the new firmware, all the appliances in the HA cluster will reboot simultaneously. Do you want to continue?";
Message.IPSUpdateRuleOrderFail= "IPS Policy order could not be updated.";
Message.ForwardedConnNotPersist="As the connection failover protocol for the HA cluster is upgraded in new firmware, ongoing forwarded traffic will get disconnected. Do you want to continue?";
Message.CustomSignatureInUse="Custom Signature could not be deleted. Custom Signature already in use.";
Message.IPSPolicyRecordExists = "IPS Policy with same rule name already exists.";
Message.HAPeerIPLinkPort="Peer HA Link IP Address is not assigned on Peer HA Link Port.";
Message.DHCPRelayRecordExists = "DHCP relay with the same name already exists. Please choose a different name.";
Message.DDNSServiceUnavailable="DDNS service is temporarily unavailable.";
Message.DDNSNameExists="Host name is already taken please use other host name.";
Message.CategoryAddedSuccessfully="Category added successfully";
Message.URLsCouldNotBeDownloaded="URLs for Web Category \"{name}\" could not be downloaded because of failure of Internet service or invalid URL or the update server is not reachable.";
Message.URLsPartiallyDownloaded="URLs for Web Category \"{name}\" partially downloaded. Please wait for auto-update.";
Message.URLsAreInvalid="URLs for Web Category \"{name}\" partially downloaded, but either the URLs are invalid or the updated file size is zero. Please wait for auto-update.";
Message.AllURLsAreSuccessfullyDownloaded="All URLs for Web Category \"{name}\" are successfully downloaded, but either the URLs are invalid or the updated file size is zero. Please wait for auto-update.";
Message.YouCannotAddAnyMoreURLs="You cannot add any more URLs for Web Category \"{name}\" because local memory limit for downloaded files has been breached. Please remove a few URLs or categories.";
Message.CategoryDatabaseUpToDate="Your \"{name}\" category database is already Up-to-Date";
Message.UpdatesAppUpdateSucc="Application Signature updated successfully.";
Message.UpdatesAppUpdateFail="Application Signature update failed.";
Message.PIMConfigurationSuccess = "PIM Configuration has been updated successfully.";
Message.PIMConfigurationFail = "PIM Configuration could not be updated.";
Message.Max16RangeAllowed="You can add maximum 16 RADIUS Client IPs.";
Message.DuplicatesNotAllowedForClientIP="Duplicate entries of Radius Client IP is not allowed.";
Message.VPNSingleSignSuccess="SSO-based authentication for VPN users configured successfully.";
Message.VPNSingleSignFailed="SSO-based authentication for VPN users could not be configured successfully.";
Message.SecretNotBlank="Shared Secret cannot be blank.";
Message.RadiusClientIPNotBlank="Radius Client IP cannot be blank.";
Message.FWSSOUsingRadiusSuccess="RADIUS Client IP Address added successfully for RADIUS SSO Authentication.";
Message.FWSSOUsingRadiusFailed="RADIUS Client IP Address could not be added successfully for RADIUS SSO Authentication.";
Message.SameInterface="You can not use same interface twice.";
Message.ProcessUsingSameResources="A process using the same resources is executing parallelly. Please wait for it to conclude.";
Message.MulticastEnableFail1 = "You cannot configure both Multicast Forwarding and PIM concurrently. To configure Multicast Forwarding, disable PIM.";
Message.PIMConfigurationFail1 = "You cannot configure both PIM and Multicast Forwarding concurrently. To configure PIM, disable Multicast Forwarding.";
Message.ExportConfigurationSuccessfully="Export configuration file has been created successfully.";
Message.ExportConfigurationFail="Export configuration file fail.";
Message.ImportFileNotFound="File Not Found.";
Message.ImportFileNotValid="Invalid File Passed.";
Message.APIImportSuccessfully="API Import Successfully.";
Message.APIImportFail="API Import Fail.";
Message.AVGeneralConfCertValidity = "Certificate not valid.";
Message.CsvIPHostAddLimit = "Host could not be added. IP List can have a maximum of 1000 IP Addresses.";
Message.CsvIPHostUpdateLimit = "Host could not be updated. IP List can have a maximum of 1000 IP Addresses.";
Message.CsvMACHostAddLimit = "Host could not be added. MAC List can have a maximum of 1000 MAC Addresses.";
Message.CsvMACHostUpdateLimit = "Host could not be updated. MAC List can have a maximum of 1000 MAC Addresses.";
Message.ICAPServerAddSuccess = "ICAP server '{servername}' has been added successfully.";        
Message.ICAPServerAddFail = "ICAP server '{servername}' could not be added.";
Message.ICAPServerUpdateSuccess = "ICAP server '{servername}' has been updated successfully.";  
Message.ICAPServerUpdateFail = "ICAP server '{servername}' could not be updated.";  
Message.ICAPServerDeleteSuccess = "ICAP server has been deleted successfully.";     
Message.ICAPServerDeleteFail = "ICAP server could not be deleted.";    
Message.ICAPServerConfExists = "ICAP server '{servername}' with same configuration already exists."; 
Message.ICAPPolicyAddSuccess = "ICAP policy '{policyname}' has been added successfully.";        
Message.ICAPPolicyAddFail = "ICAP policy '{policyname}' could not be added.";
Message.ICAPPolicyUpdateSuccess = "ICAP policy '{policyname}' has been updated successfully.";  
Message.ICAPPolicyUpdateFail = "ICAP policy '{policyname}' could not be updated.";  
Message.ICAPPolicyDeleteSuccess = "ICAP policy has been deleted successfully.";     
Message.ICAPPolicyDeleteFail = "ICAP policy could not be deleted.";    
Message.ICAPPolicyConfExists = "ICAP policy '{policyname}' with same configuration already exists."; 
Message.ICAPServerDeleteBinded = "Some servers are binded on ICAP policy";
Message.ICAPPolicyDeleteBinded  = "Some ICAP policies are binded on Firewall Rule";
Message.QoSSettingSuccess="QoS Setting has been updated successfully.";
Message.QoSSettingFail="QoS Setting could not be updated.";
Message.ApplianceNotActivated="Appliance is not activated, please contact support at {OEM.WC_SUPPORT_MAILID}.";
Message.ApplianceNotSynchronized="Appliance could not be synchronized, please contact support at {OEM.WC_SUPPORT_MAILID}.";
Message.ICAPPolicyConf = "ICAP Policy Configuration is saved successfully but could not be applied to the system.";
Message.ICAPServerConf = "ICAP Server Configuration is saved successfully but could not be applied to the system.";
Message.UnicastUpdateRecordExists = "Unicast Route could not be updated. Unicast Route '{destinationip}' already exists.";
Message.APIConfigSuccessfully="API Configuration Successfully.";
Message.APIConfigFail="API Configuration Fail.";
Message.LAGGWBasedRuleExist = "LAG Interface could not be updated. Gateway Based firewall rule exists.";
Message.BackupTakenSuccessfully="Backup has been taken successfully.";
Message.ICAPUniqueServer = "ICAP server could not be updated.ICAP server with same IP address, port and service already exists.";
Message.ZoneVirtualHostExists="Zone could not be deleted. Virtual Host exists for Zone.";
Message.HostVHExceed255="Host could not updated. On updating Host, the total number of IP Address bound to its Virtual Host will exceed 255.";
Message.HostVHExceed128="Host could not updated. On updating Host, the total number of IP Address bound to its Virtual Host will exceed 128.";
Message.WAFCreate255PrivateIP="Web Server could not be created. More than 255 Private IP Addresses cannot be bound to a Web Server.";
Message.WAFUpdate255PrivateIP="Web Server could not be update. More than 255 Private IP Addresses cannot be bound to a Web Server.";
Message.VHv4Create255IP="Virtual Host could not be created. More than 255 IP Addresses cannot be bound to a Virtual Host.";
Message.VHv6Create128IP="Virtual Host could not be created. More than 128 IP Addresses cannot be bound to a Virtual Host.";
Message.VHv4Update255IP="Virtual Host could not be update. More than 255 IP Addresses cannot be bound to a Virtual Host.";
Message.VHv6Update128IP="Virtual Host could not be update. More than 128 IP Addresses cannot be bound to a Virtual Host.";
Message.BackupNowFailed="Backup could not be generated.";
Message.BackupNowFailedReason="Backup could not be sent due to incorrect Server configuration.";
Message.PartitionIssue="Firmware could not be upgraded due to partition issue. Please contact your product support team.";
Message.ICAPPolicyAddLimitChk="ICAP policies have reached its maximum limit.You cannot add more than 255 policies.";
Message.TapInterfaceConfSucess="Tap Interface configured successfully";
Message.TapInterfaceConfFailed="Tap Interface configuration failed";
Message.MoveFWRulesSuccess="Firewall rule(s) reordered successfully.";
Message.MoveFWRulesFailed="Firewall rule(s) could not be reordered.";
Message.cannotReorderSysRule="Firewall rule(s) could not be reordered as some of the rules are system rules.";
Message.FWRulesZoneConflict="Firewall rule(s) could not be reordered as some of the rules are of different Zone.";
Message.FWRulesNotExist="Firewall rule(s) could not be reordered as some of the rules do not exist in the Managed Appliance.";
Message.CISCOVPNSuccess = "CISCO VPN client configuration has been reset successfully.";
Message.CISCOVPNFail = "CISCO VPN client configuration reset failed. ";
Message.NetflowSuccessfully="Netflow Configuration has been updated Successfully.";
Message.NetflowFail="Netflow Configuration could not be updated.";
Message.WPGlobalSettingsSuccessfully="Global Settings has been updated Successfully.";
Message.WPGlobalSettingsFail="Global Settings could not be updated.";
Message.WPGroupSuccess="Group '{name}' has been created successfully.";
Message.WPGroupCreated = "Group '{name}' could not be added.";
Message.WPGroupUpdateSuccessfully="Group '{name}' has been updated Successfully.";
Message.WPGroupUpdateFail="Group '{name}' could not be updated.";
Message.WPNetworkSuccess="Wireless Network '{ap_interfacename}' has been created successfully.";
Message.WPNetworkFail = "Wireless Network '{ap_interfacename}' could not be added.";
Message.WPNetworkUpdateSuccessfully="Wireless Network '{ap_interfacename}' has been updated Successfully.";
Message.WPNetworkUpdateFail="Wireless Network '{ap_interfacename}' could not be updated.";
Message.WPAPkUpdateSuccessfully="Access Point '{id}' has been updated Successfully.";
Message.WPAPUpdateFail="Access Point '{id}' could not be updated.";
Message.WPNetworkDeleteSuccess = "Wireless Network has been deleted successfully.";     
Message.WPNetworkDeleteFail = "Wireless Network could not be deleted.";
Message.WPMeshSuccess="Mesh Network '{ap_interfacename}' has been created successfully.";
Message.WPMeshCreatedFail = "Mesh Network '{ap_interfacename}' could not be added.";
Message.WPMeshUpdateSuccessfully="Mesh Network '{ap_interfacename}' has been updated Successfully.";
Message.WPMeshUpdateFail="Mesh Network '{ap_interfacename}' could not be updated.";
Message.WPGroupDeleteSuccess = "Group has been deleted successfully.";     
Message.WPGroupDeleteFail = "Group could not be deleted.";
Message.WPAccessPointDeleteSuccess = "Access Point has been deleted successfully.";     
Message.WPAccessPointDeleteFail = "Access Point could not be deleted.";
Message.WPMeshDeleteSuccess = "Mesh Network has been deleted successfully.";     
Message.WPMeshDeleteFail = "Mesh Network could not be deleted.";
Message.WPNetworkExists="Wireless/Mesh Network '{ap_interfacename}' could not be created. Wireless/Mesh Network with same name already exists.";
Message.WPGroupExists="Group '{name}' could not be created. Group with same name already exists.";
Message.WPMeshExists="Mesh/Wireless Network '{ap_interfacename}' could not be created. Mesh/Wireless Network with same name already exists.";
Message.WPNetworkInterfaceExists="Wireless Network '{ap_interfacename}' could not be created. Interface with same name already exists.";
Message.WPNetworkInterfaceExistsForUpdate="Wireless Network '{ap_interfacename}' could not be updated. Interface with same name already exists.";
Message.WPNetworkInterfaceIPExists="Wireless Network '{ap_interfacename}' could not be created. IP Address already assigned to some other Interface.";
Message.WPNetworkInterfaceIPExistsForUpdate="Wireless Network '{ap_interfacename}' could not be updated. IP Address already assigned to some other Interface.";
Message.WPNetworkGroupMax="Access Point '{id}' could not be updated. The Group uses more than the 8 Wireless Networks.";
Message.WPGroupMax="Group '{name}' could not be created. The Group uses more than the 8 Wireless Networks.";
Message.WPGroupMaxForUpdate="Group '{name}' could not be updated. The Group uses more than the 8 Wireless Networks.";
Message.WPAccessPointMax="Access Point '{id}' could not be updated. A maximum of 8 Wireless Networks per Access Point is supported.";
Message.WPAccessPointMesh="Access Point '{id}' could not be updated. The Access Point may only participate in one Mesh Network as Mesh Access Point.";
Message.WPMeshAP="Mesh Network '{ap_interfacename}' could  not be created. The Access Point may only participate in one Mesh Network as Mesh Access Point.";
Message.WPMeshAPForUpdate="Mesh Network '{ap_interfacename}' could not be updated. The Access Point may only participate in one Mesh Network as Mesh Access Point.";
Message.BothMustFromSameIPFamily="Source and Destination IP Address must belong to the same IP Family (IPv4 or IPv6).";
Message.TACACSPlusAddSuccess= "TACACS+ Server '{txtServerName}' has been added successfully.";
Message.TACACSPlusUpdateSuccess= "TACACS+ Server '{txtServerName}' has been updated successfully.";
Message.TACACSPlusAddFail= "TACACS+ Server could not be added.";
Message.TACACSPlusUpdateFail= "TACACS+ Server could not be updated.";
Message.TACACSPlusUpdateFailDetail= "TACACS+ Server could not be updated. TACACS+ Server already exists.";
Message.TACACSPlusRecordExists= "Authentication Server already exists.";
Message.TACACSPlusTestConnectionSuccess= "Appliance-TACACS+ server connectivity test was successful.";
Message.TACACSPlusTestConnectionFail= "Appliance-TACACS+ server connectivity test failed.";
Message.TACACSPlusDeleteSuccess= "TACACS+ Server has been deleted successfully.";
Message.TACACSPlusDeleteFailed= "TACACS+ Server could not be deleted.";
Message.TACACSPlusAddFailDetail="TACACS+ Server could not be added. TACACS+ Server with the same Name or IP already exists.";
Message.WPGroupMaxAP="Group '{name}' could not be created. A maximum of 8 wireless networks per Access Point is supported.";
Message.WPGroupMaxAPForUpdate="Group '{name}' could not be updated. A maximum of 8 wireless networks per Access Point is supported.";
Message.DHCPv6clientIPRenewReleaseSuccess="IP address leased by DHCP is {action} successfully.";
Message.DHCPv6clientIPRenewReleaseFail="IP address could not be {action}.";
Message.APNotSupport5GHz="Access Point can not participate in the wireless network because it does not support operation on the 5 GHz band.";
Message.CurrentVLANNotCompatible="The current VLAN tagging setting of this access point conflicts with Client Traffic option 'Bridge to VLAN'.";
Message.DiffVLANSettings="The group and the Access Point have different VLAN settings. The access point inherits the VLAN settings from the group.";
Message.VLANconflicts="The current VLAN tagging setting conflicts with Client Traffic option 'Bridge to AP LAN'.";
Message.APNotSupport5GHzForWireless="Access Point can not participate in the {wirelessName} wireless network because it does not support operation on the 5 GHz band.";
Message.APFiremwareSuccess = "AP Firmware has been downloaded successfully.";
Message.APFiremwareFail = "AP Firmware could not be downloaded.";
Message.APFiremwareInitiated = "Click Refresh to view the download progress and enable Wireless Protection once download is complete.";
Message.POPScanningRuleUpdated = "POP/S - IMAP/S Scanning Rule has been updated successfully.";
Message.POPScanningRuleFailed = "POP/S - IMAP/S Scanning Rule update failed.";
Message.DHCPv4ServerNotConf = "DHCPv4 Server could not be configured as DHCP/PPPoE client is already configured on the Interface.";
Message.DHCPv6ServerNotConf = "DHCPv6 Server could not be configured as DHCP/PPPoE client is already configured on the Interface.";
Message.DHCPInterfaceNotConfRA="Interface could not be configured for Router Advertisement as DHCP client is already configured on the Interface.";
Message.DHCPRelayNotConf="DHCP Relay could not be configured as DHCP/PPPoE client is already configured on the Interface.";
Message.DHCPPPPoEDetailsNotUpdated="DHCP/PPPoE Interface configuration details could not be updated as DHCP Server is already configured on the Interface.";
Message.DHCPRADetailsNotUpdated="DHCP/RA Interface configuration details could not be updated as interface is already configured for Router Advertisement.";
Message.ATPUpdateSuccess="Advanced Threat Protection has been updated successfully";
Message.ATPUpdateFail="Advanced Threat Protection update failed";
Message.HostSelectedInATP="Host could not be deleted.Host is already used in Advanced Threat Protection .";
Message.HostGroupSelectedInATP="Host Group could not be deleted.Host Group is already used in Advanced Threat Protection .";
Message.SPXUpdateSuccess = "SPX Policy has been updated successfully.";
Message.SPXUpdateFail = "SPX Policy update failed.";
Message.SPXAddSuccess = "SPX Policy '{name}' has been added successfully.";
Message.SPXAddFailed= "SPX Policy '{name}' could not be added.";
Message.SPXAddSameName = "SPX Policy with same name already exists.";
Message.SPXDeleteSuccess= "SPX policy has been deleted successfully.";
Message.SPXDeleteFailed= "SPX Policy could not be deleted.";
Message.DLPUpdateSuccess = "DLP Policy has been updated successfully.";
Message.DLPUpdateFail = "DLP Policy update failed.";
Message.DLPAddSuccess = "DLP Policy '{name}' has been added successfully.";
Message.DLPAddFailed= "DLP Policy '{name}' could not be added.";
Message.DLPAddSameName = "DLP Policy with same name already exists.";
Message.DLPDeleteSuccess= "DLP policy has been deleted successfully.";
Message.DLPDeleteFailed= "DLP Policy could not be deleted.";
